// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0-devel
// 	protoc        v3.19.4
// source: live/response/response_live.proto

package response

import (
	reflect "reflect"
	sync "sync"

	base "github.com/volcengine/volc-sdk-golang/service/base/models/base"
	business "github.com/volcengine/volc-sdk-golang/service/live/models/business"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *CreateDomainResponse) Reset() {
	*x = CreateDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainResponse) ProtoMessage() {}

func (x *CreateDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainResponse.ProtoReflect.Descriptor instead.
func (*CreateDomainResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{0}
}

func (x *CreateDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type ListDomainDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.DomainListInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *ListDomainDetailResponse) Reset() {
	*x = ListDomainDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDomainDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDomainDetailResponse) ProtoMessage() {}

func (x *ListDomainDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDomainDetailResponse.ProtoReflect.Descriptor instead.
func (*ListDomainDetailResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{1}
}

func (x *ListDomainDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *ListDomainDetailResponse) GetResult() *business.DomainListInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type DisableDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DisableDomainResponse) Reset() {
	*x = DisableDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableDomainResponse) ProtoMessage() {}

func (x *DisableDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableDomainResponse.ProtoReflect.Descriptor instead.
func (*DisableDomainResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{2}
}

func (x *DisableDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type EnableDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *EnableDomainResponse) Reset() {
	*x = EnableDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableDomainResponse) ProtoMessage() {}

func (x *EnableDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableDomainResponse.ProtoReflect.Descriptor instead.
func (*EnableDomainResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{3}
}

func (x *EnableDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DeleteDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DeleteDomainResponse) Reset() {
	*x = DeleteDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDomainResponse) ProtoMessage() {}

func (x *DeleteDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDomainResponse.ProtoReflect.Descriptor instead.
func (*DeleteDomainResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.DomainListInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeDomainResponse) Reset() {
	*x = DescribeDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDomainResponse) ProtoMessage() {}

func (x *DescribeDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDomainResponse.ProtoReflect.Descriptor instead.
func (*DescribeDomainResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeDomainResponse) GetResult() *business.DomainListInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type ManagerPullPushDomainBindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *ManagerPullPushDomainBindResponse) Reset() {
	*x = ManagerPullPushDomainBindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagerPullPushDomainBindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagerPullPushDomainBindResponse) ProtoMessage() {}

func (x *ManagerPullPushDomainBindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagerPullPushDomainBindResponse.ProtoReflect.Descriptor instead.
func (*ManagerPullPushDomainBindResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{6}
}

func (x *ManagerPullPushDomainBindResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeLiveStreamInfoByPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.LiveStreamInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeLiveStreamInfoByPageResponse) Reset() {
	*x = DescribeLiveStreamInfoByPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeLiveStreamInfoByPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeLiveStreamInfoByPageResponse) ProtoMessage() {}

func (x *DescribeLiveStreamInfoByPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeLiveStreamInfoByPageResponse.ProtoReflect.Descriptor instead.
func (*DescribeLiveStreamInfoByPageResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeLiveStreamInfoByPageResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeLiveStreamInfoByPageResponse) GetResult() *business.LiveStreamInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type DescribeClosedStreamInfoByPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.ClosedStreamInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeClosedStreamInfoByPageResponse) Reset() {
	*x = DescribeClosedStreamInfoByPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeClosedStreamInfoByPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeClosedStreamInfoByPageResponse) ProtoMessage() {}

func (x *DescribeClosedStreamInfoByPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeClosedStreamInfoByPageResponse.ProtoReflect.Descriptor instead.
func (*DescribeClosedStreamInfoByPageResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeClosedStreamInfoByPageResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeClosedStreamInfoByPageResponse) GetResult() *business.ClosedStreamInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type DescribeLiveStreamStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.StreamStateInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeLiveStreamStateResponse) Reset() {
	*x = DescribeLiveStreamStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeLiveStreamStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeLiveStreamStateResponse) ProtoMessage() {}

func (x *DescribeLiveStreamStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeLiveStreamStateResponse.ProtoReflect.Descriptor instead.
func (*DescribeLiveStreamStateResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeLiveStreamStateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeLiveStreamStateResponse) GetResult() *business.StreamStateInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type KillStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *KillStreamResponse) Reset() {
	*x = KillStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillStreamResponse) ProtoMessage() {}

func (x *KillStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillStreamResponse.ProtoReflect.Descriptor instead.
func (*KillStreamResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{10}
}

func (x *KillStreamResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type ForbidStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *ForbidStreamResponse) Reset() {
	*x = ForbidStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForbidStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForbidStreamResponse) ProtoMessage() {}

func (x *ForbidStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForbidStreamResponse.ProtoReflect.Descriptor instead.
func (*ForbidStreamResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{11}
}

func (x *ForbidStreamResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeForbiddenStreamInfoByPageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.ForbiddenStreamInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeForbiddenStreamInfoByPageResponse) Reset() {
	*x = DescribeForbiddenStreamInfoByPageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeForbiddenStreamInfoByPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeForbiddenStreamInfoByPageResponse) ProtoMessage() {}

func (x *DescribeForbiddenStreamInfoByPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeForbiddenStreamInfoByPageResponse.ProtoReflect.Descriptor instead.
func (*DescribeForbiddenStreamInfoByPageResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeForbiddenStreamInfoByPageResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeForbiddenStreamInfoByPageResponse) GetResult() *business.ForbiddenStreamInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResumeStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *ResumeStreamResponse) Reset() {
	*x = ResumeStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeStreamResponse) ProtoMessage() {}

func (x *ResumeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeStreamResponse.ProtoReflect.Descriptor instead.
func (*ResumeStreamResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{13}
}

func (x *ResumeStreamResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeCDNSnapshotHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.CDNSnapshotHistoryInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeCDNSnapshotHistoryResponse) Reset() {
	*x = DescribeCDNSnapshotHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeCDNSnapshotHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeCDNSnapshotHistoryResponse) ProtoMessage() {}

func (x *DescribeCDNSnapshotHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeCDNSnapshotHistoryResponse.ProtoReflect.Descriptor instead.
func (*DescribeCDNSnapshotHistoryResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeCDNSnapshotHistoryResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeCDNSnapshotHistoryResponse) GetResult() *business.CDNSnapshotHistoryInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type DescribeRecordTaskFileHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.RecordHistoryInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeRecordTaskFileHistoryResponse) Reset() {
	*x = DescribeRecordTaskFileHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRecordTaskFileHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRecordTaskFileHistoryResponse) ProtoMessage() {}

func (x *DescribeRecordTaskFileHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRecordTaskFileHistoryResponse.ProtoReflect.Descriptor instead.
func (*DescribeRecordTaskFileHistoryResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeRecordTaskFileHistoryResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeRecordTaskFileHistoryResponse) GetResult() *business.RecordHistoryInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdateRelaySourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *UpdateRelaySourceResponse) Reset() {
	*x = UpdateRelaySourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRelaySourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRelaySourceResponse) ProtoMessage() {}

func (x *UpdateRelaySourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRelaySourceResponse.ProtoReflect.Descriptor instead.
func (*UpdateRelaySourceResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateRelaySourceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DeleteRelaySourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DeleteRelaySourceResponse) Reset() {
	*x = DeleteRelaySourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRelaySourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRelaySourceResponse) ProtoMessage() {}

func (x *DeleteRelaySourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRelaySourceResponse.ProtoReflect.Descriptor instead.
func (*DeleteRelaySourceResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteRelaySourceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeRelaySourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.RelaySourceConfigList `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeRelaySourceResponse) Reset() {
	*x = DescribeRelaySourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeRelaySourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeRelaySourceResponse) ProtoMessage() {}

func (x *DescribeRelaySourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeRelaySourceResponse.ProtoReflect.Descriptor instead.
func (*DescribeRelaySourceResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{18}
}

func (x *DescribeRelaySourceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeRelaySourceResponse) GetResult() *business.RelaySourceConfigList {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateVQScoreTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VQScoreID    `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *CreateVQScoreTaskResponse) Reset() {
	*x = CreateVQScoreTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVQScoreTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVQScoreTaskResponse) ProtoMessage() {}

func (x *CreateVQScoreTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVQScoreTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateVQScoreTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{19}
}

func (x *CreateVQScoreTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *CreateVQScoreTaskResponse) GetResult() *business.VQScoreID {
	if x != nil {
		return x.Result
	}
	return nil
}

type DescribeVQScoreTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VQScoreInfo  `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeVQScoreTaskResponse) Reset() {
	*x = DescribeVQScoreTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVQScoreTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVQScoreTaskResponse) ProtoMessage() {}

func (x *DescribeVQScoreTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVQScoreTaskResponse.ProtoReflect.Descriptor instead.
func (*DescribeVQScoreTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeVQScoreTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVQScoreTaskResponse) GetResult() *business.VQScoreInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListVQScoreTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VQScoreTaskListInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *ListVQScoreTaskResponse) Reset() {
	*x = ListVQScoreTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVQScoreTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVQScoreTaskResponse) ProtoMessage() {}

func (x *ListVQScoreTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVQScoreTaskResponse.ProtoReflect.Descriptor instead.
func (*ListVQScoreTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{21}
}

func (x *ListVQScoreTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *ListVQScoreTaskResponse) GetResult() *business.VQScoreTaskListInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type GeneratePlayURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.GeneratePlayURLResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *GeneratePlayURLResponse) Reset() {
	*x = GeneratePlayURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePlayURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePlayURLResponse) ProtoMessage() {}

func (x *GeneratePlayURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePlayURLResponse.ProtoReflect.Descriptor instead.
func (*GeneratePlayURLResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{22}
}

func (x *GeneratePlayURLResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *GeneratePlayURLResponse) GetResult() *business.GeneratePlayURLResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type GeneratePushURLResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.GeneratePushURLResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *GeneratePushURLResponse) Reset() {
	*x = GeneratePushURLResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratePushURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratePushURLResponse) ProtoMessage() {}

func (x *GeneratePushURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratePushURLResponse.ProtoReflect.Descriptor instead.
func (*GeneratePushURLResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{23}
}

func (x *GeneratePushURLResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *GeneratePushURLResponse) GetResult() *business.GeneratePushURLResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreatePullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.CreatePullToPushTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *CreatePullToPushTaskResponse) Reset() {
	*x = CreatePullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePullToPushTaskResponse) ProtoMessage() {}

func (x *CreatePullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*CreatePullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *CreatePullToPushTaskResponse) GetResult() *business.CreatePullToPushTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ListPullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.ListPullToPushTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *ListPullToPushTaskResponse) Reset() {
	*x = ListPullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPullToPushTaskResponse) ProtoMessage() {}

func (x *ListPullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*ListPullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{25}
}

func (x *ListPullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *ListPullToPushTaskResponse) GetResult() *business.ListPullToPushTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type UpdatePullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *UpdatePullToPushTaskResponse) Reset() {
	*x = UpdatePullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePullToPushTaskResponse) ProtoMessage() {}

func (x *UpdatePullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdatePullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{26}
}

func (x *UpdatePullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type RestartPullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *RestartPullToPushTaskResponse) Reset() {
	*x = RestartPullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartPullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartPullToPushTaskResponse) ProtoMessage() {}

func (x *RestartPullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartPullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*RestartPullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{27}
}

func (x *RestartPullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type StopPullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *StopPullToPushTaskResponse) Reset() {
	*x = StopPullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopPullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPullToPushTaskResponse) ProtoMessage() {}

func (x *StopPullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*StopPullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{28}
}

func (x *StopPullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DeletePullToPushTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DeletePullToPushTaskResponse) Reset() {
	*x = DeletePullToPushTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePullToPushTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePullToPushTaskResponse) ProtoMessage() {}

func (x *DeletePullToPushTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePullToPushTaskResponse.ProtoReflect.Descriptor instead.
func (*DeletePullToPushTaskResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{29}
}

func (x *DeletePullToPushTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type UpdateDenyConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *UpdateDenyConfigResponse) Reset() {
	*x = UpdateDenyConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDenyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDenyConfigResponse) ProtoMessage() {}

func (x *UpdateDenyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDenyConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateDenyConfigResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{30}
}

func (x *UpdateDenyConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeDenyConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.DescribeDenyConfigResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeDenyConfigResponse) Reset() {
	*x = DescribeDenyConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDenyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDenyConfigResponse) ProtoMessage() {}

func (x *DescribeDenyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDenyConfigResponse.ProtoReflect.Descriptor instead.
func (*DescribeDenyConfigResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{31}
}

func (x *DescribeDenyConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeDenyConfigResponse) GetResult() *business.DescribeDenyConfigResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteDenyConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DeleteDenyConfigResponse) Reset() {
	*x = DeleteDenyConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDenyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDenyConfigResponse) ProtoMessage() {}

func (x *DeleteDenyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDenyConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteDenyConfigResponse) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteDenyConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type UpdateDenyConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *UpdateDenyConfigV2Response) Reset() {
	*x = UpdateDenyConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDenyConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDenyConfigV2Response) ProtoMessage() {}

func (x *UpdateDenyConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDenyConfigV2Response.ProtoReflect.Descriptor instead.
func (*UpdateDenyConfigV2Response) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateDenyConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type DescribeDenyConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.DescribeDenyConfigResultV2 `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //返回结果
}

func (x *DescribeDenyConfigV2Response) Reset() {
	*x = DescribeDenyConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeDenyConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeDenyConfigV2Response) ProtoMessage() {}

func (x *DescribeDenyConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeDenyConfigV2Response.ProtoReflect.Descriptor instead.
func (*DescribeDenyConfigV2Response) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{34}
}

func (x *DescribeDenyConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeDenyConfigV2Response) GetResult() *business.DescribeDenyConfigResultV2 {
	if x != nil {
		return x.Result
	}
	return nil
}

type DeleteDenyConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *DeleteDenyConfigV2Response) Reset() {
	*x = DeleteDenyConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_live_response_response_live_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDenyConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDenyConfigV2Response) ProtoMessage() {}

func (x *DeleteDenyConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_live_response_response_live_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDenyConfigV2Response.ProtoReflect.Descriptor instead.
func (*DeleteDenyConfigV2Response) Descriptor() ([]byte, []int) {
	return file_live_response_response_live_proto_rawDescGZIP(), []int{35}
}

func (x *DeleteDenyConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

var File_live_response_response_live_proto protoreflect.FileDescriptor

var file_live_response_response_live_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2f, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x61, 0x64,
	0x64, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f,
	0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x6c, 0x69, 0x76, 0x65,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x64, 0x65, 0x6e, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6c, 0x69, 0x76,
	0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6c,
	0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x23, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x71, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbe, 0x01, 0x0a, 0x18,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a, 0x15,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x71, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x21, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x50, 0x75, 0x6c, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6f, 0x0a, 0x12,
	0x4b, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a,
	0x14, 0x46, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0xd4, 0x01, 0x0a, 0x29, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x46, 0x6f, 0x72,
	0x62, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x71, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x75, 0x6d,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x01, 0x0a, 0x22, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x44, 0x4e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43,
	0x44, 0x4e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xce, 0x01,
	0x0a, 0x25, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x76,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc8,
	0x01, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x6c, 0x61, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x61,
	0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x42, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc2, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x51, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a,
	0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x50, 0x75, 0x73, 0x68, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x75, 0x73, 0x68, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x1a,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x6c, 0x6c,
	0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x79, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x7a, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x75,
	0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x77, 0x0a, 0x1a, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73,
	0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x79, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x54, 0x6f, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x75, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xca, 0x01, 0x0a, 0x1a, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x75, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x69, 0x76, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x65,
	0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x56, 0x32,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x42, 0xd1, 0x01, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6c, 0x69, 0x76,
	0x65, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0c, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x01,
	0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b,
	0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x6c, 0x69, 0x76, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x21, 0x56, 0x6f, 0x6c,
	0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69, 0x76, 0x65, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xe2, 0x02,
	0x24, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x4c, 0x69,
	0x76, 0x65, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_live_response_response_live_proto_rawDescOnce sync.Once
	file_live_response_response_live_proto_rawDescData = file_live_response_response_live_proto_rawDesc
)

func file_live_response_response_live_proto_rawDescGZIP() []byte {
	file_live_response_response_live_proto_rawDescOnce.Do(func() {
		file_live_response_response_live_proto_rawDescData = protoimpl.X.CompressGZIP(file_live_response_response_live_proto_rawDescData)
	})
	return file_live_response_response_live_proto_rawDescData
}

var file_live_response_response_live_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_live_response_response_live_proto_goTypes = []interface{}{
	(*CreateDomainResponse)(nil),                      // 0: Volcengine.Live.Models.Response.CreateDomainResponse
	(*ListDomainDetailResponse)(nil),                  // 1: Volcengine.Live.Models.Response.ListDomainDetailResponse
	(*DisableDomainResponse)(nil),                     // 2: Volcengine.Live.Models.Response.DisableDomainResponse
	(*EnableDomainResponse)(nil),                      // 3: Volcengine.Live.Models.Response.EnableDomainResponse
	(*DeleteDomainResponse)(nil),                      // 4: Volcengine.Live.Models.Response.DeleteDomainResponse
	(*DescribeDomainResponse)(nil),                    // 5: Volcengine.Live.Models.Response.DescribeDomainResponse
	(*ManagerPullPushDomainBindResponse)(nil),         // 6: Volcengine.Live.Models.Response.ManagerPullPushDomainBindResponse
	(*DescribeLiveStreamInfoByPageResponse)(nil),      // 7: Volcengine.Live.Models.Response.DescribeLiveStreamInfoByPageResponse
	(*DescribeClosedStreamInfoByPageResponse)(nil),    // 8: Volcengine.Live.Models.Response.DescribeClosedStreamInfoByPageResponse
	(*DescribeLiveStreamStateResponse)(nil),           // 9: Volcengine.Live.Models.Response.DescribeLiveStreamStateResponse
	(*KillStreamResponse)(nil),                        // 10: Volcengine.Live.Models.Response.KillStreamResponse
	(*ForbidStreamResponse)(nil),                      // 11: Volcengine.Live.Models.Response.ForbidStreamResponse
	(*DescribeForbiddenStreamInfoByPageResponse)(nil), // 12: Volcengine.Live.Models.Response.DescribeForbiddenStreamInfoByPageResponse
	(*ResumeStreamResponse)(nil),                      // 13: Volcengine.Live.Models.Response.ResumeStreamResponse
	(*DescribeCDNSnapshotHistoryResponse)(nil),        // 14: Volcengine.Live.Models.Response.DescribeCDNSnapshotHistoryResponse
	(*DescribeRecordTaskFileHistoryResponse)(nil),     // 15: Volcengine.Live.Models.Response.DescribeRecordTaskFileHistoryResponse
	(*UpdateRelaySourceResponse)(nil),                 // 16: Volcengine.Live.Models.Response.UpdateRelaySourceResponse
	(*DeleteRelaySourceResponse)(nil),                 // 17: Volcengine.Live.Models.Response.DeleteRelaySourceResponse
	(*DescribeRelaySourceResponse)(nil),               // 18: Volcengine.Live.Models.Response.DescribeRelaySourceResponse
	(*CreateVQScoreTaskResponse)(nil),                 // 19: Volcengine.Live.Models.Response.CreateVQScoreTaskResponse
	(*DescribeVQScoreTaskResponse)(nil),               // 20: Volcengine.Live.Models.Response.DescribeVQScoreTaskResponse
	(*ListVQScoreTaskResponse)(nil),                   // 21: Volcengine.Live.Models.Response.ListVQScoreTaskResponse
	(*GeneratePlayURLResponse)(nil),                   // 22: Volcengine.Live.Models.Response.GeneratePlayURLResponse
	(*GeneratePushURLResponse)(nil),                   // 23: Volcengine.Live.Models.Response.GeneratePushURLResponse
	(*CreatePullToPushTaskResponse)(nil),              // 24: Volcengine.Live.Models.Response.CreatePullToPushTaskResponse
	(*ListPullToPushTaskResponse)(nil),                // 25: Volcengine.Live.Models.Response.ListPullToPushTaskResponse
	(*UpdatePullToPushTaskResponse)(nil),              // 26: Volcengine.Live.Models.Response.UpdatePullToPushTaskResponse
	(*RestartPullToPushTaskResponse)(nil),             // 27: Volcengine.Live.Models.Response.RestartPullToPushTaskResponse
	(*StopPullToPushTaskResponse)(nil),                // 28: Volcengine.Live.Models.Response.StopPullToPushTaskResponse
	(*DeletePullToPushTaskResponse)(nil),              // 29: Volcengine.Live.Models.Response.DeletePullToPushTaskResponse
	(*UpdateDenyConfigResponse)(nil),                  // 30: Volcengine.Live.Models.Response.UpdateDenyConfigResponse
	(*DescribeDenyConfigResponse)(nil),                // 31: Volcengine.Live.Models.Response.DescribeDenyConfigResponse
	(*DeleteDenyConfigResponse)(nil),                  // 32: Volcengine.Live.Models.Response.DeleteDenyConfigResponse
	(*UpdateDenyConfigV2Response)(nil),                // 33: Volcengine.Live.Models.Response.UpdateDenyConfigV2Response
	(*DescribeDenyConfigV2Response)(nil),              // 34: Volcengine.Live.Models.Response.DescribeDenyConfigV2Response
	(*DeleteDenyConfigV2Response)(nil),                // 35: Volcengine.Live.Models.Response.DeleteDenyConfigV2Response
	(*base.ResponseMetadata)(nil),                     // 36: Volcengine.Base.Models.Base.ResponseMetadata
	(*business.DomainListInfo)(nil),                   // 37: Volcengine.Live.Models.Business.DomainListInfo
	(*business.LiveStreamInfo)(nil),                   // 38: Volcengine.Live.Models.Business.LiveStreamInfo
	(*business.ClosedStreamInfo)(nil),                 // 39: Volcengine.Live.Models.Business.ClosedStreamInfo
	(*business.StreamStateInfo)(nil),                  // 40: Volcengine.Live.Models.Business.StreamStateInfo
	(*business.ForbiddenStreamInfo)(nil),              // 41: Volcengine.Live.Models.Business.ForbiddenStreamInfo
	(*business.CDNSnapshotHistoryInfo)(nil),           // 42: Volcengine.Live.Models.Business.CDNSnapshotHistoryInfo
	(*business.RecordHistoryInfo)(nil),                // 43: Volcengine.Live.Models.Business.RecordHistoryInfo
	(*business.RelaySourceConfigList)(nil),            // 44: Volcengine.Live.Models.Business.RelaySourceConfigList
	(*business.VQScoreID)(nil),                        // 45: Volcengine.Live.Models.Business.VQScoreID
	(*business.VQScoreInfo)(nil),                      // 46: Volcengine.Live.Models.Business.VQScoreInfo
	(*business.VQScoreTaskListInfo)(nil),              // 47: Volcengine.Live.Models.Business.VQScoreTaskListInfo
	(*business.GeneratePlayURLResult)(nil),            // 48: Volcengine.Live.Models.Business.GeneratePlayURLResult
	(*business.GeneratePushURLResult)(nil),            // 49: Volcengine.Live.Models.Business.GeneratePushURLResult
	(*business.CreatePullToPushTaskResult)(nil),       // 50: Volcengine.Live.Models.Business.CreatePullToPushTaskResult
	(*business.ListPullToPushTaskResult)(nil),         // 51: Volcengine.Live.Models.Business.ListPullToPushTaskResult
	(*business.DescribeDenyConfigResult)(nil),         // 52: Volcengine.Live.Models.Business.DescribeDenyConfigResult
	(*business.DescribeDenyConfigResultV2)(nil),       // 53: Volcengine.Live.Models.Business.DescribeDenyConfigResultV2
}
var file_live_response_response_live_proto_depIdxs = []int32{
	36, // 0: Volcengine.Live.Models.Response.CreateDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 1: Volcengine.Live.Models.Response.ListDomainDetailResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	37, // 2: Volcengine.Live.Models.Response.ListDomainDetailResponse.Result:type_name -> Volcengine.Live.Models.Business.DomainListInfo
	36, // 3: Volcengine.Live.Models.Response.DisableDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 4: Volcengine.Live.Models.Response.EnableDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 5: Volcengine.Live.Models.Response.DeleteDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 6: Volcengine.Live.Models.Response.DescribeDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	37, // 7: Volcengine.Live.Models.Response.DescribeDomainResponse.Result:type_name -> Volcengine.Live.Models.Business.DomainListInfo
	36, // 8: Volcengine.Live.Models.Response.ManagerPullPushDomainBindResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 9: Volcengine.Live.Models.Response.DescribeLiveStreamInfoByPageResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	38, // 10: Volcengine.Live.Models.Response.DescribeLiveStreamInfoByPageResponse.Result:type_name -> Volcengine.Live.Models.Business.LiveStreamInfo
	36, // 11: Volcengine.Live.Models.Response.DescribeClosedStreamInfoByPageResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	39, // 12: Volcengine.Live.Models.Response.DescribeClosedStreamInfoByPageResponse.Result:type_name -> Volcengine.Live.Models.Business.ClosedStreamInfo
	36, // 13: Volcengine.Live.Models.Response.DescribeLiveStreamStateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	40, // 14: Volcengine.Live.Models.Response.DescribeLiveStreamStateResponse.Result:type_name -> Volcengine.Live.Models.Business.StreamStateInfo
	36, // 15: Volcengine.Live.Models.Response.KillStreamResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 16: Volcengine.Live.Models.Response.ForbidStreamResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 17: Volcengine.Live.Models.Response.DescribeForbiddenStreamInfoByPageResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	41, // 18: Volcengine.Live.Models.Response.DescribeForbiddenStreamInfoByPageResponse.Result:type_name -> Volcengine.Live.Models.Business.ForbiddenStreamInfo
	36, // 19: Volcengine.Live.Models.Response.ResumeStreamResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 20: Volcengine.Live.Models.Response.DescribeCDNSnapshotHistoryResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	42, // 21: Volcengine.Live.Models.Response.DescribeCDNSnapshotHistoryResponse.Result:type_name -> Volcengine.Live.Models.Business.CDNSnapshotHistoryInfo
	36, // 22: Volcengine.Live.Models.Response.DescribeRecordTaskFileHistoryResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	43, // 23: Volcengine.Live.Models.Response.DescribeRecordTaskFileHistoryResponse.Result:type_name -> Volcengine.Live.Models.Business.RecordHistoryInfo
	36, // 24: Volcengine.Live.Models.Response.UpdateRelaySourceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 25: Volcengine.Live.Models.Response.DeleteRelaySourceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 26: Volcengine.Live.Models.Response.DescribeRelaySourceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	44, // 27: Volcengine.Live.Models.Response.DescribeRelaySourceResponse.Result:type_name -> Volcengine.Live.Models.Business.RelaySourceConfigList
	36, // 28: Volcengine.Live.Models.Response.CreateVQScoreTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	45, // 29: Volcengine.Live.Models.Response.CreateVQScoreTaskResponse.Result:type_name -> Volcengine.Live.Models.Business.VQScoreID
	36, // 30: Volcengine.Live.Models.Response.DescribeVQScoreTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	46, // 31: Volcengine.Live.Models.Response.DescribeVQScoreTaskResponse.Result:type_name -> Volcengine.Live.Models.Business.VQScoreInfo
	36, // 32: Volcengine.Live.Models.Response.ListVQScoreTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	47, // 33: Volcengine.Live.Models.Response.ListVQScoreTaskResponse.Result:type_name -> Volcengine.Live.Models.Business.VQScoreTaskListInfo
	36, // 34: Volcengine.Live.Models.Response.GeneratePlayURLResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	48, // 35: Volcengine.Live.Models.Response.GeneratePlayURLResponse.Result:type_name -> Volcengine.Live.Models.Business.GeneratePlayURLResult
	36, // 36: Volcengine.Live.Models.Response.GeneratePushURLResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	49, // 37: Volcengine.Live.Models.Response.GeneratePushURLResponse.Result:type_name -> Volcengine.Live.Models.Business.GeneratePushURLResult
	36, // 38: Volcengine.Live.Models.Response.CreatePullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	50, // 39: Volcengine.Live.Models.Response.CreatePullToPushTaskResponse.Result:type_name -> Volcengine.Live.Models.Business.CreatePullToPushTaskResult
	36, // 40: Volcengine.Live.Models.Response.ListPullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	51, // 41: Volcengine.Live.Models.Response.ListPullToPushTaskResponse.Result:type_name -> Volcengine.Live.Models.Business.ListPullToPushTaskResult
	36, // 42: Volcengine.Live.Models.Response.UpdatePullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 43: Volcengine.Live.Models.Response.RestartPullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 44: Volcengine.Live.Models.Response.StopPullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 45: Volcengine.Live.Models.Response.DeletePullToPushTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 46: Volcengine.Live.Models.Response.UpdateDenyConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 47: Volcengine.Live.Models.Response.DescribeDenyConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	52, // 48: Volcengine.Live.Models.Response.DescribeDenyConfigResponse.Result:type_name -> Volcengine.Live.Models.Business.DescribeDenyConfigResult
	36, // 49: Volcengine.Live.Models.Response.DeleteDenyConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 50: Volcengine.Live.Models.Response.UpdateDenyConfigV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	36, // 51: Volcengine.Live.Models.Response.DescribeDenyConfigV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	53, // 52: Volcengine.Live.Models.Response.DescribeDenyConfigV2Response.Result:type_name -> Volcengine.Live.Models.Business.DescribeDenyConfigResultV2
	36, // 53: Volcengine.Live.Models.Response.DeleteDenyConfigV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	54, // [54:54] is the sub-list for method output_type
	54, // [54:54] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_live_response_response_live_proto_init() }
func file_live_response_response_live_proto_init() {
	if File_live_response_response_live_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_live_response_response_live_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDomainDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagerPullPushDomainBindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeLiveStreamInfoByPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeClosedStreamInfoByPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeLiveStreamStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForbidStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeForbiddenStreamInfoByPageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeCDNSnapshotHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRecordTaskFileHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRelaySourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRelaySourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeRelaySourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVQScoreTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVQScoreTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVQScoreTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePlayURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratePushURLResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartPullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopPullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePullToPushTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDenyConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDenyConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDenyConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDenyConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeDenyConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_live_response_response_live_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDenyConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_live_response_response_live_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_live_response_response_live_proto_goTypes,
		DependencyIndexes: file_live_response_response_live_proto_depIdxs,
		MessageInfos:      file_live_response_response_live_proto_msgTypes,
	}.Build()
	File_live_response_response_live_proto = out.File
	file_live_response_response_live_proto_rawDesc = nil
	file_live_response_response_live_proto_goTypes = nil
	file_live_response_response_live_proto_depIdxs = nil
}
