// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: volcengine/vod/response/response_vod.proto

package response

import (
	reflect "reflect"
	sync "sync"

	base "github.com/volcengine/volc-sdk-golang/service/base/models/base"
	business "github.com/volcengine/volc-sdk-golang/service/vod/models/business"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodGetAllPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodAllPlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAllPlayInfoResponse) Reset() {
	*x = VodGetAllPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAllPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAllPlayInfoResponse) ProtoMessage() {}

func (x *VodGetAllPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAllPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetAllPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{0}
}

func (x *VodGetAllPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAllPlayInfoResponse) GetResult() *business.VodAllPlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodPlayInfoModel `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPlayInfoResponse) Reset() {
	*x = VodGetPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoResponse) ProtoMessage() {}

func (x *VodGetPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{1}
}

func (x *VodGetPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlayInfoResponse) GetResult() *business.VodPlayInfoModel {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetOriginalPlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetOriginalPlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetOriginalPlayInfoResponse) Reset() {
	*x = VodGetOriginalPlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetOriginalPlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetOriginalPlayInfoResponse) ProtoMessage() {}

func (x *VodGetOriginalPlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetOriginalPlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetOriginalPlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{2}
}

func (x *VodGetOriginalPlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetOriginalPlayInfoResponse) GetResult() *business.VodGetOriginalPlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPrivateDrmPlayAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetPrivateDrmPlayAuthResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPrivateDrmPlayAuthResponse) Reset() {
	*x = VodGetPrivateDrmPlayAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPrivateDrmPlayAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPrivateDrmPlayAuthResponse) ProtoMessage() {}

func (x *VodGetPrivateDrmPlayAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPrivateDrmPlayAuthResponse.ProtoReflect.Descriptor instead.
func (*VodGetPrivateDrmPlayAuthResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{3}
}

func (x *VodGetPrivateDrmPlayAuthResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPrivateDrmPlayAuthResponse) GetResult() *business.VodGetPrivateDrmPlayAuthResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetHlsDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetHlsDecryptionKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetHlsDecryptionKeyResponse) Reset() {
	*x = VodGetHlsDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetHlsDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetHlsDecryptionKeyResponse) ProtoMessage() {}

func (x *VodGetHlsDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetHlsDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*VodGetHlsDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{4}
}

func (x *VodGetHlsDecryptionKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetHlsDecryptionKeyResponse) GetResult() *business.VodGetHlsDecryptionKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateHlsDecryptionKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodCreateHlsDecryptionKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodCreateHlsDecryptionKeyResponse) Reset() {
	*x = VodCreateHlsDecryptionKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateHlsDecryptionKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateHlsDecryptionKeyResponse) ProtoMessage() {}

func (x *VodCreateHlsDecryptionKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateHlsDecryptionKeyResponse.ProtoReflect.Descriptor instead.
func (*VodCreateHlsDecryptionKeyResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{5}
}

func (x *VodCreateHlsDecryptionKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateHlsDecryptionKeyResponse) GetResult() *business.VodCreateHlsDecryptionKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetPlayInfoWithLiveTimeShiftSceneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetPlayInfoWithLiveTimeShiftSceneResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) Reset() {
	*x = VodGetPlayInfoWithLiveTimeShiftSceneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetPlayInfoWithLiveTimeShiftSceneResponse) ProtoMessage() {}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetPlayInfoWithLiveTimeShiftSceneResponse.ProtoReflect.Descriptor instead.
func (*VodGetPlayInfoWithLiveTimeShiftSceneResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{6}
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetPlayInfoWithLiveTimeShiftSceneResponse) GetResult() *business.VodGetPlayInfoWithLiveTimeShiftSceneResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeDrmDataKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodDescribeDrmDataKeyResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodDescribeDrmDataKeyResponse) Reset() {
	*x = VodDescribeDrmDataKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeDrmDataKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeDrmDataKeyResponse) ProtoMessage() {}

func (x *VodDescribeDrmDataKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeDrmDataKeyResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeDrmDataKeyResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{7}
}

func (x *VodDescribeDrmDataKeyResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeDrmDataKeyResponse) GetResult() *business.VodDescribeDrmDataKeyResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 通用文件
// **********************************************************************
type VodSubmitMoveObjectTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传结果
	Result *business.VodSubmitMoveObjectTaskRespData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitMoveObjectTaskResponse) Reset() {
	*x = VodSubmitMoveObjectTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitMoveObjectTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitMoveObjectTaskResponse) ProtoMessage() {}

func (x *VodSubmitMoveObjectTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitMoveObjectTaskResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitMoveObjectTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{8}
}

func (x *VodSubmitMoveObjectTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitMoveObjectTaskResponse) GetResult() *business.VodSubmitMoveObjectTaskRespData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryMoveObjectTaskInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传结果
	Result *business.VodQueryMoveObjectTaskInfoResData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryMoveObjectTaskInfoResponse) Reset() {
	*x = VodQueryMoveObjectTaskInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryMoveObjectTaskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryMoveObjectTaskInfoResponse) ProtoMessage() {}

func (x *VodQueryMoveObjectTaskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryMoveObjectTaskInfoResponse.ProtoReflect.Descriptor instead.
func (*VodQueryMoveObjectTaskInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{9}
}

func (x *VodQueryMoveObjectTaskInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryMoveObjectTaskInfoResponse) GetResult() *business.VodQueryMoveObjectTaskInfoResData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitBlockObjectTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 发布封禁object任务结果
	Result *business.VodSubmitBlockObjectTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitBlockObjectTasksResponse) Reset() {
	*x = VodSubmitBlockObjectTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockObjectTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockObjectTasksResponse) ProtoMessage() {}

func (x *VodSubmitBlockObjectTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockObjectTasksResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockObjectTasksResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{10}
}

func (x *VodSubmitBlockObjectTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitBlockObjectTasksResponse) GetResult() *business.VodSubmitBlockObjectTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListBlockObjectTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 发布封禁object任务结果
	Result *business.VodListBlockObjectTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodListBlockObjectTasksResponse) Reset() {
	*x = VodListBlockObjectTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListBlockObjectTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListBlockObjectTasksResponse) ProtoMessage() {}

func (x *VodListBlockObjectTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListBlockObjectTasksResponse.ProtoReflect.Descriptor instead.
func (*VodListBlockObjectTasksResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{11}
}

func (x *VodListBlockObjectTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListBlockObjectTasksResponse) GetResult() *business.VodListBlockObjectTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUploadMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传结果
	Result *business.VodCommitData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUploadMediaResponse) Reset() {
	*x = VodUploadMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadMediaResponse) ProtoMessage() {}

func (x *VodUploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadMediaResponse.ProtoReflect.Descriptor instead.
func (*VodUploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{12}
}

func (x *VodUploadMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUploadMediaResponse) GetResult() *business.VodCommitData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryUploadTaskInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// URL批量上传状态查询结果
	Result *business.VodQueryData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryUploadTaskInfoResponse) Reset() {
	*x = VodQueryUploadTaskInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadTaskInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadTaskInfoResponse) ProtoMessage() {}

func (x *VodQueryUploadTaskInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadTaskInfoResponse.ProtoReflect.Descriptor instead.
func (*VodQueryUploadTaskInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{13}
}

func (x *VodQueryUploadTaskInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryUploadTaskInfoResponse) GetResult() *business.VodQueryData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUrlUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// URL批量上传结果
	Result *business.VodUrlResponseData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUrlUploadResponse) Reset() {
	*x = VodUrlUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadResponse) ProtoMessage() {}

func (x *VodUrlUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadResponse.ProtoReflect.Descriptor instead.
func (*VodUrlUploadResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{14}
}

func (x *VodUrlUploadResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUrlUploadResponse) GetResult() *business.VodUrlResponseData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodApplyUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传 1001 阶段返回结果
	Result *business.VodApplyUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodApplyUploadInfoResponse) Reset() {
	*x = VodApplyUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoResponse) ProtoMessage() {}

func (x *VodApplyUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{15}
}

func (x *VodApplyUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodApplyUploadInfoResponse) GetResult() *business.VodApplyUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCommitUploadInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 视频上传 1005 阶段返回结果
	Result *business.VodCommitUploadInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodCommitUploadInfoResponse) Reset() {
	*x = VodCommitUploadInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResponse) ProtoMessage() {}

func (x *VodCommitUploadInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResponse.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{16}
}

func (x *VodCommitUploadInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCommitUploadInfoResponse) GetResult() *business.VodCommitUploadInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 媒资
// **********************************************************************
type VodListFileMetaInfosByFileNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 通用返回结构
	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	// 响应结果
	Result *business.VodListFileMetaInfosByFileNamesResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodListFileMetaInfosByFileNamesResponse) Reset() {
	*x = VodListFileMetaInfosByFileNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListFileMetaInfosByFileNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListFileMetaInfosByFileNamesResponse) ProtoMessage() {}

func (x *VodListFileMetaInfosByFileNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListFileMetaInfosByFileNamesResponse.ProtoReflect.Descriptor instead.
func (*VodListFileMetaInfosByFileNamesResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{17}
}

func (x *VodListFileMetaInfosByFileNamesResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListFileMetaInfosByFileNamesResponse) GetResult() *business.VodListFileMetaInfosByFileNamesResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMediaInfosResponse) Reset() {
	*x = VodGetMediaInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaInfosResponse) ProtoMessage() {}

func (x *VodGetMediaInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaInfosResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaInfosResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{18}
}

func (x *VodGetMediaInfosResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaInfosResponse) GetResult() *business.VodGetMediaInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateMediaInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateMediaInfoResponse) Reset() {
	*x = VodUpdateMediaInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaInfoResponse) ProtoMessage() {}

func (x *VodUpdateMediaInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaInfoResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{19}
}

func (x *VodUpdateMediaInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetRecommendedPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetRecPosterData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetRecommendedPosterResponse) Reset() {
	*x = VodGetRecommendedPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetRecommendedPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetRecommendedPosterResponse) ProtoMessage() {}

func (x *VodGetRecommendedPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetRecommendedPosterResponse.ProtoReflect.Descriptor instead.
func (*VodGetRecommendedPosterResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{20}
}

func (x *VodGetRecommendedPosterResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetRecommendedPosterResponse) GetResult() *business.VodGetRecPosterData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateMediaPublishStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateMediaPublishStatusResponse) Reset() {
	*x = VodUpdateMediaPublishStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaPublishStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaPublishStatusResponse) ProtoMessage() {}

func (x *VodUpdateMediaPublishStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaPublishStatusResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaPublishStatusResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{21}
}

func (x *VodUpdateMediaPublishStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateMediaStorageClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUpdateMediaStorageClassData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodUpdateMediaStorageClassResponse) Reset() {
	*x = VodUpdateMediaStorageClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateMediaStorageClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateMediaStorageClassResponse) ProtoMessage() {}

func (x *VodUpdateMediaStorageClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateMediaStorageClassResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateMediaStorageClassResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{22}
}

func (x *VodUpdateMediaStorageClassResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateMediaStorageClassResponse) GetResult() *business.VodUpdateMediaStorageClassData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteMediaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDeleteMediaData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDeleteMediaResponse) Reset() {
	*x = VodDeleteMediaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaResponse) ProtoMessage() {}

func (x *VodDeleteMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{23}
}

func (x *VodDeleteMediaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteMediaResponse) GetResult() *business.VodDeleteMediaData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteMaterialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteMaterialResponse) Reset() {
	*x = VodDeleteMaterialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMaterialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMaterialResponse) ProtoMessage() {}

func (x *VodDeleteMaterialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMaterialResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMaterialResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{24}
}

func (x *VodDeleteMaterialResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteTranscodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDeleteTranscodesData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDeleteTranscodesResponse) Reset() {
	*x = VodDeleteTranscodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTranscodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTranscodesResponse) ProtoMessage() {}

func (x *VodDeleteTranscodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTranscodesResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteTranscodesResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{25}
}

func (x *VodDeleteTranscodesResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteTranscodesResponse) GetResult() *business.VodDeleteTranscodesData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteMediaTosFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDeleteMediaTosFileData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDeleteMediaTosFileResponse) Reset() {
	*x = VodDeleteMediaTosFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteMediaTosFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteMediaTosFileResponse) ProtoMessage() {}

func (x *VodDeleteMediaTosFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteMediaTosFileResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteMediaTosFileResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{26}
}

func (x *VodDeleteMediaTosFileResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteMediaTosFileResponse) GetResult() *business.VodDeleteMediaTosFileData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMediaListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaListData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMediaListResponse) Reset() {
	*x = VodGetMediaListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMediaListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMediaListResponse) ProtoMessage() {}

func (x *VodGetMediaListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMediaListResponse.ProtoReflect.Descriptor instead.
func (*VodGetMediaListResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{27}
}

func (x *VodGetMediaListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMediaListResponse) GetResult() *business.VodGetMediaListData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetSubtitleInfoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetSubtitleInfoListData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetSubtitleInfoListResponse) Reset() {
	*x = VodGetSubtitleInfoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSubtitleInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSubtitleInfoListResponse) ProtoMessage() {}

func (x *VodGetSubtitleInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSubtitleInfoListResponse.ProtoReflect.Descriptor instead.
func (*VodGetSubtitleInfoListResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{28}
}

func (x *VodGetSubtitleInfoListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSubtitleInfoListResponse) GetResult() *business.VodGetSubtitleInfoListData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSubtitleStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUpdateSubtitleStatusData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodUpdateSubtitleStatusResponse) Reset() {
	*x = VodUpdateSubtitleStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleStatusResponse) ProtoMessage() {}

func (x *VodUpdateSubtitleStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleStatusResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleStatusResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{29}
}

func (x *VodUpdateSubtitleStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateSubtitleStatusResponse) GetResult() *business.VodUpdateSubtitleStatusData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSubtitleInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSubtitleInfoResponse) Reset() {
	*x = VodUpdateSubtitleInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSubtitleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSubtitleInfoResponse) ProtoMessage() {}

func (x *VodUpdateSubtitleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSubtitleInfoResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSubtitleInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{30}
}

func (x *VodUpdateSubtitleInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetAuditFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAuditFramesForAuditResponse) Reset() {
	*x = VodGetAuditFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAuditFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAuditFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetAuditFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAuditFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAuditFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{31}
}

func (x *VodGetAuditFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAuditFramesForAuditResponse) GetResult() *business.VodGetFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetMLFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetMLFramesForAuditResponse) Reset() {
	*x = VodGetMLFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetMLFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetMLFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetMLFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetMLFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetMLFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{32}
}

func (x *VodGetMLFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetMLFramesForAuditResponse) GetResult() *business.VodGetFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetBetterFramesForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetBetterFramesForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetBetterFramesForAuditResponse) Reset() {
	*x = VodGetBetterFramesForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetBetterFramesForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetBetterFramesForAuditResponse) ProtoMessage() {}

func (x *VodGetBetterFramesForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetBetterFramesForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetBetterFramesForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{33}
}

func (x *VodGetBetterFramesForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetBetterFramesForAuditResponse) GetResult() *business.VodGetBetterFramesForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAudioInfoForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAudioInfoForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAudioInfoForAuditResponse) Reset() {
	*x = VodGetAudioInfoForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioInfoForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioInfoForAuditResponse) ProtoMessage() {}

func (x *VodGetAudioInfoForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioInfoForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAudioInfoForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{34}
}

func (x *VodGetAudioInfoForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAudioInfoForAuditResponse) GetResult() *business.VodGetAudioInfoForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAutomaticSpeechRecognitionForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAutomaticSpeechRecognitionForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) Reset() {
	*x = VodGetAutomaticSpeechRecognitionForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAutomaticSpeechRecognitionForAuditResponse) ProtoMessage() {}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAutomaticSpeechRecognitionForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAutomaticSpeechRecognitionForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{35}
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAutomaticSpeechRecognitionForAuditResponse) GetResult() *business.VodGetAutomaticSpeechRecognitionForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAudioEventDetectionForAuditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAudioEventDetectionForAuditResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAudioEventDetectionForAuditResponse) Reset() {
	*x = VodGetAudioEventDetectionForAuditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAudioEventDetectionForAuditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAudioEventDetectionForAuditResponse) ProtoMessage() {}

func (x *VodGetAudioEventDetectionForAuditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAudioEventDetectionForAuditResponse.ProtoReflect.Descriptor instead.
func (*VodGetAudioEventDetectionForAuditResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{36}
}

func (x *VodGetAudioEventDetectionForAuditResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAudioEventDetectionForAuditResponse) GetResult() *business.VodGetAudioEventDetectionForAuditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateVideoClassificationData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateVideoClassificationResponse) Reset() {
	*x = VodCreateVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateVideoClassificationResponse) ProtoMessage() {}

func (x *VodCreateVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodCreateVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{37}
}

func (x *VodCreateVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateVideoClassificationResponse) GetResult() *business.VodCreateVideoClassificationData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateVideoClassificationResponse) Reset() {
	*x = VodUpdateVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateVideoClassificationResponse) ProtoMessage() {}

func (x *VodUpdateVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{38}
}

func (x *VodUpdateVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteVideoClassificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteVideoClassificationResponse) Reset() {
	*x = VodDeleteVideoClassificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteVideoClassificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteVideoClassificationResponse) ProtoMessage() {}

func (x *VodDeleteVideoClassificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteVideoClassificationResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteVideoClassificationResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{39}
}

func (x *VodDeleteVideoClassificationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListVideoClassificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodVideoClassificationsData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListVideoClassificationsResponse) Reset() {
	*x = VodListVideoClassificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListVideoClassificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListVideoClassificationsResponse) ProtoMessage() {}

func (x *VodListVideoClassificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListVideoClassificationsResponse.ProtoReflect.Descriptor instead.
func (*VodListVideoClassificationsResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{40}
}

func (x *VodListVideoClassificationsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListVideoClassificationsResponse) GetResult() *business.VodVideoClassificationsData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListSnapshotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSnapshotData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListSnapshotsResponse) Reset() {
	*x = VodListSnapshotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSnapshotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSnapshotsResponse) ProtoMessage() {}

func (x *VodListSnapshotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSnapshotsResponse.ProtoReflect.Descriptor instead.
func (*VodListSnapshotsResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{41}
}

func (x *VodListSnapshotsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListSnapshotsResponse) GetResult() *business.VodSnapshotData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetFileListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetMediaInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetFileListResponse) Reset() {
	*x = VodGetFileListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetFileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetFileListResponse) ProtoMessage() {}

func (x *VodGetFileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetFileListResponse.ProtoReflect.Descriptor instead.
func (*VodGetFileListResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{42}
}

func (x *VodGetFileListResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetFileListResponse) GetResult() *business.VodGetMediaInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetFileInfosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetFileInfosData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetFileInfosResponse) Reset() {
	*x = VodGetFileInfosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetFileInfosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetFileInfosResponse) ProtoMessage() {}

func (x *VodGetFileInfosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetFileInfosResponse.ProtoReflect.Descriptor instead.
func (*VodGetFileInfosResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{43}
}

func (x *VodGetFileInfosResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetFileInfosResponse) GetResult() *business.VodGetFileInfosData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateFileStorageClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUpdateFileStorageClassData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodUpdateFileStorageClassResponse) Reset() {
	*x = VodUpdateFileStorageClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateFileStorageClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateFileStorageClassResponse) ProtoMessage() {}

func (x *VodUpdateFileStorageClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateFileStorageClassResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateFileStorageClassResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{44}
}

func (x *VodUpdateFileStorageClassResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateFileStorageClassResponse) GetResult() *business.VodUpdateFileStorageClassData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetInnerAuditURLsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetInnerAuditURLsData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetInnerAuditURLsResponse) Reset() {
	*x = VodGetInnerAuditURLsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetInnerAuditURLsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetInnerAuditURLsResponse) ProtoMessage() {}

func (x *VodGetInnerAuditURLsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetInnerAuditURLsResponse.ProtoReflect.Descriptor instead.
func (*VodGetInnerAuditURLsResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{45}
}

func (x *VodGetInnerAuditURLsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetInnerAuditURLsResponse) GetResult() *business.VodGetInnerAuditURLsData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetAdAuditResultByVidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetAdAuditResultByVidData `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetAdAuditResultByVidResponse) Reset() {
	*x = VodGetAdAuditResultByVidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAdAuditResultByVidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAdAuditResultByVidResponse) ProtoMessage() {}

func (x *VodGetAdAuditResultByVidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAdAuditResultByVidResponse.ProtoReflect.Descriptor instead.
func (*VodGetAdAuditResultByVidResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{46}
}

func (x *VodGetAdAuditResultByVidResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAdAuditResultByVidResponse) GetResult() *business.VodGetAdAuditResultByVidData {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodExtractMediaMetaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodExtractMediaMetaTaskResponse) Reset() {
	*x = VodExtractMediaMetaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodExtractMediaMetaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodExtractMediaMetaTaskResponse) ProtoMessage() {}

func (x *VodExtractMediaMetaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodExtractMediaMetaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodExtractMediaMetaTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{47}
}

func (x *VodExtractMediaMetaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 转码
// **********************************************************************
type VodStartWorkflowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodStartWorkflowResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodStartWorkflowResponse) Reset() {
	*x = VodStartWorkflowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartWorkflowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartWorkflowResponse) ProtoMessage() {}

func (x *VodStartWorkflowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartWorkflowResponse.ProtoReflect.Descriptor instead.
func (*VodStartWorkflowResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{48}
}

func (x *VodStartWorkflowResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodStartWorkflowResponse) GetResult() *business.VodStartWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodRetrieveTranscodeResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.TranscodeResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodRetrieveTranscodeResultResponse) Reset() {
	*x = VodRetrieveTranscodeResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodRetrieveTranscodeResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodRetrieveTranscodeResultResponse) ProtoMessage() {}

func (x *VodRetrieveTranscodeResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodRetrieveTranscodeResultResponse.ProtoReflect.Descriptor instead.
func (*VodRetrieveTranscodeResultResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{49}
}

func (x *VodRetrieveTranscodeResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodRetrieveTranscodeResultResponse) GetResult() *business.TranscodeResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListWorkflowExecutionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodListWorkflowExecutionResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodListWorkflowExecutionResponse) Reset() {
	*x = VodListWorkflowExecutionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListWorkflowExecutionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListWorkflowExecutionResponse) ProtoMessage() {}

func (x *VodListWorkflowExecutionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListWorkflowExecutionResponse.ProtoReflect.Descriptor instead.
func (*VodListWorkflowExecutionResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{50}
}

func (x *VodListWorkflowExecutionResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListWorkflowExecutionResponse) GetResult() *business.VodListWorkflowExecutionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowExecutionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetWorkflowExecutionDetailResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowExecutionDetailResponse) Reset() {
	*x = VodGetWorkflowExecutionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowExecutionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowExecutionDetailResponse) ProtoMessage() {}

func (x *VodGetWorkflowExecutionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowExecutionDetailResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowExecutionDetailResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{51}
}

func (x *VodGetWorkflowExecutionDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowExecutionDetailResponse) GetResult() *business.VodGetWorkflowExecutionDetailResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowExecutionStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.WorkflowExecution `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowExecutionStatusResponse) Reset() {
	*x = VodGetWorkflowExecutionStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowExecutionStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowExecutionStatusResponse) ProtoMessage() {}

func (x *VodGetWorkflowExecutionStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowExecutionStatusResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowExecutionStatusResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{52}
}

func (x *VodGetWorkflowExecutionStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowExecutionStatusResponse) GetResult() *business.WorkflowExecution {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetWorkflowResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodWorkflowResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowResultResponse) Reset() {
	*x = VodGetWorkflowResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowResultResponse) ProtoMessage() {}

func (x *VodGetWorkflowResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowResultResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowResultResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{53}
}

func (x *VodGetWorkflowResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowResultResponse) GetResult() *business.VodWorkflowResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodTaskTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodCreateTaskTemplateResponse) Reset() {
	*x = VodCreateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateTaskTemplateResponse) ProtoMessage() {}

func (x *VodCreateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodCreateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{54}
}

func (x *VodCreateTaskTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateTaskTemplateResponse) GetResult() *business.VodTaskTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodTaskTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodUpdateTaskTemplateResponse) Reset() {
	*x = VodUpdateTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateTaskTemplateResponse) ProtoMessage() {}

func (x *VodUpdateTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{55}
}

func (x *VodUpdateTaskTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodUpdateTaskTemplateResponse) GetResult() *business.VodTaskTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDeleteTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodTaskTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodDeleteTaskTemplateResponse) Reset() {
	*x = VodDeleteTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteTaskTemplateResponse) ProtoMessage() {}

func (x *VodDeleteTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{56}
}

func (x *VodDeleteTaskTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDeleteTaskTemplateResponse) GetResult() *business.VodTaskTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodTaskTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetTaskTemplateResponse) Reset() {
	*x = VodGetTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetTaskTemplateResponse) ProtoMessage() {}

func (x *VodGetTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodGetTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{57}
}

func (x *VodGetTaskTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetTaskTemplateResponse) GetResult() *business.VodTaskTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListTaskTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListTaskTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodListTaskTemplateResponse) Reset() {
	*x = VodListTaskTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListTaskTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListTaskTemplateResponse) ProtoMessage() {}

func (x *VodListTaskTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListTaskTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodListTaskTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{58}
}

func (x *VodListTaskTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListTaskTemplateResponse) GetResult() *business.VodListTaskTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateWorkflowTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodWorkflowTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodCreateWorkflowTemplateResponse) Reset() {
	*x = VodCreateWorkflowTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateWorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateWorkflowTemplateResponse) ProtoMessage() {}

func (x *VodCreateWorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateWorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodCreateWorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{59}
}

func (x *VodCreateWorkflowTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateWorkflowTemplateResponse) GetResult() *business.VodWorkflowTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateWorkflowTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateWorkflowTemplateResponse) Reset() {
	*x = VodUpdateWorkflowTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateWorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateWorkflowTemplateResponse) ProtoMessage() {}

func (x *VodUpdateWorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateWorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateWorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{60}
}

func (x *VodUpdateWorkflowTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteWorkflowTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteWorkflowTemplateResponse) Reset() {
	*x = VodDeleteWorkflowTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteWorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteWorkflowTemplateResponse) ProtoMessage() {}

func (x *VodDeleteWorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteWorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteWorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{61}
}

func (x *VodDeleteWorkflowTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetWorkflowTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodWorkflowTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWorkflowTemplateResponse) Reset() {
	*x = VodGetWorkflowTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWorkflowTemplateResponse) ProtoMessage() {}

func (x *VodGetWorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodGetWorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{62}
}

func (x *VodGetWorkflowTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWorkflowTemplateResponse) GetResult() *business.VodWorkflowTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListWorkflowTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListWorkflowTemplateResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodListWorkflowTemplateResponse) Reset() {
	*x = VodListWorkflowTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListWorkflowTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListWorkflowTemplateResponse) ProtoMessage() {}

func (x *VodListWorkflowTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListWorkflowTemplateResponse.ProtoReflect.Descriptor instead.
func (*VodListWorkflowTemplateResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{63}
}

func (x *VodListWorkflowTemplateResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListWorkflowTemplateResponse) GetResult() *business.VodListWorkflowTemplateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateWatermarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.LogoTemplate `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodCreateWatermarkResponse) Reset() {
	*x = VodCreateWatermarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateWatermarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateWatermarkResponse) ProtoMessage() {}

func (x *VodCreateWatermarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateWatermarkResponse.ProtoReflect.Descriptor instead.
func (*VodCreateWatermarkResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{64}
}

func (x *VodCreateWatermarkResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateWatermarkResponse) GetResult() *business.LogoTemplate {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateWatermarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateWatermarkResponse) Reset() {
	*x = VodUpdateWatermarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateWatermarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateWatermarkResponse) ProtoMessage() {}

func (x *VodUpdateWatermarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateWatermarkResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateWatermarkResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{65}
}

func (x *VodUpdateWatermarkResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteWatermarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteWatermarkResponse) Reset() {
	*x = VodDeleteWatermarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteWatermarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteWatermarkResponse) ProtoMessage() {}

func (x *VodDeleteWatermarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteWatermarkResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteWatermarkResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{66}
}

func (x *VodDeleteWatermarkResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetWatermarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.LogoTemplate `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetWatermarkResponse) Reset() {
	*x = VodGetWatermarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetWatermarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetWatermarkResponse) ProtoMessage() {}

func (x *VodGetWatermarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetWatermarkResponse.ProtoReflect.Descriptor instead.
func (*VodGetWatermarkResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{67}
}

func (x *VodGetWatermarkResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetWatermarkResponse) GetResult() *business.LogoTemplate {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListWatermarkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListWatermarkResponseResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodListWatermarkResponse) Reset() {
	*x = VodListWatermarkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListWatermarkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListWatermarkResponse) ProtoMessage() {}

func (x *VodListWatermarkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListWatermarkResponse.ProtoReflect.Descriptor instead.
func (*VodListWatermarkResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{68}
}

func (x *VodListWatermarkResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListWatermarkResponse) GetResult() *business.VodListWatermarkResponseResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 视频编辑
// **********************************************************************
type VodSubmitDirectEditTaskAsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.SubmitDirectEditTaskAsyncResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodSubmitDirectEditTaskAsyncResponse) Reset() {
	*x = VodSubmitDirectEditTaskAsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitDirectEditTaskAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitDirectEditTaskAsyncResponse) ProtoMessage() {}

func (x *VodSubmitDirectEditTaskAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitDirectEditTaskAsyncResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitDirectEditTaskAsyncResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{69}
}

func (x *VodSubmitDirectEditTaskAsyncResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitDirectEditTaskAsyncResponse) GetResult() *business.SubmitDirectEditTaskAsyncResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitDirectEditTaskSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.SubmitDirectEditTaskSyncResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodSubmitDirectEditTaskSyncResponse) Reset() {
	*x = VodSubmitDirectEditTaskSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitDirectEditTaskSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitDirectEditTaskSyncResponse) ProtoMessage() {}

func (x *VodSubmitDirectEditTaskSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitDirectEditTaskSyncResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitDirectEditTaskSyncResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{70}
}

func (x *VodSubmitDirectEditTaskSyncResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitDirectEditTaskSyncResponse) GetResult() *business.SubmitDirectEditTaskSyncResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetDirectEditProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.GetDirectEditProgress `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetDirectEditProgressResponse) Reset() {
	*x = VodGetDirectEditProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetDirectEditProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetDirectEditProgressResponse) ProtoMessage() {}

func (x *VodGetDirectEditProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetDirectEditProgressResponse.ProtoReflect.Descriptor instead.
func (*VodGetDirectEditProgressResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{71}
}

func (x *VodGetDirectEditProgressResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetDirectEditProgressResponse) GetResult() *business.GetDirectEditProgress {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetDirectEditResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.GetDirectEditResult `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetDirectEditResultResponse) Reset() {
	*x = VodGetDirectEditResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetDirectEditResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetDirectEditResultResponse) ProtoMessage() {}

func (x *VodGetDirectEditResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetDirectEditResultResponse.ProtoReflect.Descriptor instead.
func (*VodGetDirectEditResultResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{72}
}

func (x *VodGetDirectEditResultResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetDirectEditResultResponse) GetResult() []*business.GetDirectEditResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCancelDirectEditTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.CancelDirectEditTask `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodCancelDirectEditTaskResponse) Reset() {
	*x = VodCancelDirectEditTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCancelDirectEditTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCancelDirectEditTaskResponse) ProtoMessage() {}

func (x *VodCancelDirectEditTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCancelDirectEditTaskResponse.ProtoReflect.Descriptor instead.
func (*VodCancelDirectEditTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{73}
}

func (x *VodCancelDirectEditTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCancelDirectEditTaskResponse) GetResult() *business.CancelDirectEditTask {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 空间管理
// **********************************************************************
type VodCreateSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreateSpaceResponse) Reset() {
	*x = VodCreateSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateSpaceResponse) ProtoMessage() {}

func (x *VodCreateSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodCreateSpaceResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{74}
}

func (x *VodCreateSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteSpaceResponse) Reset() {
	*x = VodDeleteSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteSpaceResponse) ProtoMessage() {}

func (x *VodDeleteSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteSpaceResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{75}
}

func (x *VodDeleteSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.VodSpaceInfo `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListSpaceResponse) Reset() {
	*x = VodListSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListSpaceResponse) ProtoMessage() {}

func (x *VodListSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodListSpaceResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{76}
}

func (x *VodListSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListSpaceResponse) GetResult() []*business.VodSpaceInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetSpaceDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSpaceInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetSpaceDetailResponse) Reset() {
	*x = VodGetSpaceDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSpaceDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSpaceDetailResponse) ProtoMessage() {}

func (x *VodGetSpaceDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSpaceDetailResponse.ProtoReflect.Descriptor instead.
func (*VodGetSpaceDetailResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{77}
}

func (x *VodGetSpaceDetailResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSpaceDetailResponse) GetResult() *business.VodSpaceInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateSpaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSpaceResponse) Reset() {
	*x = VodUpdateSpaceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceResponse) ProtoMessage() {}

func (x *VodUpdateSpaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{78}
}

func (x *VodUpdateSpaceResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateSpaceUploadConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateSpaceUploadConfigResponse) Reset() {
	*x = VodUpdateSpaceUploadConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateSpaceUploadConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateSpaceUploadConfigResponse) ProtoMessage() {}

func (x *VodUpdateSpaceUploadConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateSpaceUploadConfigResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateSpaceUploadConfigResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{79}
}

func (x *VodUpdateSpaceUploadConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDescribeUploadSpaceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodUploadSpaceConfig `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeUploadSpaceConfigResponse) Reset() {
	*x = VodDescribeUploadSpaceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeUploadSpaceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeUploadSpaceConfigResponse) ProtoMessage() {}

func (x *VodDescribeUploadSpaceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeUploadSpaceConfigResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeUploadSpaceConfigResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{80}
}

func (x *VodDescribeUploadSpaceConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeUploadSpaceConfigResponse) GetResult() *business.VodUploadSpaceConfig {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateUploadSpaceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateUploadSpaceConfigResponse) Reset() {
	*x = VodUpdateUploadSpaceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateUploadSpaceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateUploadSpaceConfigResponse) ProtoMessage() {}

func (x *VodUpdateUploadSpaceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateUploadSpaceConfigResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateUploadSpaceConfigResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{81}
}

func (x *VodUpdateUploadSpaceConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDescribeVodSpaceStorageDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDescribeVodSpaceStorageDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDescribeVodSpaceStorageDataResponse) Reset() {
	*x = VodDescribeVodSpaceStorageDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodSpaceStorageDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodSpaceStorageDataResponse) ProtoMessage() {}

func (x *VodDescribeVodSpaceStorageDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodSpaceStorageDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodSpaceStorageDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{82}
}

func (x *VodDescribeVodSpaceStorageDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodSpaceStorageDataResponse) GetResult() *business.VodDescribeVodSpaceStorageDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodUpdateDomainPlayRuleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
}

func (x *VodUpdateDomainPlayRuleResponse) Reset() {
	*x = VodUpdateDomainPlayRuleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainPlayRuleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainPlayRuleResponse) ProtoMessage() {}

func (x *VodUpdateDomainPlayRuleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainPlayRuleResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainPlayRuleResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{83}
}

func (x *VodUpdateDomainPlayRuleResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodAddDomainToSchedulerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodAddDomainToSchedulerResponse) Reset() {
	*x = VodAddDomainToSchedulerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodAddDomainToSchedulerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodAddDomainToSchedulerResponse) ProtoMessage() {}

func (x *VodAddDomainToSchedulerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodAddDomainToSchedulerResponse.ProtoReflect.Descriptor instead.
func (*VodAddDomainToSchedulerResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{84}
}

func (x *VodAddDomainToSchedulerResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodRemoveDomainFromSchedulerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodRemoveDomainFromSchedulerResponse) Reset() {
	*x = VodRemoveDomainFromSchedulerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodRemoveDomainFromSchedulerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodRemoveDomainFromSchedulerResponse) ProtoMessage() {}

func (x *VodRemoveDomainFromSchedulerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodRemoveDomainFromSchedulerResponse.ProtoReflect.Descriptor instead.
func (*VodRemoveDomainFromSchedulerResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{85}
}

func (x *VodRemoveDomainFromSchedulerResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeleteDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeleteDomainResponse) Reset() {
	*x = VodDeleteDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeleteDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeleteDomainResponse) ProtoMessage() {}

func (x *VodDeleteDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeleteDomainResponse.ProtoReflect.Descriptor instead.
func (*VodDeleteDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{86}
}

func (x *VodDeleteDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodStartDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStartDomainResponse) Reset() {
	*x = VodStartDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartDomainResponse) ProtoMessage() {}

func (x *VodStartDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStartDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{87}
}

func (x *VodStartDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodStopDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStopDomainResponse) Reset() {
	*x = VodStopDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStopDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStopDomainResponse) ProtoMessage() {}

func (x *VodStopDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStopDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStopDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{88}
}

func (x *VodStopDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodListDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDomainConfigInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListDomainResponse) Reset() {
	*x = VodListDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListDomainResponse) ProtoMessage() {}

func (x *VodListDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListDomainResponse.ProtoReflect.Descriptor instead.
func (*VodListDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{89}
}

func (x *VodListDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListDomainResponse) GetResult() *business.VodDomainConfigInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateCdnRefreshTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateCdnRefreshTaskResponse) Reset() {
	*x = VodCreateCdnRefreshTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnRefreshTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnRefreshTaskResponse) ProtoMessage() {}

func (x *VodCreateCdnRefreshTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnRefreshTaskResponse.ProtoReflect.Descriptor instead.
func (*VodCreateCdnRefreshTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{90}
}

func (x *VodCreateCdnRefreshTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateCdnRefreshTaskResponse) GetResult() *business.VodCreateCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateCdnPreloadTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCreateCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCreateCdnPreloadTaskResponse) Reset() {
	*x = VodCreateCdnPreloadTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateCdnPreloadTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateCdnPreloadTaskResponse) ProtoMessage() {}

func (x *VodCreateCdnPreloadTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateCdnPreloadTaskResponse.ProtoReflect.Descriptor instead.
func (*VodCreateCdnPreloadTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{91}
}

func (x *VodCreateCdnPreloadTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCreateCdnPreloadTaskResponse) GetResult() *business.VodCreateCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata     `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCdnTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTasksResponse) Reset() {
	*x = VodListCdnTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTasksResponse) ProtoMessage() {}

func (x *VodListCdnTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTasksResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTasksResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{92}
}

func (x *VodListCdnTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTasksResponse) GetResult() *business.VodCdnTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnAccessLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnAccessLogResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnAccessLogResponse) Reset() {
	*x = VodListCdnAccessLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnAccessLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnAccessLogResponse) ProtoMessage() {}

func (x *VodListCdnAccessLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnAccessLogResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnAccessLogResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{93}
}

func (x *VodListCdnAccessLogResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnAccessLogResponse) GetResult() *business.VodListCdnAccessLogResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTopAccessUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnTopAccessUrlResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTopAccessUrlResponse) Reset() {
	*x = VodListCdnTopAccessUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTopAccessUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTopAccessUrlResponse) ProtoMessage() {}

func (x *VodListCdnTopAccessUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTopAccessUrlResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTopAccessUrlResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{94}
}

func (x *VodListCdnTopAccessUrlResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTopAccessUrlResponse) GetResult() *business.VodListCdnTopAccessUrlResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListCdnTopAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodListCdnTopAccessResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListCdnTopAccessResponse) Reset() {
	*x = VodListCdnTopAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListCdnTopAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListCdnTopAccessResponse) ProtoMessage() {}

func (x *VodListCdnTopAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListCdnTopAccessResponse.ProtoReflect.Descriptor instead.
func (*VodListCdnTopAccessResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{95}
}

func (x *VodListCdnTopAccessResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListCdnTopAccessResponse) GetResult() *business.VodListCdnTopAccessResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeVodDomainBandwidthDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDescribeVodDomainBandwidthDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeVodDomainBandwidthDataResponse) Reset() {
	*x = VodDescribeVodDomainBandwidthDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodDomainBandwidthDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodDomainBandwidthDataResponse) ProtoMessage() {}

func (x *VodDescribeVodDomainBandwidthDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodDomainBandwidthDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodDomainBandwidthDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{96}
}

func (x *VodDescribeVodDomainBandwidthDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodDomainBandwidthDataResponse) GetResult() *business.VodDescribeVodDomainBandwidthDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCdnStatisticsCommonResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodCdnStatisticsCommonResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodCdnStatisticsCommonResponse) Reset() {
	*x = VodCdnStatisticsCommonResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCdnStatisticsCommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCdnStatisticsCommonResponse) ProtoMessage() {}

func (x *VodCdnStatisticsCommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCdnStatisticsCommonResponse.ProtoReflect.Descriptor instead.
func (*VodCdnStatisticsCommonResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{97}
}

func (x *VodCdnStatisticsCommonResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodCdnStatisticsCommonResponse) GetResult() *business.VodCdnStatisticsCommonResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeIPInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           []*business.VodCdnIpInfo `protobuf:"bytes,2,rep,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeIPInfoResponse) Reset() {
	*x = VodDescribeIPInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeIPInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeIPInfoResponse) ProtoMessage() {}

func (x *VodDescribeIPInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeIPInfoResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeIPInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{98}
}

func (x *VodDescribeIPInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeIPInfoResponse) GetResult() []*business.VodCdnIpInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeVodDomainTrafficDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodDescribeVodDomainTrafficDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodDescribeVodDomainTrafficDataResponse) Reset() {
	*x = VodDescribeVodDomainTrafficDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodDomainTrafficDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodDomainTrafficDataResponse) ProtoMessage() {}

func (x *VodDescribeVodDomainTrafficDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodDomainTrafficDataResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeVodDomainTrafficDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{99}
}

func (x *VodDescribeVodDomainTrafficDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeVodDomainTrafficDataResponse) GetResult() *business.VodDescribeVodDomainTrafficDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitBlockTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata              `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodSubmitBlockTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodSubmitBlockTasksResponse) Reset() {
	*x = VodSubmitBlockTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockTasksResponse) ProtoMessage() {}

func (x *VodSubmitBlockTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockTasksResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockTasksResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{100}
}

func (x *VodSubmitBlockTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitBlockTasksResponse) GetResult() *business.VodSubmitBlockTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodGetContentBlockTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodGetContentBlockTasksResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodGetContentBlockTasksResponse) Reset() {
	*x = VodGetContentBlockTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetContentBlockTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetContentBlockTasksResponse) ProtoMessage() {}

func (x *VodGetContentBlockTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetContentBlockTasksResponse.ProtoReflect.Descriptor instead.
func (*VodGetContentBlockTasksResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{101}
}

func (x *VodGetContentBlockTasksResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetContentBlockTasksResponse) GetResult() *business.VodGetContentBlockTasksResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreateDomainV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreateDomainV2Response) Reset() {
	*x = VodCreateDomainV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDomainV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDomainV2Response) ProtoMessage() {}

func (x *VodCreateDomainV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDomainV2Response.ProtoReflect.Descriptor instead.
func (*VodCreateDomainV2Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{102}
}

func (x *VodCreateDomainV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodCreateDomainV3Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreateDomainV3Response) Reset() {
	*x = VodCreateDomainV3Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDomainV3Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDomainV3Response) ProtoMessage() {}

func (x *VodCreateDomainV3Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDomainV3Response.ProtoReflect.Descriptor instead.
func (*VodCreateDomainV3Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{103}
}

func (x *VodCreateDomainV3Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainExpireV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainExpireV2Response) Reset() {
	*x = VodUpdateDomainExpireV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainExpireV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainExpireV2Response) ProtoMessage() {}

func (x *VodUpdateDomainExpireV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainExpireV2Response.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainExpireV2Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{104}
}

func (x *VodUpdateDomainExpireV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainAuthConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainAuthConfigV2Response) Reset() {
	*x = VodUpdateDomainAuthConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainAuthConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainAuthConfigV2Response) ProtoMessage() {}

func (x *VodUpdateDomainAuthConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainAuthConfigV2Response.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainAuthConfigV2Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{105}
}

func (x *VodUpdateDomainAuthConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainUrlAuthConfigV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainUrlAuthConfigV2Response) Reset() {
	*x = VodUpdateDomainUrlAuthConfigV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainUrlAuthConfigV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainUrlAuthConfigV2Response) ProtoMessage() {}

func (x *VodUpdateDomainUrlAuthConfigV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainUrlAuthConfigV2Response.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainUrlAuthConfigV2Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{106}
}

func (x *VodUpdateDomainUrlAuthConfigV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodVerifyDomainOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata               `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodVerifyDomainOwnerResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodVerifyDomainOwnerResponse) Reset() {
	*x = VodVerifyDomainOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodVerifyDomainOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodVerifyDomainOwnerResponse) ProtoMessage() {}

func (x *VodVerifyDomainOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodVerifyDomainOwnerResponse.ProtoReflect.Descriptor instead.
func (*VodVerifyDomainOwnerResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{107}
}

func (x *VodVerifyDomainOwnerResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodVerifyDomainOwnerResponse) GetResult() *business.VodVerifyDomainOwnerResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodDescribeDomainVerifyContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDescribeDomainVerifyContentResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeDomainVerifyContentResponse) Reset() {
	*x = VodDescribeDomainVerifyContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeDomainVerifyContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeDomainVerifyContentResponse) ProtoMessage() {}

func (x *VodDescribeDomainVerifyContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeDomainVerifyContentResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeDomainVerifyContentResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{108}
}

func (x *VodDescribeDomainVerifyContentResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeDomainVerifyContentResponse) GetResult() *business.VodDescribeDomainVerifyContentResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodListPCDNDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata            `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodPCDNDomainConfigInfo `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodListPCDNDomainResponse) Reset() {
	*x = VodListPCDNDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListPCDNDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListPCDNDomainResponse) ProtoMessage() {}

func (x *VodListPCDNDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListPCDNDomainResponse.ProtoReflect.Descriptor instead.
func (*VodListPCDNDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{109}
}

func (x *VodListPCDNDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListPCDNDomainResponse) GetResult() *business.VodPCDNDomainConfigInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodCreatePCDNDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodCreatePCDNDomainResponse) Reset() {
	*x = VodCreatePCDNDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreatePCDNDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreatePCDNDomainResponse) ProtoMessage() {}

func (x *VodCreatePCDNDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreatePCDNDomainResponse.ProtoReflect.Descriptor instead.
func (*VodCreatePCDNDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{110}
}

func (x *VodCreatePCDNDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodStartPCDNDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStartPCDNDomainResponse) Reset() {
	*x = VodStartPCDNDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStartPCDNDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStartPCDNDomainResponse) ProtoMessage() {}

func (x *VodStartPCDNDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStartPCDNDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStartPCDNDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{111}
}

func (x *VodStartPCDNDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodStopPCDNDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodStopPCDNDomainResponse) Reset() {
	*x = VodStopPCDNDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStopPCDNDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStopPCDNDomainResponse) ProtoMessage() {}

func (x *VodStopPCDNDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStopPCDNDomainResponse.ProtoReflect.Descriptor instead.
func (*VodStopPCDNDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{112}
}

func (x *VodStopPCDNDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDeletePCDNDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodDeletePCDNDomainResponse) Reset() {
	*x = VodDeletePCDNDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDeletePCDNDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDeletePCDNDomainResponse) ProtoMessage() {}

func (x *VodDeletePCDNDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDeletePCDNDomainResponse.ProtoReflect.Descriptor instead.
func (*VodDeletePCDNDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{113}
}

func (x *VodDeletePCDNDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodUpdateDomainConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodUpdateDomainConfigResponse) Reset() {
	*x = VodUpdateDomainConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUpdateDomainConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUpdateDomainConfigResponse) ProtoMessage() {}

func (x *VodUpdateDomainConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUpdateDomainConfigResponse.ProtoReflect.Descriptor instead.
func (*VodUpdateDomainConfigResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{114}
}

func (x *VodUpdateDomainConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodDescribeDomainConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.VodDescribeDomainConfigResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应结果
}

func (x *VodDescribeDomainConfigResponse) Reset() {
	*x = VodDescribeDomainConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeDomainConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeDomainConfigResponse) ProtoMessage() {}

func (x *VodDescribeDomainConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeDomainConfigResponse.ProtoReflect.Descriptor instead.
func (*VodDescribeDomainConfigResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{115}
}

func (x *VodDescribeDomainConfigResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodDescribeDomainConfigResponse) GetResult() *business.VodDescribeDomainConfigResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddOrUpdateCertificateV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *AddOrUpdateCertificateV2Response) Reset() {
	*x = AddOrUpdateCertificateV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrUpdateCertificateV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateCertificateV2Response) ProtoMessage() {}

func (x *AddOrUpdateCertificateV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateCertificateV2Response.ProtoReflect.Descriptor instead.
func (*AddOrUpdateCertificateV2Response) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{116}
}

func (x *AddOrUpdateCertificateV2Response) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type UpdateDomainAreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *UpdateDomainAreaResponse) Reset() {
	*x = UpdateDomainAreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDomainAreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDomainAreaResponse) ProtoMessage() {}

func (x *UpdateDomainAreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDomainAreaResponse.ProtoReflect.Descriptor instead.
func (*UpdateDomainAreaResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{117}
}

func (x *UpdateDomainAreaResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

// **********************************************************************
// 回调管理
// **********************************************************************
type VodAddCallbackSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodAddCallbackSubscriptionResponse) Reset() {
	*x = VodAddCallbackSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodAddCallbackSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodAddCallbackSubscriptionResponse) ProtoMessage() {}

func (x *VodAddCallbackSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodAddCallbackSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*VodAddCallbackSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{118}
}

func (x *VodAddCallbackSubscriptionResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodSetCallbackEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
}

func (x *VodSetCallbackEventResponse) Reset() {
	*x = VodSetCallbackEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetCallbackEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetCallbackEventResponse) ProtoMessage() {}

func (x *VodSetCallbackEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetCallbackEventResponse.ProtoReflect.Descriptor instead.
func (*VodSetCallbackEventResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{119}
}

func (x *VodSetCallbackEventResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type GetCallbackRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` //响应通用信息
	Result           *business.CallbackRecords `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     //响应通用信息
}

func (x *GetCallbackRecordResponse) Reset() {
	*x = GetCallbackRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallbackRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallbackRecordResponse) ProtoMessage() {}

func (x *GetCallbackRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallbackRecordResponse.ProtoReflect.Descriptor instead.
func (*GetCallbackRecordResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{120}
}

func (x *GetCallbackRecordResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *GetCallbackRecordResponse) GetResult() *business.CallbackRecords {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 智能策略-轻量版
// **********************************************************************
type VodGetSmartStrategyLitePlayInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetSmartStrategyLitePlayInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) Reset() {
	*x = VodGetSmartStrategyLitePlayInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetSmartStrategyLitePlayInfoResponse) ProtoMessage() {}

func (x *VodGetSmartStrategyLitePlayInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetSmartStrategyLitePlayInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetSmartStrategyLitePlayInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{121}
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetSmartStrategyLitePlayInfoResponse) GetResult() *business.VodGetSmartStrategyLitePlayInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 应用管理
// **********************************************************************
type VodGetAppInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"` // 响应通用信息
	Result           *business.VodGetAppInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`                     // 响应结果
}

func (x *VodGetAppInfoResponse) Reset() {
	*x = VodGetAppInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetAppInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetAppInfoResponse) ProtoMessage() {}

func (x *VodGetAppInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetAppInfoResponse.ProtoReflect.Descriptor instead.
func (*VodGetAppInfoResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{122}
}

func (x *VodGetAppInfoResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetAppInfoResponse) GetResult() *business.VodGetAppInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 计量计费
// **********************************************************************
// 转码用量
type DescribeVodSpaceTranscodeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                        `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceTranscodeDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDataResponse) Reset() {
	*x = DescribeVodSpaceTranscodeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{123}
}

func (x *DescribeVodSpaceTranscodeDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResponse) GetResult() *business.DescribeVodSpaceTranscodeDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 媒体AI用量
type DescribeVodSpaceAIStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceAIStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataResponse) Reset() {
	*x = DescribeVodSpaceAIStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{124}
}

func (x *DescribeVodSpaceAIStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResponse) GetResult() *business.DescribeVodSpaceAIStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 智能字幕用量
type DescribeVodSpaceSubtitleStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceSubtitleStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{125}
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResponse) GetResult() *business.DescribeVodSpaceSubtitleStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 检测修复用量
type DescribeVodSpaceDetectStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                           `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceDetectStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataResponse) Reset() {
	*x = DescribeVodSpaceDetectStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{126}
}

func (x *DescribeVodSpaceDetectStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResponse) GetResult() *business.DescribeVodSpaceDetectStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播截图用量
type DescribeVodSnapshotDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSnapshotDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSnapshotDataResponse) Reset() {
	*x = DescribeVodSnapshotDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataResponse) ProtoMessage() {}

func (x *DescribeVodSnapshotDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{127}
}

func (x *DescribeVodSnapshotDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSnapshotDataResponse) GetResult() *business.DescribeVodSnapshotDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 工作流明细用量
type DescribeVodSpaceWorkflowDetailDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceWorkflowDetailDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) Reset() {
	*x = DescribeVodSpaceWorkflowDetailDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowDetailDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowDetailDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowDetailDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{128}
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceWorkflowDetailDataResponse) GetResult() *business.DescribeVodSpaceWorkflowDetailDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播编辑明细用量
type DescribeVodSpaceEditDetailDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceEditDetailDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceEditDetailDataResponse) Reset() {
	*x = DescribeVodSpaceEditDetailDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditDetailDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditDetailDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceEditDetailDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditDetailDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditDetailDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{129}
}

func (x *DescribeVodSpaceEditDetailDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceEditDetailDataResponse) GetResult() *business.DescribeVodSpaceEditDetailDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播实时处理用量
type DescribeVodRealtimeMediaDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodRealtimeMediaDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodRealtimeMediaDataResponse) Reset() {
	*x = DescribeVodRealtimeMediaDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDataResponse) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{130}
}

func (x *DescribeVodRealtimeMediaDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDataResponse) GetResult() *business.DescribeVodRealtimeMediaDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播实时处理明细用量
type DescribeVodRealtimeMediaDetailDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                             `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodRealtimeMediaDetailDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodRealtimeMediaDetailDataResponse) Reset() {
	*x = DescribeVodRealtimeMediaDetailDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDetailDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDetailDataResponse) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDetailDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDetailDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDetailDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{131}
}

func (x *DescribeVodRealtimeMediaDetailDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDetailDataResponse) GetResult() *business.DescribeVodRealtimeMediaDetailDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播文件域名粒度播放统计信息下载
type DescribeVodPlayFileLogByDomainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodPlayFileLogByDomainResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodPlayFileLogByDomainResponse) Reset() {
	*x = DescribeVodPlayFileLogByDomainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayFileLogByDomainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayFileLogByDomainResponse) ProtoMessage() {}

func (x *DescribeVodPlayFileLogByDomainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayFileLogByDomainResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayFileLogByDomainResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{132}
}

func (x *DescribeVodPlayFileLogByDomainResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodPlayFileLogByDomainResponse) GetResult() *business.DescribeVodPlayFileLogByDomainResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 点播截图用量
type DescribeVodEnhanceImageDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodEnhanceImageDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodEnhanceImageDataResponse) Reset() {
	*x = DescribeVodEnhanceImageDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodEnhanceImageDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodEnhanceImageDataResponse) ProtoMessage() {}

func (x *DescribeVodEnhanceImageDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodEnhanceImageDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodEnhanceImageDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{133}
}

func (x *DescribeVodEnhanceImageDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResponse) GetResult() *business.DescribeVodEnhanceImageDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 视频剪辑用量
type DescribeVodSpaceEditStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodSpaceEditStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodSpaceEditStatisDataResponse) Reset() {
	*x = DescribeVodSpaceEditStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodSpaceEditStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{134}
}

func (x *DescribeVodSpaceEditStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodSpaceEditStatisDataResponse) GetResult() *business.DescribeVodSpaceEditStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 查询视频播放信息
type DescribeVodPlayedStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                      `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodPlayedStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodPlayedStatisDataResponse) Reset() {
	*x = DescribeVodPlayedStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayedStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayedStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodPlayedStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayedStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayedStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{135}
}

func (x *DescribeVodPlayedStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodPlayedStatisDataResponse) GetResult() *business.DescribeVodPlayedStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 查询播放 TopN 的视频
type DescribeVodMostPlayedStatisDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodMostPlayedStatisDataResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodMostPlayedStatisDataResponse) Reset() {
	*x = DescribeVodMostPlayedStatisDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodMostPlayedStatisDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodMostPlayedStatisDataResponse) ProtoMessage() {}

func (x *DescribeVodMostPlayedStatisDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodMostPlayedStatisDataResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodMostPlayedStatisDataResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{136}
}

func (x *DescribeVodMostPlayedStatisDataResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodMostPlayedStatisDataResponse) GetResult() *business.DescribeVodMostPlayedStatisDataResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 文件vid粒度统计数据（分空间）下载地址接口
type DescribeVodVidTrafficFileLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                       `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.DescribeVodVidTrafficFileLogResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *DescribeVodVidTrafficFileLogResponse) Reset() {
	*x = DescribeVodVidTrafficFileLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodVidTrafficFileLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodVidTrafficFileLogResponse) ProtoMessage() {}

func (x *DescribeVodVidTrafficFileLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodVidTrafficFileLogResponse.ProtoReflect.Descriptor instead.
func (*DescribeVodVidTrafficFileLogResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{137}
}

func (x *DescribeVodVidTrafficFileLogResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *DescribeVodVidTrafficFileLogResponse) GetResult() *business.DescribeVodVidTrafficFileLogResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// 媒资封禁相关
type VodSubmitBlockMediaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                  `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSubmitBlockMediaTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitBlockMediaTaskResponse) Reset() {
	*x = VodSubmitBlockMediaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockMediaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockMediaTaskResponse) ProtoMessage() {}

func (x *VodSubmitBlockMediaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockMediaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockMediaTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{138}
}

func (x *VodSubmitBlockMediaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitBlockMediaTaskResponse) GetResult() *business.VodSubmitBlockMediaTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitUnblockMediaTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                    `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSubmitUnblockMediaTaskResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSubmitUnblockMediaTaskResponse) Reset() {
	*x = VodSubmitUnblockMediaTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitUnblockMediaTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitUnblockMediaTaskResponse) ProtoMessage() {}

func (x *VodSubmitUnblockMediaTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitUnblockMediaTaskResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitUnblockMediaTaskResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{139}
}

func (x *VodSubmitUnblockMediaTaskResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSubmitUnblockMediaTaskResponse) GetResult() *business.VodSubmitUnblockMediaTaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodQueryMediaBlockStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                   `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodQueryMediaBlockStatusResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodQueryMediaBlockStatusResponse) Reset() {
	*x = VodQueryMediaBlockStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryMediaBlockStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryMediaBlockStatusResponse) ProtoMessage() {}

func (x *VodQueryMediaBlockStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryMediaBlockStatusResponse.ProtoReflect.Descriptor instead.
func (*VodQueryMediaBlockStatusResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{140}
}

func (x *VodQueryMediaBlockStatusResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodQueryMediaBlockStatusResponse) GetResult() *business.VodQueryMediaBlockStatusResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 项目管理
// **********************************************************************
type VodListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata          `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodListProjectsResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodListProjectsResponse) Reset() {
	*x = VodListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListProjectsResponse) ProtoMessage() {}

func (x *VodListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListProjectsResponse.ProtoReflect.Descriptor instead.
func (*VodListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{141}
}

func (x *VodListProjectsResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodListProjectsResponse) GetResult() *business.VodListProjectsResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 账号交易管理
// **********************************************************************
type VodGetTradeConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                 `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.TradeConfigurationInfoResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetTradeConfigurationResponse) Reset() {
	*x = VodGetTradeConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetTradeConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetTradeConfigurationResponse) ProtoMessage() {}

func (x *VodGetTradeConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetTradeConfigurationResponse.ProtoReflect.Descriptor instead.
func (*VodGetTradeConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{142}
}

func (x *VodGetTradeConfigurationResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetTradeConfigurationResponse) GetResult() *business.TradeConfigurationInfoResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// 迁移平台
// **********************************************************************
type VodSetCloudMigrateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodSetCloudMigrateJobResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodSetCloudMigrateJobResponse) Reset() {
	*x = VodSetCloudMigrateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSetCloudMigrateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSetCloudMigrateJobResponse) ProtoMessage() {}

func (x *VodSetCloudMigrateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSetCloudMigrateJobResponse.ProtoReflect.Descriptor instead.
func (*VodSetCloudMigrateJobResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{143}
}

func (x *VodSetCloudMigrateJobResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodSetCloudMigrateJobResponse) GetResult() *business.VodSetCloudMigrateJobResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type VodSubmitCloudMigrateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
}

func (x *VodSubmitCloudMigrateJobResponse) Reset() {
	*x = VodSubmitCloudMigrateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitCloudMigrateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitCloudMigrateJobResponse) ProtoMessage() {}

func (x *VodSubmitCloudMigrateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitCloudMigrateJobResponse.ProtoReflect.Descriptor instead.
func (*VodSubmitCloudMigrateJobResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{144}
}

func (x *VodSubmitCloudMigrateJobResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

type VodGetCloudMigrateJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata                `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodGetCloudMigrateJobResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodGetCloudMigrateJobResponse) Reset() {
	*x = VodGetCloudMigrateJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodGetCloudMigrateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodGetCloudMigrateJobResponse) ProtoMessage() {}

func (x *VodGetCloudMigrateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodGetCloudMigrateJobResponse.ProtoReflect.Descriptor instead.
func (*VodGetCloudMigrateJobResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{145}
}

func (x *VodGetCloudMigrateJobResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodGetCloudMigrateJobResponse) GetResult() *business.VodGetCloudMigrateJobResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// **********************************************************************
// reporter打点
// **********************************************************************
type VodReportEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseMetadata *base.ResponseMetadata         `protobuf:"bytes,1,opt,name=ResponseMetadata,proto3" json:"ResponseMetadata,omitempty"`
	Result           *business.VodReportEventResult `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *VodReportEventResponse) Reset() {
	*x = VodReportEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodReportEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodReportEventResponse) ProtoMessage() {}

func (x *VodReportEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_response_response_vod_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodReportEventResponse.ProtoReflect.Descriptor instead.
func (*VodReportEventResponse) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_response_response_vod_proto_rawDescGZIP(), []int{146}
}

func (x *VodReportEventResponse) GetResponseMetadata() *base.ResponseMetadata {
	if x != nil {
		return x.ResponseMetadata
	}
	return nil
}

func (x *VodReportEventResponse) GetResult() *business.VodReportEventResult {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_volcengine_vod_response_response_vod_proto protoreflect.FileDescriptor

var file_volcengine_vod_response_response_vod_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x76, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x1a, 0x76, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x27, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x76, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x65, 0x64, 0x69,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x25, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x63, 0x64,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x30, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f,
	0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x29, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x76,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f,
	0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x76, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f,
	0x76, 0x6f, 0x64, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2a, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4,
	0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x41, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x20, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c,
	0x61, 0x79, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x44, 0x72, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6c, 0x73, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x6c, 0x73, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xed, 0x01, 0x0a, 0x2c, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x62, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x4c,
	0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x68, 0x69, 0x66, 0x74, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xcf, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44,
	0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xda, 0x01, 0x0a, 0x22, 0x56, 0x6f,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xd3, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xba, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x44, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x14, 0x56, 0x6f, 0x64, 0x55,
	0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xe3, 0x01, 0x0a, 0x27, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x42, 0x79,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x77, 0x0a,
	0x1a, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x23, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd7, 0x01, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xbf, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x76, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x01, 0x0a, 0x1b, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x6f, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x54, 0x6f, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1e, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1f,
	0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x7a, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x21,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcf, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x4d, 0x4c, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74,
	0x74, 0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x42, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3,
	0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f,
	0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x30, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x67, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x66, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x6d, 0x61, 0x74, 0x69, 0x63, 0x53, 0x70, 0x65, 0x65, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x67,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe7, 0x01, 0x0a,
	0x29, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x46, 0x6f, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd5, 0x01, 0x0a,
	0x23, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x01,
	0x0a, 0x21, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x50, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x38, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x55, 0x52, 0x4c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x64,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x56, 0x69, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x64, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x79, 0x56, 0x69, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x1f, 0x56, 0x6f, 0x64,
	0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x4d, 0x65, 0x74, 0x61,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc5, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xc8, 0x01, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x20, 0x56,
	0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x25, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x25, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xc4, 0x01, 0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x49, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1d,
	0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xc9, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xc6, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x57, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7e, 0x0a, 0x21, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7e, 0x0a, 0x21, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xce, 0x01, 0x0a, 0x1e, 0x56,
	0x6f, 0x64, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x1f,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xbd, 0x01, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67,
	0x6f, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x77, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x1a, 0x56, 0x6f,
	0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x57, 0x61,
	0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcd, 0x01, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x61, 0x74, 0x65,
	0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xda, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd8, 0x01,
	0x0a, 0x23, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64,
	0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xcc, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64,
	0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x47,
	0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xca, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x73, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x56, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x73, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x01, 0x0a, 0x24, 0x56, 0x6f, 0x64,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7f, 0x0a, 0x22, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe1, 0x01, 0x0a, 0x26,
	0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x5c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x7c, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a,
	0x1f, 0x56, 0x6f, 0x64, 0x41, 0x64, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x53,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x24,
	0x56, 0x6f, 0x64, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x74, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x15, 0x56, 0x6f,
	0x64, 0x53, 0x74, 0x6f, 0x70, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf,
	0x01, 0x0a, 0x15, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xcc, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64,
	0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x4e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xcc, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e,
	0x50, 0x72, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4e,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe,
	0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xcb, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01,
	0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e,
	0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x64, 0x6e, 0x54, 0x6f, 0x70, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xe7, 0x01, 0x0a, 0x29, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x42, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x1e, 0x56, 0x6f,
	0x64, 0x43, 0x64, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01,
	0x0a, 0x19, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x49, 0x50, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x64, 0x6e, 0x49, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a,
	0x27, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xd3, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x76, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76,
	0x0a, 0x19, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x56, 0x33, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x56,
	0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x23, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x26, 0x56, 0x6f, 0x64, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01,
	0x0a, 0x1c, 0x56, 0x6f, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01,
	0x0a, 0x26, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xc7, 0x01, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x43, 0x44,
	0x4e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4f, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x50,
	0x43, 0x44, 0x4e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x78, 0x0a, 0x1b, 0x56,
	0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x43, 0x44, 0x4e, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x77, 0x0a, 0x1a, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x43, 0x44, 0x4e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x76,
	0x0a, 0x19, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x43, 0x44, 0x4e, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x1b, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x43, 0x44, 0x4e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x7a, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd3, 0x01, 0x0a,
	0x1f, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x7d, 0x0a, 0x20, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x56, 0x32, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x75, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7f, 0x0a, 0x22, 0x56, 0x6f, 0x64, 0x41,
	0x64, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x1b, 0x56, 0x6f, 0x64,
	0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xbf, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x27, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74,
	0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x4c, 0x69, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x4c, 0x69, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x15,
	0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdf, 0x01,
	0x0a, 0x25, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x5b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x43, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xdd, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xe9, 0x01, 0x0a, 0x2a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe5, 0x01, 0x0a, 0x28,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x2a, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdd, 0x01, 0x0a, 0x24, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69,
	0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x2a, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x60, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67,
	0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x23, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5c, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x23,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x59,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe3, 0x01, 0x0a, 0x27, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x5d, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x4d, 0x6f, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xdd, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x56,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x5a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x56, 0x69, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xd3, 0x01, 0x0a, 0x1f, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x55,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x57, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x55, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xd5, 0x01, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x56, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x17, 0x56, 0x6f, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01,
	0x0a, 0x20, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a,
	0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x69, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x0a, 0x20, 0x56, 0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x01, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x53, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x69,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x59, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0xcc, 0x01, 0x0a, 0x29, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0b, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76,
	0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01,
	0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_volcengine_vod_response_response_vod_proto_rawDescOnce sync.Once
	file_volcengine_vod_response_response_vod_proto_rawDescData = file_volcengine_vod_response_response_vod_proto_rawDesc
)

func file_volcengine_vod_response_response_vod_proto_rawDescGZIP() []byte {
	file_volcengine_vod_response_response_vod_proto_rawDescOnce.Do(func() {
		file_volcengine_vod_response_response_vod_proto_rawDescData = protoimpl.X.CompressGZIP(file_volcengine_vod_response_response_vod_proto_rawDescData)
	})
	return file_volcengine_vod_response_response_vod_proto_rawDescData
}

var file_volcengine_vod_response_response_vod_proto_msgTypes = make([]protoimpl.MessageInfo, 147)
var file_volcengine_vod_response_response_vod_proto_goTypes = []interface{}{
	(*VodGetAllPlayInfoResponse)(nil),                               // 0: Volcengine.Vod.Models.Response.VodGetAllPlayInfoResponse
	(*VodGetPlayInfoResponse)(nil),                                  // 1: Volcengine.Vod.Models.Response.VodGetPlayInfoResponse
	(*VodGetOriginalPlayInfoResponse)(nil),                          // 2: Volcengine.Vod.Models.Response.VodGetOriginalPlayInfoResponse
	(*VodGetPrivateDrmPlayAuthResponse)(nil),                        // 3: Volcengine.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse
	(*VodGetHlsDecryptionKeyResponse)(nil),                          // 4: Volcengine.Vod.Models.Response.VodGetHlsDecryptionKeyResponse
	(*VodCreateHlsDecryptionKeyResponse)(nil),                       // 5: Volcengine.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse
	(*VodGetPlayInfoWithLiveTimeShiftSceneResponse)(nil),            // 6: Volcengine.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse
	(*VodDescribeDrmDataKeyResponse)(nil),                           // 7: Volcengine.Vod.Models.Response.VodDescribeDrmDataKeyResponse
	(*VodSubmitMoveObjectTaskResponse)(nil),                         // 8: Volcengine.Vod.Models.Response.VodSubmitMoveObjectTaskResponse
	(*VodQueryMoveObjectTaskInfoResponse)(nil),                      // 9: Volcengine.Vod.Models.Response.VodQueryMoveObjectTaskInfoResponse
	(*VodSubmitBlockObjectTasksResponse)(nil),                       // 10: Volcengine.Vod.Models.Response.VodSubmitBlockObjectTasksResponse
	(*VodListBlockObjectTasksResponse)(nil),                         // 11: Volcengine.Vod.Models.Response.VodListBlockObjectTasksResponse
	(*VodUploadMediaResponse)(nil),                                  // 12: Volcengine.Vod.Models.Response.VodUploadMediaResponse
	(*VodQueryUploadTaskInfoResponse)(nil),                          // 13: Volcengine.Vod.Models.Response.VodQueryUploadTaskInfoResponse
	(*VodUrlUploadResponse)(nil),                                    // 14: Volcengine.Vod.Models.Response.VodUrlUploadResponse
	(*VodApplyUploadInfoResponse)(nil),                              // 15: Volcengine.Vod.Models.Response.VodApplyUploadInfoResponse
	(*VodCommitUploadInfoResponse)(nil),                             // 16: Volcengine.Vod.Models.Response.VodCommitUploadInfoResponse
	(*VodListFileMetaInfosByFileNamesResponse)(nil),                 // 17: Volcengine.Vod.Models.Response.VodListFileMetaInfosByFileNamesResponse
	(*VodGetMediaInfosResponse)(nil),                                // 18: Volcengine.Vod.Models.Response.VodGetMediaInfosResponse
	(*VodUpdateMediaInfoResponse)(nil),                              // 19: Volcengine.Vod.Models.Response.VodUpdateMediaInfoResponse
	(*VodGetRecommendedPosterResponse)(nil),                         // 20: Volcengine.Vod.Models.Response.VodGetRecommendedPosterResponse
	(*VodUpdateMediaPublishStatusResponse)(nil),                     // 21: Volcengine.Vod.Models.Response.VodUpdateMediaPublishStatusResponse
	(*VodUpdateMediaStorageClassResponse)(nil),                      // 22: Volcengine.Vod.Models.Response.VodUpdateMediaStorageClassResponse
	(*VodDeleteMediaResponse)(nil),                                  // 23: Volcengine.Vod.Models.Response.VodDeleteMediaResponse
	(*VodDeleteMaterialResponse)(nil),                               // 24: Volcengine.Vod.Models.Response.VodDeleteMaterialResponse
	(*VodDeleteTranscodesResponse)(nil),                             // 25: Volcengine.Vod.Models.Response.VodDeleteTranscodesResponse
	(*VodDeleteMediaTosFileResponse)(nil),                           // 26: Volcengine.Vod.Models.Response.VodDeleteMediaTosFileResponse
	(*VodGetMediaListResponse)(nil),                                 // 27: Volcengine.Vod.Models.Response.VodGetMediaListResponse
	(*VodGetSubtitleInfoListResponse)(nil),                          // 28: Volcengine.Vod.Models.Response.VodGetSubtitleInfoListResponse
	(*VodUpdateSubtitleStatusResponse)(nil),                         // 29: Volcengine.Vod.Models.Response.VodUpdateSubtitleStatusResponse
	(*VodUpdateSubtitleInfoResponse)(nil),                           // 30: Volcengine.Vod.Models.Response.VodUpdateSubtitleInfoResponse
	(*VodGetAuditFramesForAuditResponse)(nil),                       // 31: Volcengine.Vod.Models.Response.VodGetAuditFramesForAuditResponse
	(*VodGetMLFramesForAuditResponse)(nil),                          // 32: Volcengine.Vod.Models.Response.VodGetMLFramesForAuditResponse
	(*VodGetBetterFramesForAuditResponse)(nil),                      // 33: Volcengine.Vod.Models.Response.VodGetBetterFramesForAuditResponse
	(*VodGetAudioInfoForAuditResponse)(nil),                         // 34: Volcengine.Vod.Models.Response.VodGetAudioInfoForAuditResponse
	(*VodGetAutomaticSpeechRecognitionForAuditResponse)(nil),        // 35: Volcengine.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse
	(*VodGetAudioEventDetectionForAuditResponse)(nil),               // 36: Volcengine.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse
	(*VodCreateVideoClassificationResponse)(nil),                    // 37: Volcengine.Vod.Models.Response.VodCreateVideoClassificationResponse
	(*VodUpdateVideoClassificationResponse)(nil),                    // 38: Volcengine.Vod.Models.Response.VodUpdateVideoClassificationResponse
	(*VodDeleteVideoClassificationResponse)(nil),                    // 39: Volcengine.Vod.Models.Response.VodDeleteVideoClassificationResponse
	(*VodListVideoClassificationsResponse)(nil),                     // 40: Volcengine.Vod.Models.Response.VodListVideoClassificationsResponse
	(*VodListSnapshotsResponse)(nil),                                // 41: Volcengine.Vod.Models.Response.VodListSnapshotsResponse
	(*VodGetFileListResponse)(nil),                                  // 42: Volcengine.Vod.Models.Response.VodGetFileListResponse
	(*VodGetFileInfosResponse)(nil),                                 // 43: Volcengine.Vod.Models.Response.VodGetFileInfosResponse
	(*VodUpdateFileStorageClassResponse)(nil),                       // 44: Volcengine.Vod.Models.Response.VodUpdateFileStorageClassResponse
	(*VodGetInnerAuditURLsResponse)(nil),                            // 45: Volcengine.Vod.Models.Response.VodGetInnerAuditURLsResponse
	(*VodGetAdAuditResultByVidResponse)(nil),                        // 46: Volcengine.Vod.Models.Response.VodGetAdAuditResultByVidResponse
	(*VodExtractMediaMetaTaskResponse)(nil),                         // 47: Volcengine.Vod.Models.Response.VodExtractMediaMetaTaskResponse
	(*VodStartWorkflowResponse)(nil),                                // 48: Volcengine.Vod.Models.Response.VodStartWorkflowResponse
	(*VodRetrieveTranscodeResultResponse)(nil),                      // 49: Volcengine.Vod.Models.Response.VodRetrieveTranscodeResultResponse
	(*VodListWorkflowExecutionResponse)(nil),                        // 50: Volcengine.Vod.Models.Response.VodListWorkflowExecutionResponse
	(*VodGetWorkflowExecutionDetailResponse)(nil),                   // 51: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse
	(*VodGetWorkflowExecutionStatusResponse)(nil),                   // 52: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse
	(*VodGetWorkflowResultResponse)(nil),                            // 53: Volcengine.Vod.Models.Response.VodGetWorkflowResultResponse
	(*VodCreateTaskTemplateResponse)(nil),                           // 54: Volcengine.Vod.Models.Response.VodCreateTaskTemplateResponse
	(*VodUpdateTaskTemplateResponse)(nil),                           // 55: Volcengine.Vod.Models.Response.VodUpdateTaskTemplateResponse
	(*VodDeleteTaskTemplateResponse)(nil),                           // 56: Volcengine.Vod.Models.Response.VodDeleteTaskTemplateResponse
	(*VodGetTaskTemplateResponse)(nil),                              // 57: Volcengine.Vod.Models.Response.VodGetTaskTemplateResponse
	(*VodListTaskTemplateResponse)(nil),                             // 58: Volcengine.Vod.Models.Response.VodListTaskTemplateResponse
	(*VodCreateWorkflowTemplateResponse)(nil),                       // 59: Volcengine.Vod.Models.Response.VodCreateWorkflowTemplateResponse
	(*VodUpdateWorkflowTemplateResponse)(nil),                       // 60: Volcengine.Vod.Models.Response.VodUpdateWorkflowTemplateResponse
	(*VodDeleteWorkflowTemplateResponse)(nil),                       // 61: Volcengine.Vod.Models.Response.VodDeleteWorkflowTemplateResponse
	(*VodGetWorkflowTemplateResponse)(nil),                          // 62: Volcengine.Vod.Models.Response.VodGetWorkflowTemplateResponse
	(*VodListWorkflowTemplateResponse)(nil),                         // 63: Volcengine.Vod.Models.Response.VodListWorkflowTemplateResponse
	(*VodCreateWatermarkResponse)(nil),                              // 64: Volcengine.Vod.Models.Response.VodCreateWatermarkResponse
	(*VodUpdateWatermarkResponse)(nil),                              // 65: Volcengine.Vod.Models.Response.VodUpdateWatermarkResponse
	(*VodDeleteWatermarkResponse)(nil),                              // 66: Volcengine.Vod.Models.Response.VodDeleteWatermarkResponse
	(*VodGetWatermarkResponse)(nil),                                 // 67: Volcengine.Vod.Models.Response.VodGetWatermarkResponse
	(*VodListWatermarkResponse)(nil),                                // 68: Volcengine.Vod.Models.Response.VodListWatermarkResponse
	(*VodSubmitDirectEditTaskAsyncResponse)(nil),                    // 69: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse
	(*VodSubmitDirectEditTaskSyncResponse)(nil),                     // 70: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskSyncResponse
	(*VodGetDirectEditProgressResponse)(nil),                        // 71: Volcengine.Vod.Models.Response.VodGetDirectEditProgressResponse
	(*VodGetDirectEditResultResponse)(nil),                          // 72: Volcengine.Vod.Models.Response.VodGetDirectEditResultResponse
	(*VodCancelDirectEditTaskResponse)(nil),                         // 73: Volcengine.Vod.Models.Response.VodCancelDirectEditTaskResponse
	(*VodCreateSpaceResponse)(nil),                                  // 74: Volcengine.Vod.Models.Response.VodCreateSpaceResponse
	(*VodDeleteSpaceResponse)(nil),                                  // 75: Volcengine.Vod.Models.Response.VodDeleteSpaceResponse
	(*VodListSpaceResponse)(nil),                                    // 76: Volcengine.Vod.Models.Response.VodListSpaceResponse
	(*VodGetSpaceDetailResponse)(nil),                               // 77: Volcengine.Vod.Models.Response.VodGetSpaceDetailResponse
	(*VodUpdateSpaceResponse)(nil),                                  // 78: Volcengine.Vod.Models.Response.VodUpdateSpaceResponse
	(*VodUpdateSpaceUploadConfigResponse)(nil),                      // 79: Volcengine.Vod.Models.Response.VodUpdateSpaceUploadConfigResponse
	(*VodDescribeUploadSpaceConfigResponse)(nil),                    // 80: Volcengine.Vod.Models.Response.VodDescribeUploadSpaceConfigResponse
	(*VodUpdateUploadSpaceConfigResponse)(nil),                      // 81: Volcengine.Vod.Models.Response.VodUpdateUploadSpaceConfigResponse
	(*VodDescribeVodSpaceStorageDataResponse)(nil),                  // 82: Volcengine.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse
	(*VodUpdateDomainPlayRuleResponse)(nil),                         // 83: Volcengine.Vod.Models.Response.VodUpdateDomainPlayRuleResponse
	(*VodAddDomainToSchedulerResponse)(nil),                         // 84: Volcengine.Vod.Models.Response.VodAddDomainToSchedulerResponse
	(*VodRemoveDomainFromSchedulerResponse)(nil),                    // 85: Volcengine.Vod.Models.Response.VodRemoveDomainFromSchedulerResponse
	(*VodDeleteDomainResponse)(nil),                                 // 86: Volcengine.Vod.Models.Response.VodDeleteDomainResponse
	(*VodStartDomainResponse)(nil),                                  // 87: Volcengine.Vod.Models.Response.VodStartDomainResponse
	(*VodStopDomainResponse)(nil),                                   // 88: Volcengine.Vod.Models.Response.VodStopDomainResponse
	(*VodListDomainResponse)(nil),                                   // 89: Volcengine.Vod.Models.Response.VodListDomainResponse
	(*VodCreateCdnRefreshTaskResponse)(nil),                         // 90: Volcengine.Vod.Models.Response.VodCreateCdnRefreshTaskResponse
	(*VodCreateCdnPreloadTaskResponse)(nil),                         // 91: Volcengine.Vod.Models.Response.VodCreateCdnPreloadTaskResponse
	(*VodListCdnTasksResponse)(nil),                                 // 92: Volcengine.Vod.Models.Response.VodListCdnTasksResponse
	(*VodListCdnAccessLogResponse)(nil),                             // 93: Volcengine.Vod.Models.Response.VodListCdnAccessLogResponse
	(*VodListCdnTopAccessUrlResponse)(nil),                          // 94: Volcengine.Vod.Models.Response.VodListCdnTopAccessUrlResponse
	(*VodListCdnTopAccessResponse)(nil),                             // 95: Volcengine.Vod.Models.Response.VodListCdnTopAccessResponse
	(*VodDescribeVodDomainBandwidthDataResponse)(nil),               // 96: Volcengine.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse
	(*VodCdnStatisticsCommonResponse)(nil),                          // 97: Volcengine.Vod.Models.Response.VodCdnStatisticsCommonResponse
	(*VodDescribeIPInfoResponse)(nil),                               // 98: Volcengine.Vod.Models.Response.VodDescribeIPInfoResponse
	(*VodDescribeVodDomainTrafficDataResponse)(nil),                 // 99: Volcengine.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse
	(*VodSubmitBlockTasksResponse)(nil),                             // 100: Volcengine.Vod.Models.Response.VodSubmitBlockTasksResponse
	(*VodGetContentBlockTasksResponse)(nil),                         // 101: Volcengine.Vod.Models.Response.VodGetContentBlockTasksResponse
	(*VodCreateDomainV2Response)(nil),                               // 102: Volcengine.Vod.Models.Response.VodCreateDomainV2Response
	(*VodCreateDomainV3Response)(nil),                               // 103: Volcengine.Vod.Models.Response.VodCreateDomainV3Response
	(*VodUpdateDomainExpireV2Response)(nil),                         // 104: Volcengine.Vod.Models.Response.VodUpdateDomainExpireV2Response
	(*VodUpdateDomainAuthConfigV2Response)(nil),                     // 105: Volcengine.Vod.Models.Response.VodUpdateDomainAuthConfigV2Response
	(*VodUpdateDomainUrlAuthConfigV2Response)(nil),                  // 106: Volcengine.Vod.Models.Response.VodUpdateDomainUrlAuthConfigV2Response
	(*VodVerifyDomainOwnerResponse)(nil),                            // 107: Volcengine.Vod.Models.Response.VodVerifyDomainOwnerResponse
	(*VodDescribeDomainVerifyContentResponse)(nil),                  // 108: Volcengine.Vod.Models.Response.VodDescribeDomainVerifyContentResponse
	(*VodListPCDNDomainResponse)(nil),                               // 109: Volcengine.Vod.Models.Response.VodListPCDNDomainResponse
	(*VodCreatePCDNDomainResponse)(nil),                             // 110: Volcengine.Vod.Models.Response.VodCreatePCDNDomainResponse
	(*VodStartPCDNDomainResponse)(nil),                              // 111: Volcengine.Vod.Models.Response.VodStartPCDNDomainResponse
	(*VodStopPCDNDomainResponse)(nil),                               // 112: Volcengine.Vod.Models.Response.VodStopPCDNDomainResponse
	(*VodDeletePCDNDomainResponse)(nil),                             // 113: Volcengine.Vod.Models.Response.VodDeletePCDNDomainResponse
	(*VodUpdateDomainConfigResponse)(nil),                           // 114: Volcengine.Vod.Models.Response.VodUpdateDomainConfigResponse
	(*VodDescribeDomainConfigResponse)(nil),                         // 115: Volcengine.Vod.Models.Response.VodDescribeDomainConfigResponse
	(*AddOrUpdateCertificateV2Response)(nil),                        // 116: Volcengine.Vod.Models.Response.AddOrUpdateCertificateV2Response
	(*UpdateDomainAreaResponse)(nil),                                // 117: Volcengine.Vod.Models.Response.UpdateDomainAreaResponse
	(*VodAddCallbackSubscriptionResponse)(nil),                      // 118: Volcengine.Vod.Models.Response.VodAddCallbackSubscriptionResponse
	(*VodSetCallbackEventResponse)(nil),                             // 119: Volcengine.Vod.Models.Response.VodSetCallbackEventResponse
	(*GetCallbackRecordResponse)(nil),                               // 120: Volcengine.Vod.Models.Response.GetCallbackRecordResponse
	(*VodGetSmartStrategyLitePlayInfoResponse)(nil),                 // 121: Volcengine.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse
	(*VodGetAppInfoResponse)(nil),                                   // 122: Volcengine.Vod.Models.Response.VodGetAppInfoResponse
	(*DescribeVodSpaceTranscodeDataResponse)(nil),                   // 123: Volcengine.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse
	(*DescribeVodSpaceAIStatisDataResponse)(nil),                    // 124: Volcengine.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse
	(*DescribeVodSpaceSubtitleStatisDataResponse)(nil),              // 125: Volcengine.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse
	(*DescribeVodSpaceDetectStatisDataResponse)(nil),                // 126: Volcengine.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse
	(*DescribeVodSnapshotDataResponse)(nil),                         // 127: Volcengine.Vod.Models.Response.DescribeVodSnapshotDataResponse
	(*DescribeVodSpaceWorkflowDetailDataResponse)(nil),              // 128: Volcengine.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse
	(*DescribeVodSpaceEditDetailDataResponse)(nil),                  // 129: Volcengine.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse
	(*DescribeVodRealtimeMediaDataResponse)(nil),                    // 130: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse
	(*DescribeVodRealtimeMediaDetailDataResponse)(nil),              // 131: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDetailDataResponse
	(*DescribeVodPlayFileLogByDomainResponse)(nil),                  // 132: Volcengine.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse
	(*DescribeVodEnhanceImageDataResponse)(nil),                     // 133: Volcengine.Vod.Models.Response.DescribeVodEnhanceImageDataResponse
	(*DescribeVodSpaceEditStatisDataResponse)(nil),                  // 134: Volcengine.Vod.Models.Response.DescribeVodSpaceEditStatisDataResponse
	(*DescribeVodPlayedStatisDataResponse)(nil),                     // 135: Volcengine.Vod.Models.Response.DescribeVodPlayedStatisDataResponse
	(*DescribeVodMostPlayedStatisDataResponse)(nil),                 // 136: Volcengine.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse
	(*DescribeVodVidTrafficFileLogResponse)(nil),                    // 137: Volcengine.Vod.Models.Response.DescribeVodVidTrafficFileLogResponse
	(*VodSubmitBlockMediaTaskResponse)(nil),                         // 138: Volcengine.Vod.Models.Response.VodSubmitBlockMediaTaskResponse
	(*VodSubmitUnblockMediaTaskResponse)(nil),                       // 139: Volcengine.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse
	(*VodQueryMediaBlockStatusResponse)(nil),                        // 140: Volcengine.Vod.Models.Response.VodQueryMediaBlockStatusResponse
	(*VodListProjectsResponse)(nil),                                 // 141: Volcengine.Vod.Models.Response.VodListProjectsResponse
	(*VodGetTradeConfigurationResponse)(nil),                        // 142: Volcengine.Vod.Models.Response.VodGetTradeConfigurationResponse
	(*VodSetCloudMigrateJobResponse)(nil),                           // 143: Volcengine.Vod.Models.Response.VodSetCloudMigrateJobResponse
	(*VodSubmitCloudMigrateJobResponse)(nil),                        // 144: Volcengine.Vod.Models.Response.VodSubmitCloudMigrateJobResponse
	(*VodGetCloudMigrateJobResponse)(nil),                           // 145: Volcengine.Vod.Models.Response.VodGetCloudMigrateJobResponse
	(*VodReportEventResponse)(nil),                                  // 146: Volcengine.Vod.Models.Response.VodReportEventResponse
	(*base.ResponseMetadata)(nil),                                   // 147: Volcengine.Base.Models.Base.ResponseMetadata
	(*business.VodAllPlayInfoResult)(nil),                           // 148: Volcengine.Vod.Models.Business.VodAllPlayInfoResult
	(*business.VodPlayInfoModel)(nil),                               // 149: Volcengine.Vod.Models.Business.VodPlayInfoModel
	(*business.VodGetOriginalPlayInfoResult)(nil),                   // 150: Volcengine.Vod.Models.Business.VodGetOriginalPlayInfoResult
	(*business.VodGetPrivateDrmPlayAuthResult)(nil),                 // 151: Volcengine.Vod.Models.Business.VodGetPrivateDrmPlayAuthResult
	(*business.VodGetHlsDecryptionKeyResult)(nil),                   // 152: Volcengine.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	(*business.VodCreateHlsDecryptionKeyResult)(nil),                // 153: Volcengine.Vod.Models.Business.VodCreateHlsDecryptionKeyResult
	(*business.VodGetPlayInfoWithLiveTimeShiftSceneResult)(nil),     // 154: Volcengine.Vod.Models.Business.VodGetPlayInfoWithLiveTimeShiftSceneResult
	(*business.VodDescribeDrmDataKeyResult)(nil),                    // 155: Volcengine.Vod.Models.Business.VodDescribeDrmDataKeyResult
	(*business.VodSubmitMoveObjectTaskRespData)(nil),                // 156: Volcengine.Vod.Models.Business.VodSubmitMoveObjectTaskRespData
	(*business.VodQueryMoveObjectTaskInfoResData)(nil),              // 157: Volcengine.Vod.Models.Business.VodQueryMoveObjectTaskInfoResData
	(*business.VodSubmitBlockObjectTasksResult)(nil),                // 158: Volcengine.Vod.Models.Business.VodSubmitBlockObjectTasksResult
	(*business.VodListBlockObjectTasksResult)(nil),                  // 159: Volcengine.Vod.Models.Business.VodListBlockObjectTasksResult
	(*business.VodCommitData)(nil),                                  // 160: Volcengine.Vod.Models.Business.VodCommitData
	(*business.VodQueryData)(nil),                                   // 161: Volcengine.Vod.Models.Business.VodQueryData
	(*business.VodUrlResponseData)(nil),                             // 162: Volcengine.Vod.Models.Business.VodUrlResponseData
	(*business.VodApplyUploadInfoResult)(nil),                       // 163: Volcengine.Vod.Models.Business.VodApplyUploadInfoResult
	(*business.VodCommitUploadInfoResult)(nil),                      // 164: Volcengine.Vod.Models.Business.VodCommitUploadInfoResult
	(*business.VodListFileMetaInfosByFileNamesResult)(nil),          // 165: Volcengine.Vod.Models.Business.VodListFileMetaInfosByFileNamesResult
	(*business.VodGetMediaInfosData)(nil),                           // 166: Volcengine.Vod.Models.Business.VodGetMediaInfosData
	(*business.VodGetRecPosterData)(nil),                            // 167: Volcengine.Vod.Models.Business.VodGetRecPosterData
	(*business.VodUpdateMediaStorageClassData)(nil),                 // 168: Volcengine.Vod.Models.Business.VodUpdateMediaStorageClassData
	(*business.VodDeleteMediaData)(nil),                             // 169: Volcengine.Vod.Models.Business.VodDeleteMediaData
	(*business.VodDeleteTranscodesData)(nil),                        // 170: Volcengine.Vod.Models.Business.VodDeleteTranscodesData
	(*business.VodDeleteMediaTosFileData)(nil),                      // 171: Volcengine.Vod.Models.Business.VodDeleteMediaTosFileData
	(*business.VodGetMediaListData)(nil),                            // 172: Volcengine.Vod.Models.Business.VodGetMediaListData
	(*business.VodGetSubtitleInfoListData)(nil),                     // 173: Volcengine.Vod.Models.Business.VodGetSubtitleInfoListData
	(*business.VodUpdateSubtitleStatusData)(nil),                    // 174: Volcengine.Vod.Models.Business.VodUpdateSubtitleStatusData
	(*business.VodGetFramesForAuditResult)(nil),                     // 175: Volcengine.Vod.Models.Business.VodGetFramesForAuditResult
	(*business.VodGetBetterFramesForAuditResult)(nil),               // 176: Volcengine.Vod.Models.Business.VodGetBetterFramesForAuditResult
	(*business.VodGetAudioInfoForAuditResult)(nil),                  // 177: Volcengine.Vod.Models.Business.VodGetAudioInfoForAuditResult
	(*business.VodGetAutomaticSpeechRecognitionForAuditResult)(nil), // 178: Volcengine.Vod.Models.Business.VodGetAutomaticSpeechRecognitionForAuditResult
	(*business.VodGetAudioEventDetectionForAuditResult)(nil),        // 179: Volcengine.Vod.Models.Business.VodGetAudioEventDetectionForAuditResult
	(*business.VodCreateVideoClassificationData)(nil),               // 180: Volcengine.Vod.Models.Business.VodCreateVideoClassificationData
	(*business.VodVideoClassificationsData)(nil),                    // 181: Volcengine.Vod.Models.Business.VodVideoClassificationsData
	(*business.VodSnapshotData)(nil),                                // 182: Volcengine.Vod.Models.Business.VodSnapshotData
	(*business.VodGetFileInfosData)(nil),                            // 183: Volcengine.Vod.Models.Business.VodGetFileInfosData
	(*business.VodUpdateFileStorageClassData)(nil),                  // 184: Volcengine.Vod.Models.Business.VodUpdateFileStorageClassData
	(*business.VodGetInnerAuditURLsData)(nil),                       // 185: Volcengine.Vod.Models.Business.VodGetInnerAuditURLsData
	(*business.VodGetAdAuditResultByVidData)(nil),                   // 186: Volcengine.Vod.Models.Business.VodGetAdAuditResultByVidData
	(*business.VodStartWorkflowResult)(nil),                         // 187: Volcengine.Vod.Models.Business.VodStartWorkflowResult
	(*business.TranscodeResult)(nil),                                // 188: Volcengine.Vod.Models.Business.TranscodeResult
	(*business.VodListWorkflowExecutionResult)(nil),                 // 189: Volcengine.Vod.Models.Business.VodListWorkflowExecutionResult
	(*business.VodGetWorkflowExecutionDetailResult)(nil),            // 190: Volcengine.Vod.Models.Business.VodGetWorkflowExecutionDetailResult
	(*business.WorkflowExecution)(nil),                              // 191: Volcengine.Vod.Models.Business.WorkflowExecution
	(*business.VodWorkflowResult)(nil),                              // 192: Volcengine.Vod.Models.Business.VodWorkflowResult
	(*business.VodTaskTemplateResult)(nil),                          // 193: Volcengine.Vod.Models.Business.VodTaskTemplateResult
	(*business.VodListTaskTemplateResult)(nil),                      // 194: Volcengine.Vod.Models.Business.VodListTaskTemplateResult
	(*business.VodWorkflowTemplateResult)(nil),                      // 195: Volcengine.Vod.Models.Business.VodWorkflowTemplateResult
	(*business.VodListWorkflowTemplateResult)(nil),                  // 196: Volcengine.Vod.Models.Business.VodListWorkflowTemplateResult
	(*business.LogoTemplate)(nil),                                   // 197: Volcengine.Vod.Models.Business.LogoTemplate
	(*business.VodListWatermarkResponseResult)(nil),                 // 198: Volcengine.Vod.Models.Business.VodListWatermarkResponseResult
	(*business.SubmitDirectEditTaskAsyncResult)(nil),                // 199: Volcengine.Vod.Models.Business.SubmitDirectEditTaskAsyncResult
	(*business.SubmitDirectEditTaskSyncResult)(nil),                 // 200: Volcengine.Vod.Models.Business.SubmitDirectEditTaskSyncResult
	(*business.GetDirectEditProgress)(nil),                          // 201: Volcengine.Vod.Models.Business.GetDirectEditProgress
	(*business.GetDirectEditResult)(nil),                            // 202: Volcengine.Vod.Models.Business.GetDirectEditResult
	(*business.CancelDirectEditTask)(nil),                           // 203: Volcengine.Vod.Models.Business.CancelDirectEditTask
	(*business.VodSpaceInfo)(nil),                                   // 204: Volcengine.Vod.Models.Business.VodSpaceInfo
	(*business.VodUploadSpaceConfig)(nil),                           // 205: Volcengine.Vod.Models.Business.VodUploadSpaceConfig
	(*business.VodDescribeVodSpaceStorageDataResult)(nil),           // 206: Volcengine.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult
	(*business.VodDomainConfigInfo)(nil),                            // 207: Volcengine.Vod.Models.Business.VodDomainConfigInfo
	(*business.VodCreateCdnTaskResult)(nil),                         // 208: Volcengine.Vod.Models.Business.VodCreateCdnTaskResult
	(*business.VodCdnTaskResult)(nil),                               // 209: Volcengine.Vod.Models.Business.VodCdnTaskResult
	(*business.VodListCdnAccessLogResult)(nil),                      // 210: Volcengine.Vod.Models.Business.VodListCdnAccessLogResult
	(*business.VodListCdnTopAccessUrlResult)(nil),                   // 211: Volcengine.Vod.Models.Business.VodListCdnTopAccessUrlResult
	(*business.VodListCdnTopAccessResult)(nil),                      // 212: Volcengine.Vod.Models.Business.VodListCdnTopAccessResult
	(*business.VodDescribeVodDomainBandwidthDataResult)(nil),        // 213: Volcengine.Vod.Models.Business.VodDescribeVodDomainBandwidthDataResult
	(*business.VodCdnStatisticsCommonResult)(nil),                   // 214: Volcengine.Vod.Models.Business.VodCdnStatisticsCommonResult
	(*business.VodCdnIpInfo)(nil),                                   // 215: Volcengine.Vod.Models.Business.VodCdnIpInfo
	(*business.VodDescribeVodDomainTrafficDataResult)(nil),          // 216: Volcengine.Vod.Models.Business.VodDescribeVodDomainTrafficDataResult
	(*business.VodSubmitBlockTasksResult)(nil),                      // 217: Volcengine.Vod.Models.Business.VodSubmitBlockTasksResult
	(*business.VodGetContentBlockTasksResult)(nil),                  // 218: Volcengine.Vod.Models.Business.VodGetContentBlockTasksResult
	(*business.VodVerifyDomainOwnerResult)(nil),                     // 219: Volcengine.Vod.Models.Business.VodVerifyDomainOwnerResult
	(*business.VodDescribeDomainVerifyContentResult)(nil),           // 220: Volcengine.Vod.Models.Business.VodDescribeDomainVerifyContentResult
	(*business.VodPCDNDomainConfigInfo)(nil),                        // 221: Volcengine.Vod.Models.Business.VodPCDNDomainConfigInfo
	(*business.VodDescribeDomainConfigResult)(nil),                  // 222: Volcengine.Vod.Models.Business.VodDescribeDomainConfigResult
	(*business.CallbackRecords)(nil),                                // 223: Volcengine.Vod.Models.Business.CallbackRecords
	(*business.VodGetSmartStrategyLitePlayInfoResult)(nil),          // 224: Volcengine.Vod.Models.Business.VodGetSmartStrategyLitePlayInfoResult
	(*business.VodGetAppInfoResult)(nil),                            // 225: Volcengine.Vod.Models.Business.VodGetAppInfoResult
	(*business.DescribeVodSpaceTranscodeDataResult)(nil),            // 226: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	(*business.DescribeVodSpaceAIStatisDataResult)(nil),             // 227: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	(*business.DescribeVodSpaceSubtitleStatisDataResult)(nil),       // 228: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	(*business.DescribeVodSpaceDetectStatisDataResult)(nil),         // 229: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	(*business.DescribeVodSnapshotDataResult)(nil),                  // 230: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult
	(*business.DescribeVodSpaceWorkflowDetailDataResult)(nil),       // 231: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult
	(*business.DescribeVodSpaceEditDetailDataResult)(nil),           // 232: Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult
	(*business.DescribeVodRealtimeMediaDataResult)(nil),             // 233: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataResult
	(*business.DescribeVodRealtimeMediaDetailDataResult)(nil),       // 234: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataResult
	(*business.DescribeVodPlayFileLogByDomainResult)(nil),           // 235: Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult
	(*business.DescribeVodEnhanceImageDataResult)(nil),              // 236: Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataResult
	(*business.DescribeVodSpaceEditStatisDataResult)(nil),           // 237: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataResult
	(*business.DescribeVodPlayedStatisDataResult)(nil),              // 238: Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataResult
	(*business.DescribeVodMostPlayedStatisDataResult)(nil),          // 239: Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult
	(*business.DescribeVodVidTrafficFileLogResult)(nil),             // 240: Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogResult
	(*business.VodSubmitBlockMediaTaskResult)(nil),                  // 241: Volcengine.Vod.Models.Business.VodSubmitBlockMediaTaskResult
	(*business.VodSubmitUnblockMediaTaskResult)(nil),                // 242: Volcengine.Vod.Models.Business.VodSubmitUnblockMediaTaskResult
	(*business.VodQueryMediaBlockStatusResult)(nil),                 // 243: Volcengine.Vod.Models.Business.VodQueryMediaBlockStatusResult
	(*business.VodListProjectsResult)(nil),                          // 244: Volcengine.Vod.Models.Business.VodListProjectsResult
	(*business.TradeConfigurationInfoResult)(nil),                   // 245: Volcengine.Vod.Models.Business.TradeConfigurationInfoResult
	(*business.VodSetCloudMigrateJobResult)(nil),                    // 246: Volcengine.Vod.Models.Business.VodSetCloudMigrateJobResult
	(*business.VodGetCloudMigrateJobResult)(nil),                    // 247: Volcengine.Vod.Models.Business.VodGetCloudMigrateJobResult
	(*business.VodReportEventResult)(nil),                           // 248: Volcengine.Vod.Models.Business.VodReportEventResult
}
var file_volcengine_vod_response_response_vod_proto_depIdxs = []int32{
	147, // 0: Volcengine.Vod.Models.Response.VodGetAllPlayInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	148, // 1: Volcengine.Vod.Models.Response.VodGetAllPlayInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodAllPlayInfoResult
	147, // 2: Volcengine.Vod.Models.Response.VodGetPlayInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	149, // 3: Volcengine.Vod.Models.Response.VodGetPlayInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodPlayInfoModel
	147, // 4: Volcengine.Vod.Models.Response.VodGetOriginalPlayInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	150, // 5: Volcengine.Vod.Models.Response.VodGetOriginalPlayInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetOriginalPlayInfoResult
	147, // 6: Volcengine.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	151, // 7: Volcengine.Vod.Models.Response.VodGetPrivateDrmPlayAuthResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetPrivateDrmPlayAuthResult
	147, // 8: Volcengine.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	152, // 9: Volcengine.Vod.Models.Response.VodGetHlsDecryptionKeyResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetHlsDecryptionKeyResult
	147, // 10: Volcengine.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	153, // 11: Volcengine.Vod.Models.Response.VodCreateHlsDecryptionKeyResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCreateHlsDecryptionKeyResult
	147, // 12: Volcengine.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	154, // 13: Volcengine.Vod.Models.Response.VodGetPlayInfoWithLiveTimeShiftSceneResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetPlayInfoWithLiveTimeShiftSceneResult
	147, // 14: Volcengine.Vod.Models.Response.VodDescribeDrmDataKeyResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	155, // 15: Volcengine.Vod.Models.Response.VodDescribeDrmDataKeyResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeDrmDataKeyResult
	147, // 16: Volcengine.Vod.Models.Response.VodSubmitMoveObjectTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	156, // 17: Volcengine.Vod.Models.Response.VodSubmitMoveObjectTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSubmitMoveObjectTaskRespData
	147, // 18: Volcengine.Vod.Models.Response.VodQueryMoveObjectTaskInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	157, // 19: Volcengine.Vod.Models.Response.VodQueryMoveObjectTaskInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodQueryMoveObjectTaskInfoResData
	147, // 20: Volcengine.Vod.Models.Response.VodSubmitBlockObjectTasksResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	158, // 21: Volcengine.Vod.Models.Response.VodSubmitBlockObjectTasksResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSubmitBlockObjectTasksResult
	147, // 22: Volcengine.Vod.Models.Response.VodListBlockObjectTasksResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	159, // 23: Volcengine.Vod.Models.Response.VodListBlockObjectTasksResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListBlockObjectTasksResult
	147, // 24: Volcengine.Vod.Models.Response.VodUploadMediaResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	160, // 25: Volcengine.Vod.Models.Response.VodUploadMediaResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCommitData
	147, // 26: Volcengine.Vod.Models.Response.VodQueryUploadTaskInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	161, // 27: Volcengine.Vod.Models.Response.VodQueryUploadTaskInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodQueryData
	147, // 28: Volcengine.Vod.Models.Response.VodUrlUploadResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	162, // 29: Volcengine.Vod.Models.Response.VodUrlUploadResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodUrlResponseData
	147, // 30: Volcengine.Vod.Models.Response.VodApplyUploadInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	163, // 31: Volcengine.Vod.Models.Response.VodApplyUploadInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodApplyUploadInfoResult
	147, // 32: Volcengine.Vod.Models.Response.VodCommitUploadInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	164, // 33: Volcengine.Vod.Models.Response.VodCommitUploadInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCommitUploadInfoResult
	147, // 34: Volcengine.Vod.Models.Response.VodListFileMetaInfosByFileNamesResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	165, // 35: Volcengine.Vod.Models.Response.VodListFileMetaInfosByFileNamesResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListFileMetaInfosByFileNamesResult
	147, // 36: Volcengine.Vod.Models.Response.VodGetMediaInfosResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	166, // 37: Volcengine.Vod.Models.Response.VodGetMediaInfosResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetMediaInfosData
	147, // 38: Volcengine.Vod.Models.Response.VodUpdateMediaInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 39: Volcengine.Vod.Models.Response.VodGetRecommendedPosterResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	167, // 40: Volcengine.Vod.Models.Response.VodGetRecommendedPosterResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetRecPosterData
	147, // 41: Volcengine.Vod.Models.Response.VodUpdateMediaPublishStatusResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 42: Volcengine.Vod.Models.Response.VodUpdateMediaStorageClassResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	168, // 43: Volcengine.Vod.Models.Response.VodUpdateMediaStorageClassResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodUpdateMediaStorageClassData
	147, // 44: Volcengine.Vod.Models.Response.VodDeleteMediaResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	169, // 45: Volcengine.Vod.Models.Response.VodDeleteMediaResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDeleteMediaData
	147, // 46: Volcengine.Vod.Models.Response.VodDeleteMaterialResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 47: Volcengine.Vod.Models.Response.VodDeleteTranscodesResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	170, // 48: Volcengine.Vod.Models.Response.VodDeleteTranscodesResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDeleteTranscodesData
	147, // 49: Volcengine.Vod.Models.Response.VodDeleteMediaTosFileResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	171, // 50: Volcengine.Vod.Models.Response.VodDeleteMediaTosFileResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDeleteMediaTosFileData
	147, // 51: Volcengine.Vod.Models.Response.VodGetMediaListResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	172, // 52: Volcengine.Vod.Models.Response.VodGetMediaListResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetMediaListData
	147, // 53: Volcengine.Vod.Models.Response.VodGetSubtitleInfoListResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	173, // 54: Volcengine.Vod.Models.Response.VodGetSubtitleInfoListResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetSubtitleInfoListData
	147, // 55: Volcengine.Vod.Models.Response.VodUpdateSubtitleStatusResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	174, // 56: Volcengine.Vod.Models.Response.VodUpdateSubtitleStatusResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodUpdateSubtitleStatusData
	147, // 57: Volcengine.Vod.Models.Response.VodUpdateSubtitleInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 58: Volcengine.Vod.Models.Response.VodGetAuditFramesForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	175, // 59: Volcengine.Vod.Models.Response.VodGetAuditFramesForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetFramesForAuditResult
	147, // 60: Volcengine.Vod.Models.Response.VodGetMLFramesForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	175, // 61: Volcengine.Vod.Models.Response.VodGetMLFramesForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetFramesForAuditResult
	147, // 62: Volcengine.Vod.Models.Response.VodGetBetterFramesForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	176, // 63: Volcengine.Vod.Models.Response.VodGetBetterFramesForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetBetterFramesForAuditResult
	147, // 64: Volcengine.Vod.Models.Response.VodGetAudioInfoForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	177, // 65: Volcengine.Vod.Models.Response.VodGetAudioInfoForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetAudioInfoForAuditResult
	147, // 66: Volcengine.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	178, // 67: Volcengine.Vod.Models.Response.VodGetAutomaticSpeechRecognitionForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetAutomaticSpeechRecognitionForAuditResult
	147, // 68: Volcengine.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	179, // 69: Volcengine.Vod.Models.Response.VodGetAudioEventDetectionForAuditResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetAudioEventDetectionForAuditResult
	147, // 70: Volcengine.Vod.Models.Response.VodCreateVideoClassificationResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	180, // 71: Volcengine.Vod.Models.Response.VodCreateVideoClassificationResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCreateVideoClassificationData
	147, // 72: Volcengine.Vod.Models.Response.VodUpdateVideoClassificationResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 73: Volcengine.Vod.Models.Response.VodDeleteVideoClassificationResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 74: Volcengine.Vod.Models.Response.VodListVideoClassificationsResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	181, // 75: Volcengine.Vod.Models.Response.VodListVideoClassificationsResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodVideoClassificationsData
	147, // 76: Volcengine.Vod.Models.Response.VodListSnapshotsResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	182, // 77: Volcengine.Vod.Models.Response.VodListSnapshotsResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSnapshotData
	147, // 78: Volcengine.Vod.Models.Response.VodGetFileListResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	166, // 79: Volcengine.Vod.Models.Response.VodGetFileListResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetMediaInfosData
	147, // 80: Volcengine.Vod.Models.Response.VodGetFileInfosResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	183, // 81: Volcengine.Vod.Models.Response.VodGetFileInfosResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetFileInfosData
	147, // 82: Volcengine.Vod.Models.Response.VodUpdateFileStorageClassResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	184, // 83: Volcengine.Vod.Models.Response.VodUpdateFileStorageClassResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodUpdateFileStorageClassData
	147, // 84: Volcengine.Vod.Models.Response.VodGetInnerAuditURLsResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	185, // 85: Volcengine.Vod.Models.Response.VodGetInnerAuditURLsResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetInnerAuditURLsData
	147, // 86: Volcengine.Vod.Models.Response.VodGetAdAuditResultByVidResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	186, // 87: Volcengine.Vod.Models.Response.VodGetAdAuditResultByVidResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetAdAuditResultByVidData
	147, // 88: Volcengine.Vod.Models.Response.VodExtractMediaMetaTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 89: Volcengine.Vod.Models.Response.VodStartWorkflowResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	187, // 90: Volcengine.Vod.Models.Response.VodStartWorkflowResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodStartWorkflowResult
	147, // 91: Volcengine.Vod.Models.Response.VodRetrieveTranscodeResultResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	188, // 92: Volcengine.Vod.Models.Response.VodRetrieveTranscodeResultResponse.Result:type_name -> Volcengine.Vod.Models.Business.TranscodeResult
	147, // 93: Volcengine.Vod.Models.Response.VodListWorkflowExecutionResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	189, // 94: Volcengine.Vod.Models.Response.VodListWorkflowExecutionResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListWorkflowExecutionResult
	147, // 95: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	190, // 96: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionDetailResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetWorkflowExecutionDetailResult
	147, // 97: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	191, // 98: Volcengine.Vod.Models.Response.VodGetWorkflowExecutionStatusResponse.Result:type_name -> Volcengine.Vod.Models.Business.WorkflowExecution
	147, // 99: Volcengine.Vod.Models.Response.VodGetWorkflowResultResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	192, // 100: Volcengine.Vod.Models.Response.VodGetWorkflowResultResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodWorkflowResult
	147, // 101: Volcengine.Vod.Models.Response.VodCreateTaskTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	193, // 102: Volcengine.Vod.Models.Response.VodCreateTaskTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodTaskTemplateResult
	147, // 103: Volcengine.Vod.Models.Response.VodUpdateTaskTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	193, // 104: Volcengine.Vod.Models.Response.VodUpdateTaskTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodTaskTemplateResult
	147, // 105: Volcengine.Vod.Models.Response.VodDeleteTaskTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	193, // 106: Volcengine.Vod.Models.Response.VodDeleteTaskTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodTaskTemplateResult
	147, // 107: Volcengine.Vod.Models.Response.VodGetTaskTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	193, // 108: Volcengine.Vod.Models.Response.VodGetTaskTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodTaskTemplateResult
	147, // 109: Volcengine.Vod.Models.Response.VodListTaskTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	194, // 110: Volcengine.Vod.Models.Response.VodListTaskTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListTaskTemplateResult
	147, // 111: Volcengine.Vod.Models.Response.VodCreateWorkflowTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	195, // 112: Volcengine.Vod.Models.Response.VodCreateWorkflowTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodWorkflowTemplateResult
	147, // 113: Volcengine.Vod.Models.Response.VodUpdateWorkflowTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 114: Volcengine.Vod.Models.Response.VodDeleteWorkflowTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 115: Volcengine.Vod.Models.Response.VodGetWorkflowTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	195, // 116: Volcengine.Vod.Models.Response.VodGetWorkflowTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodWorkflowTemplateResult
	147, // 117: Volcengine.Vod.Models.Response.VodListWorkflowTemplateResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	196, // 118: Volcengine.Vod.Models.Response.VodListWorkflowTemplateResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListWorkflowTemplateResult
	147, // 119: Volcengine.Vod.Models.Response.VodCreateWatermarkResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	197, // 120: Volcengine.Vod.Models.Response.VodCreateWatermarkResponse.Result:type_name -> Volcengine.Vod.Models.Business.LogoTemplate
	147, // 121: Volcengine.Vod.Models.Response.VodUpdateWatermarkResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 122: Volcengine.Vod.Models.Response.VodDeleteWatermarkResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 123: Volcengine.Vod.Models.Response.VodGetWatermarkResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	197, // 124: Volcengine.Vod.Models.Response.VodGetWatermarkResponse.Result:type_name -> Volcengine.Vod.Models.Business.LogoTemplate
	147, // 125: Volcengine.Vod.Models.Response.VodListWatermarkResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	198, // 126: Volcengine.Vod.Models.Response.VodListWatermarkResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListWatermarkResponseResult
	147, // 127: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	199, // 128: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskAsyncResponse.Result:type_name -> Volcengine.Vod.Models.Business.SubmitDirectEditTaskAsyncResult
	147, // 129: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskSyncResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	200, // 130: Volcengine.Vod.Models.Response.VodSubmitDirectEditTaskSyncResponse.Result:type_name -> Volcengine.Vod.Models.Business.SubmitDirectEditTaskSyncResult
	147, // 131: Volcengine.Vod.Models.Response.VodGetDirectEditProgressResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	201, // 132: Volcengine.Vod.Models.Response.VodGetDirectEditProgressResponse.Result:type_name -> Volcengine.Vod.Models.Business.GetDirectEditProgress
	147, // 133: Volcengine.Vod.Models.Response.VodGetDirectEditResultResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	202, // 134: Volcengine.Vod.Models.Response.VodGetDirectEditResultResponse.Result:type_name -> Volcengine.Vod.Models.Business.GetDirectEditResult
	147, // 135: Volcengine.Vod.Models.Response.VodCancelDirectEditTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	203, // 136: Volcengine.Vod.Models.Response.VodCancelDirectEditTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.CancelDirectEditTask
	147, // 137: Volcengine.Vod.Models.Response.VodCreateSpaceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 138: Volcengine.Vod.Models.Response.VodDeleteSpaceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 139: Volcengine.Vod.Models.Response.VodListSpaceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	204, // 140: Volcengine.Vod.Models.Response.VodListSpaceResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSpaceInfo
	147, // 141: Volcengine.Vod.Models.Response.VodGetSpaceDetailResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	204, // 142: Volcengine.Vod.Models.Response.VodGetSpaceDetailResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSpaceInfo
	147, // 143: Volcengine.Vod.Models.Response.VodUpdateSpaceResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 144: Volcengine.Vod.Models.Response.VodUpdateSpaceUploadConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 145: Volcengine.Vod.Models.Response.VodDescribeUploadSpaceConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	205, // 146: Volcengine.Vod.Models.Response.VodDescribeUploadSpaceConfigResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodUploadSpaceConfig
	147, // 147: Volcengine.Vod.Models.Response.VodUpdateUploadSpaceConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 148: Volcengine.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	206, // 149: Volcengine.Vod.Models.Response.VodDescribeVodSpaceStorageDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult
	147, // 150: Volcengine.Vod.Models.Response.VodUpdateDomainPlayRuleResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 151: Volcengine.Vod.Models.Response.VodAddDomainToSchedulerResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 152: Volcengine.Vod.Models.Response.VodRemoveDomainFromSchedulerResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 153: Volcengine.Vod.Models.Response.VodDeleteDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 154: Volcengine.Vod.Models.Response.VodStartDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 155: Volcengine.Vod.Models.Response.VodStopDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 156: Volcengine.Vod.Models.Response.VodListDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	207, // 157: Volcengine.Vod.Models.Response.VodListDomainResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDomainConfigInfo
	147, // 158: Volcengine.Vod.Models.Response.VodCreateCdnRefreshTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	208, // 159: Volcengine.Vod.Models.Response.VodCreateCdnRefreshTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCreateCdnTaskResult
	147, // 160: Volcengine.Vod.Models.Response.VodCreateCdnPreloadTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	208, // 161: Volcengine.Vod.Models.Response.VodCreateCdnPreloadTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCreateCdnTaskResult
	147, // 162: Volcengine.Vod.Models.Response.VodListCdnTasksResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	209, // 163: Volcengine.Vod.Models.Response.VodListCdnTasksResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCdnTaskResult
	147, // 164: Volcengine.Vod.Models.Response.VodListCdnAccessLogResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	210, // 165: Volcengine.Vod.Models.Response.VodListCdnAccessLogResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListCdnAccessLogResult
	147, // 166: Volcengine.Vod.Models.Response.VodListCdnTopAccessUrlResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	211, // 167: Volcengine.Vod.Models.Response.VodListCdnTopAccessUrlResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListCdnTopAccessUrlResult
	147, // 168: Volcengine.Vod.Models.Response.VodListCdnTopAccessResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	212, // 169: Volcengine.Vod.Models.Response.VodListCdnTopAccessResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListCdnTopAccessResult
	147, // 170: Volcengine.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	213, // 171: Volcengine.Vod.Models.Response.VodDescribeVodDomainBandwidthDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeVodDomainBandwidthDataResult
	147, // 172: Volcengine.Vod.Models.Response.VodCdnStatisticsCommonResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	214, // 173: Volcengine.Vod.Models.Response.VodCdnStatisticsCommonResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCdnStatisticsCommonResult
	147, // 174: Volcengine.Vod.Models.Response.VodDescribeIPInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	215, // 175: Volcengine.Vod.Models.Response.VodDescribeIPInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodCdnIpInfo
	147, // 176: Volcengine.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	216, // 177: Volcengine.Vod.Models.Response.VodDescribeVodDomainTrafficDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeVodDomainTrafficDataResult
	147, // 178: Volcengine.Vod.Models.Response.VodSubmitBlockTasksResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	217, // 179: Volcengine.Vod.Models.Response.VodSubmitBlockTasksResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSubmitBlockTasksResult
	147, // 180: Volcengine.Vod.Models.Response.VodGetContentBlockTasksResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	218, // 181: Volcengine.Vod.Models.Response.VodGetContentBlockTasksResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetContentBlockTasksResult
	147, // 182: Volcengine.Vod.Models.Response.VodCreateDomainV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 183: Volcengine.Vod.Models.Response.VodCreateDomainV3Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 184: Volcengine.Vod.Models.Response.VodUpdateDomainExpireV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 185: Volcengine.Vod.Models.Response.VodUpdateDomainAuthConfigV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 186: Volcengine.Vod.Models.Response.VodUpdateDomainUrlAuthConfigV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 187: Volcengine.Vod.Models.Response.VodVerifyDomainOwnerResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	219, // 188: Volcengine.Vod.Models.Response.VodVerifyDomainOwnerResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodVerifyDomainOwnerResult
	147, // 189: Volcengine.Vod.Models.Response.VodDescribeDomainVerifyContentResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	220, // 190: Volcengine.Vod.Models.Response.VodDescribeDomainVerifyContentResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeDomainVerifyContentResult
	147, // 191: Volcengine.Vod.Models.Response.VodListPCDNDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	221, // 192: Volcengine.Vod.Models.Response.VodListPCDNDomainResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodPCDNDomainConfigInfo
	147, // 193: Volcengine.Vod.Models.Response.VodCreatePCDNDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 194: Volcengine.Vod.Models.Response.VodStartPCDNDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 195: Volcengine.Vod.Models.Response.VodStopPCDNDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 196: Volcengine.Vod.Models.Response.VodDeletePCDNDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 197: Volcengine.Vod.Models.Response.VodUpdateDomainConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 198: Volcengine.Vod.Models.Response.VodDescribeDomainConfigResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	222, // 199: Volcengine.Vod.Models.Response.VodDescribeDomainConfigResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodDescribeDomainConfigResult
	147, // 200: Volcengine.Vod.Models.Response.AddOrUpdateCertificateV2Response.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 201: Volcengine.Vod.Models.Response.UpdateDomainAreaResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 202: Volcengine.Vod.Models.Response.VodAddCallbackSubscriptionResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 203: Volcengine.Vod.Models.Response.VodSetCallbackEventResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 204: Volcengine.Vod.Models.Response.GetCallbackRecordResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	223, // 205: Volcengine.Vod.Models.Response.GetCallbackRecordResponse.Result:type_name -> Volcengine.Vod.Models.Business.CallbackRecords
	147, // 206: Volcengine.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	224, // 207: Volcengine.Vod.Models.Response.VodGetSmartStrategyLitePlayInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetSmartStrategyLitePlayInfoResult
	147, // 208: Volcengine.Vod.Models.Response.VodGetAppInfoResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	225, // 209: Volcengine.Vod.Models.Response.VodGetAppInfoResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetAppInfoResult
	147, // 210: Volcengine.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	226, // 211: Volcengine.Vod.Models.Response.DescribeVodSpaceTranscodeDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	147, // 212: Volcengine.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	227, // 213: Volcengine.Vod.Models.Response.DescribeVodSpaceAIStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	147, // 214: Volcengine.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	228, // 215: Volcengine.Vod.Models.Response.DescribeVodSpaceSubtitleStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	147, // 216: Volcengine.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	229, // 217: Volcengine.Vod.Models.Response.DescribeVodSpaceDetectStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	147, // 218: Volcengine.Vod.Models.Response.DescribeVodSnapshotDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	230, // 219: Volcengine.Vod.Models.Response.DescribeVodSnapshotDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult
	147, // 220: Volcengine.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	231, // 221: Volcengine.Vod.Models.Response.DescribeVodSpaceWorkflowDetailDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult
	147, // 222: Volcengine.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	232, // 223: Volcengine.Vod.Models.Response.DescribeVodSpaceEditDetailDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult
	147, // 224: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	233, // 225: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataResult
	147, // 226: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDetailDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	234, // 227: Volcengine.Vod.Models.Response.DescribeVodRealtimeMediaDetailDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataResult
	147, // 228: Volcengine.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	235, // 229: Volcengine.Vod.Models.Response.DescribeVodPlayFileLogByDomainResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult
	147, // 230: Volcengine.Vod.Models.Response.DescribeVodEnhanceImageDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	236, // 231: Volcengine.Vod.Models.Response.DescribeVodEnhanceImageDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataResult
	147, // 232: Volcengine.Vod.Models.Response.DescribeVodSpaceEditStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	237, // 233: Volcengine.Vod.Models.Response.DescribeVodSpaceEditStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataResult
	147, // 234: Volcengine.Vod.Models.Response.DescribeVodPlayedStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	238, // 235: Volcengine.Vod.Models.Response.DescribeVodPlayedStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataResult
	147, // 236: Volcengine.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	239, // 237: Volcengine.Vod.Models.Response.DescribeVodMostPlayedStatisDataResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult
	147, // 238: Volcengine.Vod.Models.Response.DescribeVodVidTrafficFileLogResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	240, // 239: Volcengine.Vod.Models.Response.DescribeVodVidTrafficFileLogResponse.Result:type_name -> Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogResult
	147, // 240: Volcengine.Vod.Models.Response.VodSubmitBlockMediaTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	241, // 241: Volcengine.Vod.Models.Response.VodSubmitBlockMediaTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSubmitBlockMediaTaskResult
	147, // 242: Volcengine.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	242, // 243: Volcengine.Vod.Models.Response.VodSubmitUnblockMediaTaskResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSubmitUnblockMediaTaskResult
	147, // 244: Volcengine.Vod.Models.Response.VodQueryMediaBlockStatusResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	243, // 245: Volcengine.Vod.Models.Response.VodQueryMediaBlockStatusResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodQueryMediaBlockStatusResult
	147, // 246: Volcengine.Vod.Models.Response.VodListProjectsResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	244, // 247: Volcengine.Vod.Models.Response.VodListProjectsResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodListProjectsResult
	147, // 248: Volcengine.Vod.Models.Response.VodGetTradeConfigurationResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	245, // 249: Volcengine.Vod.Models.Response.VodGetTradeConfigurationResponse.Result:type_name -> Volcengine.Vod.Models.Business.TradeConfigurationInfoResult
	147, // 250: Volcengine.Vod.Models.Response.VodSetCloudMigrateJobResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	246, // 251: Volcengine.Vod.Models.Response.VodSetCloudMigrateJobResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodSetCloudMigrateJobResult
	147, // 252: Volcengine.Vod.Models.Response.VodSubmitCloudMigrateJobResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	147, // 253: Volcengine.Vod.Models.Response.VodGetCloudMigrateJobResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	247, // 254: Volcengine.Vod.Models.Response.VodGetCloudMigrateJobResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodGetCloudMigrateJobResult
	147, // 255: Volcengine.Vod.Models.Response.VodReportEventResponse.ResponseMetadata:type_name -> Volcengine.Base.Models.Base.ResponseMetadata
	248, // 256: Volcengine.Vod.Models.Response.VodReportEventResponse.Result:type_name -> Volcengine.Vod.Models.Business.VodReportEventResult
	257, // [257:257] is the sub-list for method output_type
	257, // [257:257] is the sub-list for method input_type
	257, // [257:257] is the sub-list for extension type_name
	257, // [257:257] is the sub-list for extension extendee
	0,   // [0:257] is the sub-list for field type_name
}

func init() { file_volcengine_vod_response_response_vod_proto_init() }
func file_volcengine_vod_response_response_vod_proto_init() {
	if File_volcengine_vod_response_response_vod_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_volcengine_vod_response_response_vod_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAllPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetOriginalPlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPrivateDrmPlayAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetHlsDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateHlsDecryptionKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetPlayInfoWithLiveTimeShiftSceneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeDrmDataKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitMoveObjectTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryMoveObjectTaskInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockObjectTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListBlockObjectTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadTaskInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListFileMetaInfosByFileNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetRecommendedPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaPublishStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateMediaStorageClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMaterialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTranscodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteMediaTosFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMediaListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSubtitleInfoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSubtitleInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAuditFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetMLFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetBetterFramesForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioInfoForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAutomaticSpeechRecognitionForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAudioEventDetectionForAuditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteVideoClassificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListVideoClassificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSnapshotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetFileListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetFileInfosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateFileStorageClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetInnerAuditURLsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAdAuditResultByVidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodExtractMediaMetaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartWorkflowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodRetrieveTranscodeResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListWorkflowExecutionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowExecutionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowExecutionStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListTaskTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateWorkflowTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateWorkflowTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteWorkflowTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWorkflowTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListWorkflowTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateWatermarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateWatermarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteWatermarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetWatermarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListWatermarkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitDirectEditTaskAsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitDirectEditTaskSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetDirectEditProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetDirectEditResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCancelDirectEditTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSpaceDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateSpaceUploadConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeUploadSpaceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateUploadSpaceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodSpaceStorageDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainPlayRuleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodAddDomainToSchedulerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodRemoveDomainFromSchedulerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeleteDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStopDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnRefreshTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateCdnPreloadTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnAccessLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTopAccessUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListCdnTopAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodDomainBandwidthDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCdnStatisticsCommonResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeIPInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodDomainTrafficDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetContentBlockTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDomainV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDomainV3Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainExpireV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainAuthConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainUrlAuthConfigV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodVerifyDomainOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeDomainVerifyContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListPCDNDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreatePCDNDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStartPCDNDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStopPCDNDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDeletePCDNDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUpdateDomainConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeDomainConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrUpdateCertificateV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDomainAreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodAddCallbackSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetCallbackEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallbackRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetSmartStrategyLitePlayInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetAppInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowDetailDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditDetailDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDetailDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayFileLogByDomainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodEnhanceImageDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayedStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodMostPlayedStatisDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodVidTrafficFileLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockMediaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitUnblockMediaTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryMediaBlockStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetTradeConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSetCloudMigrateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitCloudMigrateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodGetCloudMigrateJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_response_response_vod_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodReportEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_volcengine_vod_response_response_vod_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   147,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volcengine_vod_response_response_vod_proto_goTypes,
		DependencyIndexes: file_volcengine_vod_response_response_vod_proto_depIdxs,
		MessageInfos:      file_volcengine_vod_response_response_vod_proto_msgTypes,
	}.Build()
	File_volcengine_vod_response_response_vod_proto = out.File
	file_volcengine_vod_response_response_vod_proto_rawDesc = nil
	file_volcengine_vod_response_response_vod_proto_goTypes = nil
	file_volcengine_vod_response_response_vod_proto_depIdxs = nil
}
