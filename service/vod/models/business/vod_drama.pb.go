// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.19.4
// source: volcengine/vod/business/vod_drama.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodCreateDramaRecapTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId            string `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
	DramaScriptTaskId string `protobuf:"bytes,2,opt,name=DramaScriptTaskId,proto3" json:"DramaScriptTaskId,omitempty"`
}

func (x *VodCreateDramaRecapTaskResult) Reset() {
	*x = VodCreateDramaRecapTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDramaRecapTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDramaRecapTaskResult) ProtoMessage() {}

func (x *VodCreateDramaRecapTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDramaRecapTaskResult.ProtoReflect.Descriptor instead.
func (*VodCreateDramaRecapTaskResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{0}
}

func (x *VodCreateDramaRecapTaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *VodCreateDramaRecapTaskResult) GetDramaScriptTaskId() string {
	if x != nil {
		return x.DramaScriptTaskId
	}
	return ""
}

type VodCreateDramaScriptTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=TaskId,proto3" json:"TaskId,omitempty"`
}

func (x *VodCreateDramaScriptTaskResult) Reset() {
	*x = VodCreateDramaScriptTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDramaScriptTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDramaScriptTaskResult) ProtoMessage() {}

func (x *VodCreateDramaScriptTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDramaScriptTaskResult.ProtoReflect.Descriptor instead.
func (*VodCreateDramaScriptTaskResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{1}
}

func (x *VodCreateDramaScriptTaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type VodQueryDramaRecapTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid    string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *VodQueryDramaRecapTaskResult) Reset() {
	*x = VodQueryDramaRecapTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryDramaRecapTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryDramaRecapTaskResult) ProtoMessage() {}

func (x *VodQueryDramaRecapTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryDramaRecapTaskResult.ProtoReflect.Descriptor instead.
func (*VodQueryDramaRecapTaskResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{2}
}

func (x *VodQueryDramaRecapTaskResult) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodQueryDramaRecapTaskResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodQueryDramaScriptTaskResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResultUrl string `protobuf:"bytes,1,opt,name=ResultUrl,proto3" json:"ResultUrl,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *VodQueryDramaScriptTaskResult) Reset() {
	*x = VodQueryDramaScriptTaskResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryDramaScriptTaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryDramaScriptTaskResult) ProtoMessage() {}

func (x *VodQueryDramaScriptTaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryDramaScriptTaskResult.ProtoReflect.Descriptor instead.
func (*VodQueryDramaScriptTaskResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{3}
}

func (x *VodQueryDramaScriptTaskResult) GetResultUrl() string {
	if x != nil {
		return x.ResultUrl
	}
	return ""
}

func (x *VodQueryDramaScriptTaskResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type VodCreateDramaRecapTaskSpeakerConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoiceType string  `protobuf:"bytes,1,opt,name=VoiceType,proto3" json:"VoiceType,omitempty"`
	AppId     string  `protobuf:"bytes,2,opt,name=AppId,proto3" json:"AppId,omitempty"`
	Cluster   *string `protobuf:"bytes,3,opt,name=Cluster,proto3,oneof" json:"Cluster,omitempty"`
}

func (x *VodCreateDramaRecapTaskSpeakerConfig) Reset() {
	*x = VodCreateDramaRecapTaskSpeakerConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDramaRecapTaskSpeakerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDramaRecapTaskSpeakerConfig) ProtoMessage() {}

func (x *VodCreateDramaRecapTaskSpeakerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDramaRecapTaskSpeakerConfig.ProtoReflect.Descriptor instead.
func (*VodCreateDramaRecapTaskSpeakerConfig) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{4}
}

func (x *VodCreateDramaRecapTaskSpeakerConfig) GetVoiceType() string {
	if x != nil {
		return x.VoiceType
	}
	return ""
}

func (x *VodCreateDramaRecapTaskSpeakerConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *VodCreateDramaRecapTaskSpeakerConfig) GetCluster() string {
	if x != nil && x.Cluster != nil {
		return *x.Cluster
	}
	return ""
}

type VodCreateDramaRecapTaskFontconfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoSubtitle           bool     `protobuf:"varint,1,opt,name=NoSubtitle,proto3" json:"NoSubtitle,omitempty"`
	FontType             *string  `protobuf:"bytes,2,opt,name=FontType,proto3,oneof" json:"FontType,omitempty"`
	FontSize             *int32   `protobuf:"varint,3,opt,name=FontSize,proto3,oneof" json:"FontSize,omitempty"`
	Width                *int32   `protobuf:"varint,4,opt,name=Width,proto3,oneof" json:"Width,omitempty"`
	Height               *int32   `protobuf:"varint,5,opt,name=Height,proto3,oneof" json:"Height,omitempty"`
	Alpha                *float64 `protobuf:"fixed64,6,opt,name=Alpha,proto3,oneof" json:"Alpha,omitempty"`
	TextRes              *string  `protobuf:"bytes,7,opt,name=TextRes,proto3,oneof" json:"TextRes,omitempty"`
	FontColor            *string  `protobuf:"bytes,8,opt,name=FontColor,proto3,oneof" json:"FontColor,omitempty"`
	BackgroundColor      *string  `protobuf:"bytes,9,opt,name=BackgroundColor,proto3,oneof" json:"BackgroundColor,omitempty"`
	BackgroundBorderSize *float64 `protobuf:"fixed64,10,opt,name=BackgroundBorderSize,proto3,oneof" json:"BackgroundBorderSize,omitempty"`
	BorderColor          *string  `protobuf:"bytes,11,opt,name=BorderColor,proto3,oneof" json:"BorderColor,omitempty"`
	BorderWidth          *int32   `protobuf:"varint,12,opt,name=BorderWidth,proto3,oneof" json:"BorderWidth,omitempty"`
	Typesetting          *int32   `protobuf:"varint,13,opt,name=Typesetting,proto3,oneof" json:"Typesetting,omitempty"`
	AlignType            *int32   `protobuf:"varint,14,opt,name=AlignType,proto3,oneof" json:"AlignType,omitempty"`
	PosX                 *int32   `protobuf:"varint,15,opt,name=PosX,proto3,oneof" json:"PosX,omitempty"`
	PosY                 *int32   `protobuf:"varint,16,opt,name=PosY,proto3,oneof" json:"PosY,omitempty"`
	LineMaxWidth         *float64 `protobuf:"fixed64,17,opt,name=LineMaxWidth,proto3,oneof" json:"LineMaxWidth,omitempty"`
}

func (x *VodCreateDramaRecapTaskFontconfig) Reset() {
	*x = VodCreateDramaRecapTaskFontconfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCreateDramaRecapTaskFontconfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCreateDramaRecapTaskFontconfig) ProtoMessage() {}

func (x *VodCreateDramaRecapTaskFontconfig) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_drama_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCreateDramaRecapTaskFontconfig.ProtoReflect.Descriptor instead.
func (*VodCreateDramaRecapTaskFontconfig) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_drama_proto_rawDescGZIP(), []int{5}
}

func (x *VodCreateDramaRecapTaskFontconfig) GetNoSubtitle() bool {
	if x != nil {
		return x.NoSubtitle
	}
	return false
}

func (x *VodCreateDramaRecapTaskFontconfig) GetFontType() string {
	if x != nil && x.FontType != nil {
		return *x.FontType
	}
	return ""
}

func (x *VodCreateDramaRecapTaskFontconfig) GetFontSize() int32 {
	if x != nil && x.FontSize != nil {
		return *x.FontSize
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetAlpha() float64 {
	if x != nil && x.Alpha != nil {
		return *x.Alpha
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetTextRes() string {
	if x != nil && x.TextRes != nil {
		return *x.TextRes
	}
	return ""
}

func (x *VodCreateDramaRecapTaskFontconfig) GetFontColor() string {
	if x != nil && x.FontColor != nil {
		return *x.FontColor
	}
	return ""
}

func (x *VodCreateDramaRecapTaskFontconfig) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *VodCreateDramaRecapTaskFontconfig) GetBackgroundBorderSize() float64 {
	if x != nil && x.BackgroundBorderSize != nil {
		return *x.BackgroundBorderSize
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetBorderColor() string {
	if x != nil && x.BorderColor != nil {
		return *x.BorderColor
	}
	return ""
}

func (x *VodCreateDramaRecapTaskFontconfig) GetBorderWidth() int32 {
	if x != nil && x.BorderWidth != nil {
		return *x.BorderWidth
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetTypesetting() int32 {
	if x != nil && x.Typesetting != nil {
		return *x.Typesetting
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetAlignType() int32 {
	if x != nil && x.AlignType != nil {
		return *x.AlignType
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetPosX() int32 {
	if x != nil && x.PosX != nil {
		return *x.PosX
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetPosY() int32 {
	if x != nil && x.PosY != nil {
		return *x.PosY
	}
	return 0
}

func (x *VodCreateDramaRecapTaskFontconfig) GetLineMaxWidth() float64 {
	if x != nil && x.LineMaxWidth != nil {
		return *x.LineMaxWidth
	}
	return 0
}

var File_volcengine_vod_business_vod_drama_proto protoreflect.FileDescriptor

var file_volcengine_vod_business_vod_drama_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x64, 0x72,
	0x61, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x65, 0x0a, 0x1d, 0x56, 0x6f, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x61, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44,
	0x72, 0x61, 0x6d, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x1e, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61,
	0x6d, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1c, 0x56, 0x6f,
	0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x61, 0x70,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x44, 0x72, 0x61, 0x6d, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x24,
	0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x52, 0x65,
	0x63, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x22, 0xd6, 0x06, 0x0a, 0x21, 0x56, 0x6f, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x52, 0x65, 0x63, 0x61, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x46,
	0x6f, 0x6e, 0x74, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x6f, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4e,
	0x6f, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x46, 0x6f, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x46,
	0x6f, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x46, 0x6f,
	0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08,
	0x46, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x05, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x04, 0x52, 0x05, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1d,
	0x0a, 0x07, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x07, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x06, 0x52, 0x09, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x2d, 0x0a, 0x0f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0f, 0x42, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x37, 0x0a, 0x14, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x08, 0x52,
	0x14, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x42, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52,
	0x0b, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x0b, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x0a, 0x52, 0x0b, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0b, 0x52, 0x0b, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x0c, 0x52, 0x09, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x58, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0d,
	0x52, 0x04, 0x50, 0x6f, 0x73, 0x58, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x50, 0x6f, 0x73,
	0x59, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x48, 0x0e, 0x52, 0x04, 0x50, 0x6f, 0x73, 0x59, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x78, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x48, 0x0f, 0x52, 0x0c, 0x4c, 0x69, 0x6e, 0x65,
	0x4d, 0x61, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x46, 0x6f, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x46, 0x6f, 0x6e,
	0x74, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x57, 0x69, 0x64, 0x74, 0x68, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x41,
	0x6c, 0x70, 0x68, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x46, 0x6f, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x42, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x41, 0x6c, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x6f,
	0x73, 0x58, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x50, 0x6f, 0x73, 0x59, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x4c, 0x69, 0x6e, 0x65, 0x4d, 0x61, 0x78, 0x57, 0x69, 0x64, 0x74, 0x68, 0x42, 0xcc, 0x01, 0x0a,
	0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x08, 0x56, 0x6f, 0x64, 0x44,
	0x72, 0x61, 0x6d, 0x61, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f,
	0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2,
	0x02, 0x00, 0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_volcengine_vod_business_vod_drama_proto_rawDescOnce sync.Once
	file_volcengine_vod_business_vod_drama_proto_rawDescData = file_volcengine_vod_business_vod_drama_proto_rawDesc
)

func file_volcengine_vod_business_vod_drama_proto_rawDescGZIP() []byte {
	file_volcengine_vod_business_vod_drama_proto_rawDescOnce.Do(func() {
		file_volcengine_vod_business_vod_drama_proto_rawDescData = protoimpl.X.CompressGZIP(file_volcengine_vod_business_vod_drama_proto_rawDescData)
	})
	return file_volcengine_vod_business_vod_drama_proto_rawDescData
}

var file_volcengine_vod_business_vod_drama_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_volcengine_vod_business_vod_drama_proto_goTypes = []interface{}{
	(*VodCreateDramaRecapTaskResult)(nil),        // 0: Volcengine.Vod.Models.Business.VodCreateDramaRecapTaskResult
	(*VodCreateDramaScriptTaskResult)(nil),       // 1: Volcengine.Vod.Models.Business.VodCreateDramaScriptTaskResult
	(*VodQueryDramaRecapTaskResult)(nil),         // 2: Volcengine.Vod.Models.Business.VodQueryDramaRecapTaskResult
	(*VodQueryDramaScriptTaskResult)(nil),        // 3: Volcengine.Vod.Models.Business.VodQueryDramaScriptTaskResult
	(*VodCreateDramaRecapTaskSpeakerConfig)(nil), // 4: Volcengine.Vod.Models.Business.VodCreateDramaRecapTaskSpeakerConfig
	(*VodCreateDramaRecapTaskFontconfig)(nil),    // 5: Volcengine.Vod.Models.Business.VodCreateDramaRecapTaskFontconfig
}
var file_volcengine_vod_business_vod_drama_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_volcengine_vod_business_vod_drama_proto_init() }
func file_volcengine_vod_business_vod_drama_proto_init() {
	if File_volcengine_vod_business_vod_drama_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_volcengine_vod_business_vod_drama_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDramaRecapTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_drama_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDramaScriptTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_drama_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryDramaRecapTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_drama_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryDramaScriptTaskResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_drama_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDramaRecapTaskSpeakerConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_drama_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCreateDramaRecapTaskFontconfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_volcengine_vod_business_vod_drama_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_volcengine_vod_business_vod_drama_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_volcengine_vod_business_vod_drama_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volcengine_vod_business_vod_drama_proto_goTypes,
		DependencyIndexes: file_volcengine_vod_business_vod_drama_proto_depIdxs,
		MessageInfos:      file_volcengine_vod_business_vod_drama_proto_msgTypes,
	}.Build()
	File_volcengine_vod_business_vod_drama_proto = out.File
	file_volcengine_vod_business_vod_drama_proto_rawDesc = nil
	file_volcengine_vod_business_vod_drama_proto_goTypes = nil
	file_volcengine_vod_business_vod_drama_proto_depIdxs = nil
}
