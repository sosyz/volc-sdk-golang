// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: volcengine/vod/business/vod_space.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodSpaceUploadConfigKey int32

const (
	VodSpaceUploadConfigKey_UndefinedVodSpaceUploadConfigKey              VodSpaceUploadConfigKey = 0 // 未定义的key
	VodSpaceUploadConfigKey_CustomUploadFilePathVodSpaceUploadConfigKey   VodSpaceUploadConfigKey = 1 // 自定义文件路径key
	VodSpaceUploadConfigKey_AutoPublishAfterUploadVodSpaceUploadConfigKey VodSpaceUploadConfigKey = 2 // 上传完成后自动发布key
)

// Enum value maps for VodSpaceUploadConfigKey.
var (
	VodSpaceUploadConfigKey_name = map[int32]string{
		0: "UndefinedVodSpaceUploadConfigKey",
		1: "CustomUploadFilePathVodSpaceUploadConfigKey",
		2: "AutoPublishAfterUploadVodSpaceUploadConfigKey",
	}
	VodSpaceUploadConfigKey_value = map[string]int32{
		"UndefinedVodSpaceUploadConfigKey":              0,
		"CustomUploadFilePathVodSpaceUploadConfigKey":   1,
		"AutoPublishAfterUploadVodSpaceUploadConfigKey": 2,
	}
)

func (x VodSpaceUploadConfigKey) Enum() *VodSpaceUploadConfigKey {
	p := new(VodSpaceUploadConfigKey)
	*p = x
	return p
}

func (x VodSpaceUploadConfigKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VodSpaceUploadConfigKey) Descriptor() protoreflect.EnumDescriptor {
	return file_volcengine_vod_business_vod_space_proto_enumTypes[0].Descriptor()
}

func (VodSpaceUploadConfigKey) Type() protoreflect.EnumType {
	return &file_volcengine_vod_business_vod_space_proto_enumTypes[0]
}

func (x VodSpaceUploadConfigKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VodSpaceUploadConfigKey.Descriptor instead.
func (VodSpaceUploadConfigKey) EnumDescriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{0}
}

type VodSpaceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName      string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`            // 空间名
	Region         string `protobuf:"bytes,3,opt,name=Region,proto3" json:"Region,omitempty"`                  // 所属区域
	ProjectName    string `protobuf:"bytes,4,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"`        // IAM项目名称
	BucketName     string `protobuf:"bytes,5,opt,name=BucketName,proto3" json:"BucketName,omitempty"`          // 绑定的TOS Bucket名称
	BucketStatus   string `protobuf:"bytes,6,opt,name=BucketStatus,proto3" json:"BucketStatus,omitempty"`      // 绑定的TosBucket状态
	Description    string `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`        // 描述
	UserName       string `protobuf:"bytes,8,opt,name=UserName,proto3" json:"UserName,omitempty"`              // 创建人
	CreatedAt      string `protobuf:"bytes,9,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`            // 创建时间
	Type           string `protobuf:"bytes,10,opt,name=Type,proto3" json:"Type,omitempty"`                     // 类型
	MediaSyncLevel string `protobuf:"bytes,11,opt,name=MediaSyncLevel,proto3" json:"MediaSyncLevel,omitempty"` // 媒资同步类型
	CanUseArchive  bool   `protobuf:"varint,12,opt,name=CanUseArchive,proto3" json:"CanUseArchive,omitempty"`  //是否可使用归档存储
}

func (x *VodSpaceInfo) Reset() {
	*x = VodSpaceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSpaceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSpaceInfo) ProtoMessage() {}

func (x *VodSpaceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSpaceInfo.ProtoReflect.Descriptor instead.
func (*VodSpaceInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{0}
}

func (x *VodSpaceInfo) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodSpaceInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *VodSpaceInfo) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *VodSpaceInfo) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *VodSpaceInfo) GetBucketStatus() string {
	if x != nil {
		return x.BucketStatus
	}
	return ""
}

func (x *VodSpaceInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VodSpaceInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VodSpaceInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VodSpaceInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VodSpaceInfo) GetMediaSyncLevel() string {
	if x != nil {
		return x.MediaSyncLevel
	}
	return ""
}

func (x *VodSpaceInfo) GetCanUseArchive() bool {
	if x != nil {
		return x.CanUseArchive
	}
	return false
}

type VodStorageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time    string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Storage int64  `protobuf:"varint,2,opt,name=Storage,proto3" json:"Storage,omitempty"`
}

func (x *VodStorageData) Reset() {
	*x = VodStorageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStorageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStorageData) ProtoMessage() {}

func (x *VodStorageData) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStorageData.ProtoReflect.Descriptor instead.
func (*VodStorageData) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{1}
}

func (x *VodStorageData) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *VodStorageData) GetStorage() int64 {
	if x != nil {
		return x.Storage
	}
	return 0
}

type VodDescribeVodSpaceStorageDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList         []string          `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`                  // Space Name list
	StartTime         string            `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`                  // start time of query
	EndTime           string            `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                      // End time of query
	Aggregation       int32             `protobuf:"varint,4,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`             // Time granularity of aggregation
	Type              string            `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`                            // hot, lowfreq, punish
	RegionList        []string          `protobuf:"bytes,6,rep,name=RegionList,proto3" json:"RegionList,omitempty"`                // region list
	LatestStorageData int64             `protobuf:"varint,7,opt,name=LatestStorageData,proto3" json:"LatestStorageData,omitempty"` // Byte of latest storage
	StorageDataList   []*VodStorageData `protobuf:"bytes,8,rep,name=StorageDataList,proto3" json:"StorageDataList,omitempty"`      // list of Storage Data
}

func (x *VodDescribeVodSpaceStorageDataResult) Reset() {
	*x = VodDescribeVodSpaceStorageDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodDescribeVodSpaceStorageDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodDescribeVodSpaceStorageDataResult) ProtoMessage() {}

func (x *VodDescribeVodSpaceStorageDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodDescribeVodSpaceStorageDataResult.ProtoReflect.Descriptor instead.
func (*VodDescribeVodSpaceStorageDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{2}
}

func (x *VodDescribeVodSpaceStorageDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *VodDescribeVodSpaceStorageDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *VodDescribeVodSpaceStorageDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *VodDescribeVodSpaceStorageDataResult) GetAggregation() int32 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *VodDescribeVodSpaceStorageDataResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VodDescribeVodSpaceStorageDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *VodDescribeVodSpaceStorageDataResult) GetLatestStorageData() int64 {
	if x != nil {
		return x.LatestStorageData
	}
	return 0
}

func (x *VodDescribeVodSpaceStorageDataResult) GetStorageDataList() []*VodStorageData {
	if x != nil {
		return x.StorageDataList
	}
	return nil
}

type VodUploadSpaceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoPoster              string              `protobuf:"bytes,1,opt,name=AutoPoster,proto3" json:"AutoPoster,omitempty"`
	CustomPosterConfig      *CustomPosterConfig `protobuf:"bytes,2,opt,name=CustomPosterConfig,proto3" json:"CustomPosterConfig,omitempty"`
	GetPosterMode           string              `protobuf:"bytes,3,opt,name=GetPosterMode,proto3" json:"GetPosterMode,omitempty"`
	AutoPosterCandidate     string              `protobuf:"bytes,4,opt,name=AutoPosterCandidate,proto3" json:"AutoPosterCandidate,omitempty"`
	AutoTranscode           string              `protobuf:"bytes,5,opt,name=AutoTranscode,proto3" json:"AutoTranscode,omitempty"`
	TranscodeConfig         *TranscodeConfig    `protobuf:"bytes,6,opt,name=TranscodeConfig,proto3" json:"TranscodeConfig,omitempty"`
	AutoSetVideoStatus      string              `protobuf:"bytes,7,opt,name=AutoSetVideoStatus,proto3" json:"AutoSetVideoStatus,omitempty"`
	UploadOverwrite         string              `protobuf:"bytes,8,opt,name=UploadOverwrite,proto3" json:"UploadOverwrite,omitempty"`
	CallbackReturnPlayUrl   string              `protobuf:"bytes,9,opt,name=CallbackReturnPlayUrl,proto3" json:"CallbackReturnPlayUrl,omitempty"`
	CallbackReturnRunId     string              `protobuf:"bytes,10,opt,name=CallbackReturnRunId,proto3" json:"CallbackReturnRunId,omitempty"`
	GetMetaMode             string              `protobuf:"bytes,11,opt,name=GetMetaMode,proto3" json:"GetMetaMode,omitempty"`
	AutoGetArchiveVideoMeta string              `protobuf:"bytes,12,opt,name=AutoGetArchiveVideoMeta,proto3" json:"AutoGetArchiveVideoMeta,omitempty"`
	AutoGetIAVideoMeta      string              `protobuf:"bytes,13,opt,name=AutoGetIAVideoMeta,proto3" json:"AutoGetIAVideoMeta,omitempty"`
	MetaGetMd5              string              `protobuf:"bytes,14,opt,name=MetaGetMd5,proto3" json:"MetaGetMd5,omitempty"`
}

func (x *VodUploadSpaceConfig) Reset() {
	*x = VodUploadSpaceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadSpaceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadSpaceConfig) ProtoMessage() {}

func (x *VodUploadSpaceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadSpaceConfig.ProtoReflect.Descriptor instead.
func (*VodUploadSpaceConfig) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{3}
}

func (x *VodUploadSpaceConfig) GetAutoPoster() string {
	if x != nil {
		return x.AutoPoster
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetCustomPosterConfig() *CustomPosterConfig {
	if x != nil {
		return x.CustomPosterConfig
	}
	return nil
}

func (x *VodUploadSpaceConfig) GetGetPosterMode() string {
	if x != nil {
		return x.GetPosterMode
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetAutoPosterCandidate() string {
	if x != nil {
		return x.AutoPosterCandidate
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetAutoTranscode() string {
	if x != nil {
		return x.AutoTranscode
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetTranscodeConfig() *TranscodeConfig {
	if x != nil {
		return x.TranscodeConfig
	}
	return nil
}

func (x *VodUploadSpaceConfig) GetAutoSetVideoStatus() string {
	if x != nil {
		return x.AutoSetVideoStatus
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetUploadOverwrite() string {
	if x != nil {
		return x.UploadOverwrite
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetCallbackReturnPlayUrl() string {
	if x != nil {
		return x.CallbackReturnPlayUrl
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetCallbackReturnRunId() string {
	if x != nil {
		return x.CallbackReturnRunId
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetGetMetaMode() string {
	if x != nil {
		return x.GetMetaMode
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetAutoGetArchiveVideoMeta() string {
	if x != nil {
		return x.AutoGetArchiveVideoMeta
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetAutoGetIAVideoMeta() string {
	if x != nil {
		return x.AutoGetIAVideoMeta
	}
	return ""
}

func (x *VodUploadSpaceConfig) GetMetaGetMd5() string {
	if x != nil {
		return x.MetaGetMd5
	}
	return ""
}

type CustomPosterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomTemplateStatus string `protobuf:"bytes,1,opt,name=CustomTemplateStatus,proto3" json:"CustomTemplateStatus,omitempty"`
	PathTemplate         string `protobuf:"bytes,2,opt,name=PathTemplate,proto3" json:"PathTemplate,omitempty"`
}

func (x *CustomPosterConfig) Reset() {
	*x = CustomPosterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomPosterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomPosterConfig) ProtoMessage() {}

func (x *CustomPosterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomPosterConfig.ProtoReflect.Descriptor instead.
func (*CustomPosterConfig) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{4}
}

func (x *CustomPosterConfig) GetCustomTemplateStatus() string {
	if x != nil {
		return x.CustomTemplateStatus
	}
	return ""
}

func (x *CustomPosterConfig) GetPathTemplate() string {
	if x != nil {
		return x.PathTemplate
	}
	return ""
}

type TranscodeConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultTemplateStatus string `protobuf:"bytes,1,opt,name=DefaultTemplateStatus,proto3" json:"DefaultTemplateStatus,omitempty"`
	DefaultTemplateId     string `protobuf:"bytes,2,opt,name=DefaultTemplateId,proto3" json:"DefaultTemplateId,omitempty"`
}

func (x *TranscodeConfig) Reset() {
	*x = TranscodeConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscodeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscodeConfig) ProtoMessage() {}

func (x *TranscodeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_space_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscodeConfig.ProtoReflect.Descriptor instead.
func (*TranscodeConfig) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_space_proto_rawDescGZIP(), []int{5}
}

func (x *TranscodeConfig) GetDefaultTemplateStatus() string {
	if x != nil {
		return x.DefaultTemplateStatus
	}
	return ""
}

func (x *TranscodeConfig) GetDefaultTemplateId() string {
	if x != nil {
		return x.DefaultTemplateId
	}
	return ""
}

var File_volcengine_vod_business_vod_space_proto protoreflect.FileDescriptor

var file_volcengine_vod_business_vod_space_proto_rawDesc = []byte{
	0x0a, 0x27, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0xe8, 0x02, 0x0a, 0x0c, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x43, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x22, 0xda, 0x02, 0x0a, 0x24, 0x56, 0x6f, 0x64, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x58, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xe1, 0x05, 0x0a, 0x14, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x75,
	0x74, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x12, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x6f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41,
	0x75, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x59, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x77, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x34, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x52, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x41,
	0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x41, 0x75,
	0x74, 0x6f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74,
	0x49, 0x41, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x49, 0x41, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x47, 0x65, 0x74,
	0x4d, 0x64, 0x35, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x47,
	0x65, 0x74, 0x4d, 0x64, 0x35, 0x22, 0x6c, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x32, 0x0a, 0x14, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x74, 0x68, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x22, 0x75, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x2a, 0xa3, 0x01, 0x0a, 0x17, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x20, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x64, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x10, 0x01, 0x12, 0x31, 0x0a,
	0x2d, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x10, 0x02,
	0x42, 0xcc, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x08,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e,
	0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01,
	0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63,
	0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_volcengine_vod_business_vod_space_proto_rawDescOnce sync.Once
	file_volcengine_vod_business_vod_space_proto_rawDescData = file_volcengine_vod_business_vod_space_proto_rawDesc
)

func file_volcengine_vod_business_vod_space_proto_rawDescGZIP() []byte {
	file_volcengine_vod_business_vod_space_proto_rawDescOnce.Do(func() {
		file_volcengine_vod_business_vod_space_proto_rawDescData = protoimpl.X.CompressGZIP(file_volcengine_vod_business_vod_space_proto_rawDescData)
	})
	return file_volcengine_vod_business_vod_space_proto_rawDescData
}

var file_volcengine_vod_business_vod_space_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_volcengine_vod_business_vod_space_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_volcengine_vod_business_vod_space_proto_goTypes = []interface{}{
	(VodSpaceUploadConfigKey)(0),                 // 0: Volcengine.Vod.Models.Business.VodSpaceUploadConfigKey
	(*VodSpaceInfo)(nil),                         // 1: Volcengine.Vod.Models.Business.VodSpaceInfo
	(*VodStorageData)(nil),                       // 2: Volcengine.Vod.Models.Business.VodStorageData
	(*VodDescribeVodSpaceStorageDataResult)(nil), // 3: Volcengine.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult
	(*VodUploadSpaceConfig)(nil),                 // 4: Volcengine.Vod.Models.Business.VodUploadSpaceConfig
	(*CustomPosterConfig)(nil),                   // 5: Volcengine.Vod.Models.Business.CustomPosterConfig
	(*TranscodeConfig)(nil),                      // 6: Volcengine.Vod.Models.Business.TranscodeConfig
}
var file_volcengine_vod_business_vod_space_proto_depIdxs = []int32{
	2, // 0: Volcengine.Vod.Models.Business.VodDescribeVodSpaceStorageDataResult.StorageDataList:type_name -> Volcengine.Vod.Models.Business.VodStorageData
	5, // 1: Volcengine.Vod.Models.Business.VodUploadSpaceConfig.CustomPosterConfig:type_name -> Volcengine.Vod.Models.Business.CustomPosterConfig
	6, // 2: Volcengine.Vod.Models.Business.VodUploadSpaceConfig.TranscodeConfig:type_name -> Volcengine.Vod.Models.Business.TranscodeConfig
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_volcengine_vod_business_vod_space_proto_init() }
func file_volcengine_vod_business_vod_space_proto_init() {
	if File_volcengine_vod_business_vod_space_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_volcengine_vod_business_vod_space_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSpaceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_space_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStorageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_space_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodDescribeVodSpaceStorageDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_space_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadSpaceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_space_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomPosterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_space_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscodeConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_volcengine_vod_business_vod_space_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volcengine_vod_business_vod_space_proto_goTypes,
		DependencyIndexes: file_volcengine_vod_business_vod_space_proto_depIdxs,
		EnumInfos:         file_volcengine_vod_business_vod_space_proto_enumTypes,
		MessageInfos:      file_volcengine_vod_business_vod_space_proto_msgTypes,
	}.Build()
	File_volcengine_vod_business_vod_space_proto = out.File
	file_volcengine_vod_business_vod_space_proto_rawDesc = nil
	file_volcengine_vod_business_vod_space_proto_goTypes = nil
	file_volcengine_vod_business_vod_space_proto_depIdxs = nil
}
