// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: vod/business/vod_measure.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 转码用量
type DescribeVodSpaceTranscodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *DescribeVodSpaceTranscodeItem) Reset() {
	*x = DescribeVodSpaceTranscodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeItem) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeItem) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeVodSpaceTranscodeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeItem) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DescribeVodSpaceTranscodeDetailTVUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time              string                           `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	TranscodeItemList []*DescribeVodSpaceTranscodeItem `protobuf:"bytes,2,rep,name=TranscodeItemList,proto3" json:"TranscodeItemList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) Reset() {
	*x = DescribeVodSpaceTranscodeDetailTVUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDetailTVUnit) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDetailTVUnit.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDetailTVUnit) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) GetTranscodeItemList() []*DescribeVodSpaceTranscodeItem {
	if x != nil {
		return x.TranscodeItemList
	}
	return nil
}

type DescribeVodSpaceTranscodeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space              string                                   `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage          string                                   `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	Total              int64                                    `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	TranscodeUsageList []*DescribeVodSpaceTranscodeDetailTVUnit `protobuf:"bytes,4,rep,name=TranscodeUsageList,proto3" json:"TranscodeUsageList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDetail) Reset() {
	*x = DescribeVodSpaceTranscodeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDetail) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDetail) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeVodSpaceTranscodeDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetail) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDetail) GetTranscodeUsageList() []*DescribeVodSpaceTranscodeDetailTVUnit {
	if x != nil {
		return x.TranscodeUsageList
	}
	return nil
}

type DescribeVodSpaceTranscodeDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList               []string                           `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime               string                             `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                 string                             `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	TranscodeType           string                             `protobuf:"bytes,4,opt,name=TranscodeType,proto3" json:"TranscodeType,omitempty"`     // 转码类型：默认全部。Slice，Normal，LowCost，ByteHD
	Specification           string                             `protobuf:"bytes,5,opt,name=Specification,proto3" json:"Specification,omitempty"`     //
	TaskStageList           []string                           `protobuf:"bytes,6,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation             int64                              `protobuf:"varint,7,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList         []string                           `protobuf:"bytes,8,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	TotalTranscodeData      int64                              `protobuf:"varint,9,opt,name=TotalTranscodeData,proto3" json:"TotalTranscodeData,omitempty"`
	TotalTranscodeDataList  []*DescribeVodSpaceTranscodeItem   `protobuf:"bytes,10,rep,name=TotalTranscodeDataList,proto3" json:"TotalTranscodeDataList,omitempty"`
	TranscodeDataDetailList []*DescribeVodSpaceTranscodeDetail `protobuf:"bytes,11,rep,name=TranscodeDataDetailList,proto3" json:"TranscodeDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDataResult) Reset() {
	*x = DescribeVodSpaceTranscodeDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDataResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeVodSpaceTranscodeDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTranscodeType() string {
	if x != nil {
		return x.TranscodeType
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTotalTranscodeData() int64 {
	if x != nil {
		return x.TotalTranscodeData
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTotalTranscodeDataList() []*DescribeVodSpaceTranscodeItem {
	if x != nil {
		return x.TotalTranscodeDataList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTranscodeDataDetailList() []*DescribeVodSpaceTranscodeDetail {
	if x != nil {
		return x.TranscodeDataDetailList
	}
	return nil
}

// 媒体AI用量
type DescribeVodSpaceAIStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataItem) Reset() {
	*x = DescribeVodSpaceAIStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataItem) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeVodSpaceAIStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataItem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type DescribeVodSpaceAIStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space           string                              `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage       string                              `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	AiUsageDataList []*DescribeVodSpaceAIStatisDataItem `protobuf:"bytes,3,rep,name=AiUsageDataList,proto3" json:"AiUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataDetail) Reset() {
	*x = DescribeVodSpaceAIStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetAiUsageDataList() []*DescribeVodSpaceAIStatisDataItem {
	if x != nil {
		return x.AiUsageDataList
	}
	return nil
}

type DescribeVodSpaceAIStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList             []string                              `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime             string                                `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime               string                                `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	MediaAiType           string                                `protobuf:"bytes,4,opt,name=MediaAiType,proto3" json:"MediaAiType,omitempty"`         //类型：默认全部。VideoClassification(视频分类)，AIVideoSummary(精彩剪辑)，BarrageMask(蒙版弹幕)
	TaskStageList         []string                              `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation           int64                                 `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList       []string                              `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	TotalAiUsageData      int64                                 `protobuf:"varint,8,opt,name=TotalAiUsageData,proto3" json:"TotalAiUsageData,omitempty"`
	AiUsageDataList       []*DescribeVodSpaceAIStatisDataItem   `protobuf:"bytes,9,rep,name=AiUsageDataList,proto3" json:"AiUsageDataList,omitempty"`
	AiUsageDataDetailList []*DescribeVodSpaceAIStatisDataDetail `protobuf:"bytes,10,rep,name=AiUsageDataDetailList,proto3" json:"AiUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataResult) Reset() {
	*x = DescribeVodSpaceAIStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeVodSpaceAIStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetMediaAiType() string {
	if x != nil {
		return x.MediaAiType
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceAIStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetTotalAiUsageData() int64 {
	if x != nil {
		return x.TotalAiUsageData
	}
	return 0
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAiUsageDataList() []*DescribeVodSpaceAIStatisDataItem {
	if x != nil {
		return x.AiUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAiUsageDataDetailList() []*DescribeVodSpaceAIStatisDataDetail {
	if x != nil {
		return x.AiUsageDataDetailList
	}
	return nil
}

// 智能字幕用量
type DescribeVodSpaceSubtitleStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Usage int64  `protobuf:"varint,2,opt,name=Usage,proto3" json:"Usage,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataItem) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type DescribeVodSpaceSubtitleStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space                 string                                    `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage             string                                    `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	SubtitleUsageDataList []*DescribeVodSpaceSubtitleStatisDataItem `protobuf:"bytes,3,rep,name=SubtitleUsageDataList,proto3" json:"SubtitleUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetSubtitleUsageDataList() []*DescribeVodSpaceSubtitleStatisDataItem {
	if x != nil {
		return x.SubtitleUsageDataList
	}
	return nil
}

type DescribeVodSpaceSubtitleStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList                   []string                                    `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime                   string                                      `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                     string                                      `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	SubtitleType                string                                      `protobuf:"bytes,4,opt,name=SubtitleType,proto3" json:"SubtitleType,omitempty"`       //类型：默认全部。ASR(语音转写)，MT(机器翻译)，ES(提取字幕)
	TaskStageList               []string                                    `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation                 int64                                       `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList             []string                                    `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	TotalSubtitleUsageData      int64                                       `protobuf:"varint,8,opt,name=TotalSubtitleUsageData,proto3" json:"TotalSubtitleUsageData,omitempty"`
	SubtitleUsageDataList       []*DescribeVodSpaceSubtitleStatisDataItem   `protobuf:"bytes,9,rep,name=SubtitleUsageDataList,proto3" json:"SubtitleUsageDataList,omitempty"`
	SubtitleUsageDataDetailList []*DescribeVodSpaceSubtitleStatisDataDetail `protobuf:"bytes,10,rep,name=SubtitleUsageDataDetailList,proto3" json:"SubtitleUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleType() string {
	if x != nil {
		return x.SubtitleType
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetTotalSubtitleUsageData() int64 {
	if x != nil {
		return x.TotalSubtitleUsageData
	}
	return 0
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleUsageDataList() []*DescribeVodSpaceSubtitleStatisDataItem {
	if x != nil {
		return x.SubtitleUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleUsageDataDetailList() []*DescribeVodSpaceSubtitleStatisDataDetail {
	if x != nil {
		return x.SubtitleUsageDataDetailList
	}
	return nil
}

// 检测修复用量
type DescribeVodSpaceDetectStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Usage int64  `protobuf:"varint,2,opt,name=Usage,proto3" json:"Usage,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataItem) Reset() {
	*x = DescribeVodSpaceDetectStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataItem) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeVodSpaceDetectStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataItem) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type DescribeVodSpaceDetectStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space               string                                  `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage           string                                  `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	DetectUsageDataList []*DescribeVodSpaceDetectStatisDataItem `protobuf:"bytes,3,rep,name=DetectUsageDataList,proto3" json:"DetectUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataDetail) Reset() {
	*x = DescribeVodSpaceDetectStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetDetectUsageDataList() []*DescribeVodSpaceDetectStatisDataItem {
	if x != nil {
		return x.DetectUsageDataList
	}
	return nil
}

type DescribeVodSpaceDetectStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList []string `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"` // 空间列表
	StartTime string   `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime   string   `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	//类型：默认全部。VQScore，WatermarkDetect(水印检测)，WatermarkEraser(水印擦除)，PatchDetect(贴片检测)，PatchEraser(贴片擦除)，BlackFrameDetect(黑帧检测)，BlackFrameEraser(黑帧擦除)，InterlaceDetect（水波纹检测）和
	// InterlaceEraser（水波纹去除）
	DetectType                string                                    `protobuf:"bytes,4,opt,name=DetectType,proto3" json:"DetectType,omitempty"`
	TaskStageList             []string                                  `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation               int64                                     `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList           []string                                  `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	TotalDetectUsageData      int64                                     `protobuf:"varint,8,opt,name=TotalDetectUsageData,proto3" json:"TotalDetectUsageData,omitempty"`
	DetectUsageDataList       []*DescribeVodSpaceDetectStatisDataItem   `protobuf:"bytes,9,rep,name=DetectUsageDataList,proto3" json:"DetectUsageDataList,omitempty"`
	DetectUsageDataDetailList []*DescribeVodSpaceDetectStatisDataDetail `protobuf:"bytes,10,rep,name=DetectUsageDataDetailList,proto3" json:"DetectUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataResult) Reset() {
	*x = DescribeVodSpaceDetectStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectType() string {
	if x != nil {
		return x.DetectType
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetTotalDetectUsageData() int64 {
	if x != nil {
		return x.TotalDetectUsageData
	}
	return 0
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectUsageDataList() []*DescribeVodSpaceDetectStatisDataItem {
	if x != nil {
		return x.DetectUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectUsageDataDetailList() []*DescribeVodSpaceDetectStatisDataDetail {
	if x != nil {
		return x.DetectUsageDataDetailList
	}
	return nil
}

// 点播截图用量
type DescribeVodSnapshotDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *DescribeVodSnapshotDataItem) Reset() {
	*x = DescribeVodSnapshotDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataItem) ProtoMessage() {}

func (x *DescribeVodSnapshotDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataItem) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeVodSnapshotDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSnapshotDataItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DescribeVodSnapshotDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space            string                         `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage        string                         `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	Total            string                         `protobuf:"bytes,3,opt,name=Total,proto3" json:"Total,omitempty"`
	SnapshotDataList []*DescribeVodSnapshotDataItem `protobuf:"bytes,4,rep,name=SnapshotDataList,proto3" json:"SnapshotDataList,omitempty"`
}

func (x *DescribeVodSnapshotDataDetail) Reset() {
	*x = DescribeVodSnapshotDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataDetail) ProtoMessage() {}

func (x *DescribeVodSnapshotDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataDetail) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeVodSnapshotDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetSnapshotDataList() []*DescribeVodSnapshotDataItem {
	if x != nil {
		return x.SnapshotDataList
	}
	return nil
}

type DescribeVodSnapshotDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList              []string                         `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime              string                           `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                string                           `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	SnapshotType           string                           `protobuf:"bytes,4,opt,name=SnapshotType,proto3" json:"SnapshotType,omitempty"`       //类型：默认全部。Poster（静态图）、Sample（采样截图）、Dynpost（动图）、Animated（反复循环图）、AIDynpost（AI动图）、Sprite（雪碧图）
	TaskStageList          []string                         `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation            int64                            `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList        []string                         `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	TotalSnapshotData      int64                            `protobuf:"varint,8,opt,name=TotalSnapshotData,proto3" json:"TotalSnapshotData,omitempty"`
	SnapshotDataList       []*DescribeVodSnapshotDataItem   `protobuf:"bytes,9,rep,name=SnapshotDataList,proto3" json:"SnapshotDataList,omitempty"`
	SnapshotDetailDataList []*DescribeVodSnapshotDataDetail `protobuf:"bytes,10,rep,name=SnapshotDetailDataList,proto3" json:"SnapshotDetailDataList,omitempty"`
}

func (x *DescribeVodSnapshotDataResult) Reset() {
	*x = DescribeVodSnapshotDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_measure_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataResult) ProtoMessage() {}

func (x *DescribeVodSnapshotDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_measure_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_measure_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeVodSnapshotDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSnapshotDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetTotalSnapshotData() int64 {
	if x != nil {
		return x.TotalSnapshotData
	}
	return 0
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotDataList() []*DescribeVodSnapshotDataItem {
	if x != nil {
		return x.SnapshotDataList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotDetailDataList() []*DescribeVodSnapshotDataDetail {
	if x != nil {
		return x.SnapshotDetailDataList
	}
	return nil
}

var File_vod_business_vod_measure_proto protoreflect.FileDescriptor

var file_vod_business_vod_measure_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x22, 0x49, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x25,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54,
	0x56, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe2, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x75, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x45, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x56, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xdb, 0x04, 0x0a, 0x23,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63,
	0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x75, 0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x79,
	0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01,
	0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x41, 0x69, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0f, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0xa0, 0x04, 0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x69, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x69, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x69,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x6a, 0x0a, 0x0f, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x41, 0x69,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x78, 0x0a,
	0x15, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x15, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x28,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x7c, 0x0a, 0x15,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x15, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x04, 0x0a, 0x28, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x7c, 0x0a, 0x15, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x15, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x53, 0x75,
	0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x48, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x1b, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xc3, 0x04, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84,
	0x01, 0x0a, 0x19, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x19, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2,
	0x01, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x99, 0x04, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x67, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x16, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x16, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0xcb, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x56,
	0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01,
	0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_business_vod_measure_proto_rawDescOnce sync.Once
	file_vod_business_vod_measure_proto_rawDescData = file_vod_business_vod_measure_proto_rawDesc
)

func file_vod_business_vod_measure_proto_rawDescGZIP() []byte {
	file_vod_business_vod_measure_proto_rawDescOnce.Do(func() {
		file_vod_business_vod_measure_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_business_vod_measure_proto_rawDescData)
	})
	return file_vod_business_vod_measure_proto_rawDescData
}

var file_vod_business_vod_measure_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_vod_business_vod_measure_proto_goTypes = []interface{}{
	(*DescribeVodSpaceTranscodeItem)(nil),            // 0: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	(*DescribeVodSpaceTranscodeDetailTVUnit)(nil),    // 1: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit
	(*DescribeVodSpaceTranscodeDetail)(nil),          // 2: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail
	(*DescribeVodSpaceTranscodeDataResult)(nil),      // 3: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	(*DescribeVodSpaceAIStatisDataItem)(nil),         // 4: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	(*DescribeVodSpaceAIStatisDataDetail)(nil),       // 5: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail
	(*DescribeVodSpaceAIStatisDataResult)(nil),       // 6: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	(*DescribeVodSpaceSubtitleStatisDataItem)(nil),   // 7: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	(*DescribeVodSpaceSubtitleStatisDataDetail)(nil), // 8: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail
	(*DescribeVodSpaceSubtitleStatisDataResult)(nil), // 9: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	(*DescribeVodSpaceDetectStatisDataItem)(nil),     // 10: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	(*DescribeVodSpaceDetectStatisDataDetail)(nil),   // 11: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail
	(*DescribeVodSpaceDetectStatisDataResult)(nil),   // 12: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	(*DescribeVodSnapshotDataItem)(nil),              // 13: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	(*DescribeVodSnapshotDataDetail)(nil),            // 14: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail
	(*DescribeVodSnapshotDataResult)(nil),            // 15: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult
}
var file_vod_business_vod_measure_proto_depIdxs = []int32{
	0,  // 0: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit.TranscodeItemList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	1,  // 1: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail.TranscodeUsageList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit
	0,  // 2: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult.TotalTranscodeDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	2,  // 3: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult.TranscodeDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail
	4,  // 4: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail.AiUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	4,  // 5: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult.AiUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	5,  // 6: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult.AiUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail
	7,  // 7: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail.SubtitleUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	7,  // 8: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult.SubtitleUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	8,  // 9: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult.SubtitleUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail
	10, // 10: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail.DetectUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	10, // 11: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult.DetectUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	11, // 12: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult.DetectUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail
	13, // 13: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail.SnapshotDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	13, // 14: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult.SnapshotDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	14, // 15: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult.SnapshotDetailDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_vod_business_vod_measure_proto_init() }
func file_vod_business_vod_measure_proto_init() {
	if File_vod_business_vod_measure_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vod_business_vod_measure_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDetailTVUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_measure_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_business_vod_measure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_business_vod_measure_proto_goTypes,
		DependencyIndexes: file_vod_business_vod_measure_proto_depIdxs,
		MessageInfos:      file_vod_business_vod_measure_proto_msgTypes,
	}.Build()
	File_vod_business_vod_measure_proto = out.File
	file_vod_business_vod_measure_proto_rawDesc = nil
	file_vod_business_vod_measure_proto_goTypes = nil
	file_vod_business_vod_measure_proto_depIdxs = nil
}
