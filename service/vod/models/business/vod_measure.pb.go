// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.19.4
// source: volcengine/vod/business/vod_measure.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 转码用量
type DescribeVodSpaceTranscodeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *DescribeVodSpaceTranscodeItem) Reset() {
	*x = DescribeVodSpaceTranscodeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeItem) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{0}
}

func (x *DescribeVodSpaceTranscodeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeItem) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DescribeVodSpaceTranscodeDetailTVUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time              string                           `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	TranscodeItemList []*DescribeVodSpaceTranscodeItem `protobuf:"bytes,2,rep,name=TranscodeItemList,proto3" json:"TranscodeItemList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) Reset() {
	*x = DescribeVodSpaceTranscodeDetailTVUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDetailTVUnit) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDetailTVUnit.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDetailTVUnit) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{1}
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetailTVUnit) GetTranscodeItemList() []*DescribeVodSpaceTranscodeItem {
	if x != nil {
		return x.TranscodeItemList
	}
	return nil
}

type DescribeVodSpaceTranscodeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space              string                                   `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage          string                                   `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	Total              int64                                    `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	TranscodeUsageList []*DescribeVodSpaceTranscodeDetailTVUnit `protobuf:"bytes,4,rep,name=TranscodeUsageList,proto3" json:"TranscodeUsageList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDetail) Reset() {
	*x = DescribeVodSpaceTranscodeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDetail) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{2}
}

func (x *DescribeVodSpaceTranscodeDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDetail) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDetail) GetTranscodeUsageList() []*DescribeVodSpaceTranscodeDetailTVUnit {
	if x != nil {
		return x.TranscodeUsageList
	}
	return nil
}

type DescribeVodSpaceTranscodeDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList               []string                           `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime               string                             `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                 string                             `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	TranscodeType           string                             `protobuf:"bytes,4,opt,name=TranscodeType,proto3" json:"TranscodeType,omitempty"`     // 转码类型：默认全部。Slice，Normal，LowCost，ByteHD
	Specification           string                             `protobuf:"bytes,5,opt,name=Specification,proto3" json:"Specification,omitempty"`     //
	TaskStageList           []string                           `protobuf:"bytes,6,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation             int64                              `protobuf:"varint,7,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList         []string                           `protobuf:"bytes,8,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	RegionList              []string                           `protobuf:"bytes,9,rep,name=RegionList,proto3" json:"RegionList,omitempty"`           // 地区列表
	TotalTranscodeData      int64                              `protobuf:"varint,10,opt,name=TotalTranscodeData,proto3" json:"TotalTranscodeData,omitempty"`
	TotalTranscodeDataList  []*DescribeVodSpaceTranscodeItem   `protobuf:"bytes,11,rep,name=TotalTranscodeDataList,proto3" json:"TotalTranscodeDataList,omitempty"`
	TranscodeDataDetailList []*DescribeVodSpaceTranscodeDetail `protobuf:"bytes,12,rep,name=TranscodeDataDetailList,proto3" json:"TranscodeDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceTranscodeDataResult) Reset() {
	*x = DescribeVodSpaceTranscodeDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceTranscodeDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceTranscodeDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceTranscodeDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceTranscodeDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceTranscodeDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{3}
}

func (x *DescribeVodSpaceTranscodeDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTranscodeType() string {
	if x != nil {
		return x.TranscodeType
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTotalTranscodeData() int64 {
	if x != nil {
		return x.TotalTranscodeData
	}
	return 0
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTotalTranscodeDataList() []*DescribeVodSpaceTranscodeItem {
	if x != nil {
		return x.TotalTranscodeDataList
	}
	return nil
}

func (x *DescribeVodSpaceTranscodeDataResult) GetTranscodeDataDetailList() []*DescribeVodSpaceTranscodeDetail {
	if x != nil {
		return x.TranscodeDataDetailList
	}
	return nil
}

// 媒体AI用量
type DescribeVodSpaceAIStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataItem) Reset() {
	*x = DescribeVodSpaceAIStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{4}
}

func (x *DescribeVodSpaceAIStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataItem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type DescribeVodSpaceAIStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space           string                              `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage       string                              `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	AiUsageDataList []*DescribeVodSpaceAIStatisDataItem `protobuf:"bytes,3,rep,name=AiUsageDataList,proto3" json:"AiUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataDetail) Reset() {
	*x = DescribeVodSpaceAIStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{5}
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataDetail) GetAiUsageDataList() []*DescribeVodSpaceAIStatisDataItem {
	if x != nil {
		return x.AiUsageDataList
	}
	return nil
}

type DescribeVodSpaceAIStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList             []string                              `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime             string                                `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime               string                                `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	MediaAiType           string                                `protobuf:"bytes,4,opt,name=MediaAiType,proto3" json:"MediaAiType,omitempty"`         //类型：默认全部。VideoClassification(视频分类)，AIVideoSummary(精彩剪辑)，BarrageMask(蒙版弹幕)
	TaskStageList         []string                              `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation           int64                                 `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList       []string                              `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	RegionList            []string                              `protobuf:"bytes,8,rep,name=RegionList,proto3" json:"RegionList,omitempty"`
	TotalAiUsageData      int64                                 `protobuf:"varint,9,opt,name=TotalAiUsageData,proto3" json:"TotalAiUsageData,omitempty"`
	AiUsageDataList       []*DescribeVodSpaceAIStatisDataItem   `protobuf:"bytes,10,rep,name=AiUsageDataList,proto3" json:"AiUsageDataList,omitempty"`
	AiUsageDataDetailList []*DescribeVodSpaceAIStatisDataDetail `protobuf:"bytes,11,rep,name=AiUsageDataDetailList,proto3" json:"AiUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceAIStatisDataResult) Reset() {
	*x = DescribeVodSpaceAIStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceAIStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceAIStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceAIStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceAIStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceAIStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeVodSpaceAIStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetMediaAiType() string {
	if x != nil {
		return x.MediaAiType
	}
	return ""
}

func (x *DescribeVodSpaceAIStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceAIStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetTotalAiUsageData() int64 {
	if x != nil {
		return x.TotalAiUsageData
	}
	return 0
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAiUsageDataList() []*DescribeVodSpaceAIStatisDataItem {
	if x != nil {
		return x.AiUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceAIStatisDataResult) GetAiUsageDataDetailList() []*DescribeVodSpaceAIStatisDataDetail {
	if x != nil {
		return x.AiUsageDataDetailList
	}
	return nil
}

// 智能字幕用量
type DescribeVodSpaceSubtitleStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Usage int64  `protobuf:"varint,2,opt,name=Usage,proto3" json:"Usage,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataItem) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type DescribeVodSpaceSubtitleStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space                 string                                    `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage             string                                    `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	SubtitleUsageDataList []*DescribeVodSpaceSubtitleStatisDataItem `protobuf:"bytes,3,rep,name=SubtitleUsageDataList,proto3" json:"SubtitleUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{8}
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataDetail) GetSubtitleUsageDataList() []*DescribeVodSpaceSubtitleStatisDataItem {
	if x != nil {
		return x.SubtitleUsageDataList
	}
	return nil
}

type DescribeVodSpaceSubtitleStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList                   []string                                    `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime                   string                                      `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                     string                                      `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	SubtitleType                string                                      `protobuf:"bytes,4,opt,name=SubtitleType,proto3" json:"SubtitleType,omitempty"`       //类型：默认全部。ASR(语音转写)，MT(机器翻译)，ES(提取字幕)
	TaskStageList               []string                                    `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation                 int64                                       `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList             []string                                    `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	RegionList                  []string                                    `protobuf:"bytes,8,rep,name=RegionList,proto3" json:"RegionList,omitempty"`
	TotalSubtitleUsageData      int64                                       `protobuf:"varint,9,opt,name=TotalSubtitleUsageData,proto3" json:"TotalSubtitleUsageData,omitempty"`
	SubtitleUsageDataList       []*DescribeVodSpaceSubtitleStatisDataItem   `protobuf:"bytes,10,rep,name=SubtitleUsageDataList,proto3" json:"SubtitleUsageDataList,omitempty"`
	SubtitleUsageDataDetailList []*DescribeVodSpaceSubtitleStatisDataDetail `protobuf:"bytes,11,rep,name=SubtitleUsageDataDetailList,proto3" json:"SubtitleUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) Reset() {
	*x = DescribeVodSpaceSubtitleStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceSubtitleStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceSubtitleStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceSubtitleStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceSubtitleStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{9}
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleType() string {
	if x != nil {
		return x.SubtitleType
	}
	return ""
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetTotalSubtitleUsageData() int64 {
	if x != nil {
		return x.TotalSubtitleUsageData
	}
	return 0
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleUsageDataList() []*DescribeVodSpaceSubtitleStatisDataItem {
	if x != nil {
		return x.SubtitleUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceSubtitleStatisDataResult) GetSubtitleUsageDataDetailList() []*DescribeVodSpaceSubtitleStatisDataDetail {
	if x != nil {
		return x.SubtitleUsageDataDetailList
	}
	return nil
}

// 检测修复用量
type DescribeVodSpaceDetectStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Usage int64  `protobuf:"varint,2,opt,name=Usage,proto3" json:"Usage,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataItem) Reset() {
	*x = DescribeVodSpaceDetectStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{10}
}

func (x *DescribeVodSpaceDetectStatisDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataItem) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

type DescribeVodSpaceDetectStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space               string                                  `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage           string                                  `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	DetectUsageDataList []*DescribeVodSpaceDetectStatisDataItem `protobuf:"bytes,3,rep,name=DetectUsageDataList,proto3" json:"DetectUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataDetail) Reset() {
	*x = DescribeVodSpaceDetectStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataDetail) GetDetectUsageDataList() []*DescribeVodSpaceDetectStatisDataItem {
	if x != nil {
		return x.DetectUsageDataList
	}
	return nil
}

type DescribeVodSpaceDetectStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList []string `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"` // 空间列表
	StartTime string   `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime   string   `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	//类型：默认全部。VQScore，WatermarkDetect(水印检测)，WatermarkEraser(水印擦除)，PatchDetect(贴片检测)，PatchEraser(贴片擦除)，BlackFrameDetect(黑帧检测)，BlackFrameEraser(黑帧擦除)，InterlaceDetect（水波纹检测）和
	// InterlaceEraser（水波纹去除）
	DetectType                string                                    `protobuf:"bytes,4,opt,name=DetectType,proto3" json:"DetectType,omitempty"`
	TaskStageList             []string                                  `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation               int64                                     `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList           []string                                  `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	RegionList                []string                                  `protobuf:"bytes,8,rep,name=RegionList,proto3" json:"RegionList,omitempty"`
	TotalDetectUsageData      int64                                     `protobuf:"varint,9,opt,name=TotalDetectUsageData,proto3" json:"TotalDetectUsageData,omitempty"`
	DetectUsageDataList       []*DescribeVodSpaceDetectStatisDataItem   `protobuf:"bytes,10,rep,name=DetectUsageDataList,proto3" json:"DetectUsageDataList,omitempty"`
	DetectUsageDataDetailList []*DescribeVodSpaceDetectStatisDataDetail `protobuf:"bytes,11,rep,name=DetectUsageDataDetailList,proto3" json:"DetectUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceDetectStatisDataResult) Reset() {
	*x = DescribeVodSpaceDetectStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceDetectStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceDetectStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceDetectStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceDetectStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceDetectStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectType() string {
	if x != nil {
		return x.DetectType
	}
	return ""
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetTotalDetectUsageData() int64 {
	if x != nil {
		return x.TotalDetectUsageData
	}
	return 0
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectUsageDataList() []*DescribeVodSpaceDetectStatisDataItem {
	if x != nil {
		return x.DetectUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceDetectStatisDataResult) GetDetectUsageDataDetailList() []*DescribeVodSpaceDetectStatisDataDetail {
	if x != nil {
		return x.DetectUsageDataDetailList
	}
	return nil
}

// 点播截图用量
type DescribeVodSnapshotDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *DescribeVodSnapshotDataItem) Reset() {
	*x = DescribeVodSnapshotDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataItem) ProtoMessage() {}

func (x *DescribeVodSnapshotDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{13}
}

func (x *DescribeVodSnapshotDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSnapshotDataItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DescribeVodSnapshotDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space            string                         `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	TaskStage        string                         `protobuf:"bytes,2,opt,name=TaskStage,proto3" json:"TaskStage,omitempty"`
	Total            string                         `protobuf:"bytes,3,opt,name=Total,proto3" json:"Total,omitempty"`
	SnapshotDataList []*DescribeVodSnapshotDataItem `protobuf:"bytes,4,rep,name=SnapshotDataList,proto3" json:"SnapshotDataList,omitempty"`
}

func (x *DescribeVodSnapshotDataDetail) Reset() {
	*x = DescribeVodSnapshotDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataDetail) ProtoMessage() {}

func (x *DescribeVodSnapshotDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{14}
}

func (x *DescribeVodSnapshotDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetTaskStage() string {
	if x != nil {
		return x.TaskStage
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *DescribeVodSnapshotDataDetail) GetSnapshotDataList() []*DescribeVodSnapshotDataItem {
	if x != nil {
		return x.SnapshotDataList
	}
	return nil
}

type DescribeVodSnapshotDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList              []string                         `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime              string                           `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                string                           `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	SnapshotType           string                           `protobuf:"bytes,4,opt,name=SnapshotType,proto3" json:"SnapshotType,omitempty"`       //类型：默认全部。Poster（静态图）、Sample（采样截图）、Dynpost（动图）、Animated（反复循环图）、AIDynpost（AI动图）、Sprite（雪碧图）
	TaskStageList          []string                         `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"`     // 闲忙时: busy/free
	Aggregation            int64                            `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList        []string                         `protobuf:"bytes,7,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：TaskStage、Space
	RegionList             []string                         `protobuf:"bytes,8,rep,name=RegionList,proto3" json:"RegionList,omitempty"`
	TotalSnapshotData      int64                            `protobuf:"varint,9,opt,name=TotalSnapshotData,proto3" json:"TotalSnapshotData,omitempty"`
	SnapshotDataList       []*DescribeVodSnapshotDataItem   `protobuf:"bytes,10,rep,name=SnapshotDataList,proto3" json:"SnapshotDataList,omitempty"`
	SnapshotDetailDataList []*DescribeVodSnapshotDataDetail `protobuf:"bytes,11,rep,name=SnapshotDetailDataList,proto3" json:"SnapshotDetailDataList,omitempty"`
}

func (x *DescribeVodSnapshotDataResult) Reset() {
	*x = DescribeVodSnapshotDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSnapshotDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSnapshotDataResult) ProtoMessage() {}

func (x *DescribeVodSnapshotDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSnapshotDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSnapshotDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{15}
}

func (x *DescribeVodSnapshotDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotType() string {
	if x != nil {
		return x.SnapshotType
	}
	return ""
}

func (x *DescribeVodSnapshotDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSnapshotDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetTotalSnapshotData() int64 {
	if x != nil {
		return x.TotalSnapshotData
	}
	return 0
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotDataList() []*DescribeVodSnapshotDataItem {
	if x != nil {
		return x.SnapshotDataList
	}
	return nil
}

func (x *DescribeVodSnapshotDataResult) GetSnapshotDetailDataList() []*DescribeVodSnapshotDataDetail {
	if x != nil {
		return x.SnapshotDetailDataList
	}
	return nil
}

// 点播工作流用量明细
type DescribeVodSpaceWorkflowTranscodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateType  string `protobuf:"bytes,1,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	FileType      string `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	Duration      int64  `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Codec         string `protobuf:"bytes,4,opt,name=Codec,proto3" json:"Codec,omitempty"`
	Remux         bool   `protobuf:"varint,5,opt,name=Remux,proto3" json:"Remux,omitempty"`
	Definition    string `protobuf:"bytes,6,opt,name=Definition,proto3" json:"Definition,omitempty"`
	Width         int64  `protobuf:"varint,7,opt,name=Width,proto3" json:"Width,omitempty"`
	Height        int64  `protobuf:"varint,8,opt,name=Height,proto3" json:"Height,omitempty"`
	Slice         bool   `protobuf:"varint,9,opt,name=Slice,proto3" json:"Slice,omitempty"`
	IsLowPriority bool   `protobuf:"varint,10,opt,name=IsLowPriority,proto3" json:"IsLowPriority,omitempty"`
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) Reset() {
	*x = DescribeVodSpaceWorkflowTranscodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowTranscodeInfo) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowTranscodeInfo.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowTranscodeInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{16}
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetRemux() bool {
	if x != nil {
		return x.Remux
	}
	return false
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetSlice() bool {
	if x != nil {
		return x.Slice
	}
	return false
}

func (x *DescribeVodSpaceWorkflowTranscodeInfo) GetIsLowPriority() bool {
	if x != nil {
		return x.IsLowPriority
	}
	return false
}

type DescribeVodSpaceWorkflowSnapshotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateType  string `protobuf:"bytes,1,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	Number        int64  `protobuf:"varint,2,opt,name=Number,proto3" json:"Number,omitempty"`
	IsLowPriority bool   `protobuf:"varint,3,opt,name=IsLowPriority,proto3" json:"IsLowPriority,omitempty"`
}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) Reset() {
	*x = DescribeVodSpaceWorkflowSnapshotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowSnapshotInfo) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowSnapshotInfo.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowSnapshotInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{17}
}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowSnapshotInfo) GetIsLowPriority() bool {
	if x != nil {
		return x.IsLowPriority
	}
	return false
}

type DescribeVodSpaceWorkflowEnhanceExecInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateType  string `protobuf:"bytes,1,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	Duration      int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	IsLowPriority bool   `protobuf:"varint,3,opt,name=IsLowPriority,proto3" json:"IsLowPriority,omitempty"`
}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) Reset() {
	*x = DescribeVodSpaceWorkflowEnhanceExecInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowEnhanceExecInfo) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowEnhanceExecInfo.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowEnhanceExecInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{18}
}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowEnhanceExecInfo) GetIsLowPriority() bool {
	if x != nil {
		return x.IsLowPriority
	}
	return false
}

type DescribeVodSpaceWorkflowVideoAIInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateType  string `protobuf:"bytes,1,opt,name=TemplateType,proto3" json:"TemplateType,omitempty"`
	Duration      int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Number        int64  `protobuf:"varint,3,opt,name=Number,proto3" json:"Number,omitempty"`
	IsLowPriority bool   `protobuf:"varint,4,opt,name=IsLowPriority,proto3" json:"IsLowPriority,omitempty"`
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) Reset() {
	*x = DescribeVodSpaceWorkflowVideoAIInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowVideoAIInfo) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowVideoAIInfo.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowVideoAIInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{19}
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) GetTemplateType() string {
	if x != nil {
		return x.TemplateType
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowVideoAIInfo) GetIsLowPriority() bool {
	if x != nil {
		return x.IsLowPriority
	}
	return false
}

type DescribeVodSpaceWorkflowDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RunId           string                                   `protobuf:"bytes,1,opt,name=RunId,proto3" json:"RunId,omitempty"`
	Vid             string                                   `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`
	TemplateId      string                                   `protobuf:"bytes,3,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
	SpaceName       string                                   `protobuf:"bytes,4,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	Status          string                                   `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	StartTime       string                                   `protobuf:"bytes,6,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime         string                                   `protobuf:"bytes,7,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	TranscodeInfo   *DescribeVodSpaceWorkflowTranscodeInfo   `protobuf:"bytes,8,opt,name=TranscodeInfo,proto3" json:"TranscodeInfo,omitempty"`
	SnapshotInfo    *DescribeVodSpaceWorkflowSnapshotInfo    `protobuf:"bytes,9,opt,name=SnapshotInfo,proto3" json:"SnapshotInfo,omitempty"`
	EnhanceExecInfo *DescribeVodSpaceWorkflowEnhanceExecInfo `protobuf:"bytes,10,opt,name=EnhanceExecInfo,proto3" json:"EnhanceExecInfo,omitempty"`
	VideoAIInfo     *DescribeVodSpaceWorkflowVideoAIInfo     `protobuf:"bytes,11,opt,name=VideoAIInfo,proto3" json:"VideoAIInfo,omitempty"`
}

func (x *DescribeVodSpaceWorkflowDetail) Reset() {
	*x = DescribeVodSpaceWorkflowDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowDetail) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{20}
}

func (x *DescribeVodSpaceWorkflowDetail) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetail) GetTranscodeInfo() *DescribeVodSpaceWorkflowTranscodeInfo {
	if x != nil {
		return x.TranscodeInfo
	}
	return nil
}

func (x *DescribeVodSpaceWorkflowDetail) GetSnapshotInfo() *DescribeVodSpaceWorkflowSnapshotInfo {
	if x != nil {
		return x.SnapshotInfo
	}
	return nil
}

func (x *DescribeVodSpaceWorkflowDetail) GetEnhanceExecInfo() *DescribeVodSpaceWorkflowEnhanceExecInfo {
	if x != nil {
		return x.EnhanceExecInfo
	}
	return nil
}

func (x *DescribeVodSpaceWorkflowDetail) GetVideoAIInfo() *DescribeVodSpaceWorkflowVideoAIInfo {
	if x != nil {
		return x.VideoAIInfo
	}
	return nil
}

type DescribeVodSpaceWorkflowDetailDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region             string                            `protobuf:"bytes,1,opt,name=Region,proto3" json:"Region,omitempty"`       //地区，如：cn-north-1
	Space              string                            `protobuf:"bytes,2,opt,name=Space,proto3" json:"Space,omitempty"`         // 空间
	StartTime          string                            `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime            string                            `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；起止时间间隔不超过1天
	PageSize           int64                             `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`  // 分页查询的页大小，默认100
	PageNum            int64                             `protobuf:"varint,6,opt,name=PageNum,proto3" json:"PageNum,omitempty"`    // 分页查询的页号，默认1
	Total              int64                             `protobuf:"varint,7,opt,name=Total,proto3" json:"Total,omitempty"`        // 数据总条数
	WorkflowDetailData []*DescribeVodSpaceWorkflowDetail `protobuf:"bytes,8,rep,name=WorkflowDetailData,proto3" json:"WorkflowDetailData,omitempty"`
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) Reset() {
	*x = DescribeVodSpaceWorkflowDetailDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceWorkflowDetailDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceWorkflowDetailDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceWorkflowDetailDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceWorkflowDetailDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{21}
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodSpaceWorkflowDetailDataResult) GetWorkflowDetailData() []*DescribeVodSpaceWorkflowDetail {
	if x != nil {
		return x.WorkflowDetailData
	}
	return nil
}

// 点播编辑用量明细
type DescribeVodSpaceEditDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	OutputVid  string `protobuf:"bytes,2,opt,name=OutputVid,proto3" json:"OutputVid,omitempty"`
	Space      string `protobuf:"bytes,3,opt,name=Space,proto3" json:"Space,omitempty"`
	Codec      string `protobuf:"bytes,4,opt,name=Codec,proto3" json:"Codec,omitempty"`
	Definition string `protobuf:"bytes,5,opt,name=Definition,proto3" json:"Definition,omitempty"`
	Duration   int64  `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *DescribeVodSpaceEditDetail) Reset() {
	*x = DescribeVodSpaceEditDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditDetail) ProtoMessage() {}

func (x *DescribeVodSpaceEditDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{22}
}

func (x *DescribeVodSpaceEditDetail) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceEditDetail) GetOutputVid() string {
	if x != nil {
		return x.OutputVid
	}
	return ""
}

func (x *DescribeVodSpaceEditDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceEditDetail) GetCodec() string {
	if x != nil {
		return x.Codec
	}
	return ""
}

func (x *DescribeVodSpaceEditDetail) GetDefinition() string {
	if x != nil {
		return x.Definition
	}
	return ""
}

func (x *DescribeVodSpaceEditDetail) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type DescribeVodSpaceEditDetailDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region         string                        `protobuf:"bytes,1,opt,name=Region,proto3" json:"Region,omitempty"`       //地区，如：cn-north-1
	Space          string                        `protobuf:"bytes,2,opt,name=Space,proto3" json:"Space,omitempty"`         // 空间
	StartTime      string                        `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime        string                        `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；起止时间间隔不超过1天
	PageSize       int64                         `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`  // 分页查询的页大小，默认100
	PageNum        int64                         `protobuf:"varint,6,opt,name=PageNum,proto3" json:"PageNum,omitempty"`    // 分页查询的页号，默认1
	Total          int64                         `protobuf:"varint,7,opt,name=Total,proto3" json:"Total,omitempty"`        // 数据总条数
	EditDetailData []*DescribeVodSpaceEditDetail `protobuf:"bytes,8,rep,name=EditDetailData,proto3" json:"EditDetailData,omitempty"`
}

func (x *DescribeVodSpaceEditDetailDataResult) Reset() {
	*x = DescribeVodSpaceEditDetailDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditDetailDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditDetailDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceEditDetailDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditDetailDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditDetailDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{23}
}

func (x *DescribeVodSpaceEditDetailDataResult) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DescribeVodSpaceEditDetailDataResult) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceEditDetailDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceEditDetailDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceEditDetailDataResult) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DescribeVodSpaceEditDetailDataResult) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *DescribeVodSpaceEditDetailDataResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodSpaceEditDetailDataResult) GetEditDetailData() []*DescribeVodSpaceEditDetail {
	if x != nil {
		return x.EditDetailData
	}
	return nil
}

// 点播文件域名粒度播放统计信息下载
type DescribeVodPlayFileLogByDomainItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Domain      string `protobuf:"bytes,2,opt,name=Domain,proto3" json:"Domain,omitempty"`
	DownloadUrl string `protobuf:"bytes,3,opt,name=DownloadUrl,proto3" json:"DownloadUrl,omitempty"`
}

func (x *DescribeVodPlayFileLogByDomainItem) Reset() {
	*x = DescribeVodPlayFileLogByDomainItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayFileLogByDomainItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayFileLogByDomainItem) ProtoMessage() {}

func (x *DescribeVodPlayFileLogByDomainItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayFileLogByDomainItem.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayFileLogByDomainItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{24}
}

func (x *DescribeVodPlayFileLogByDomainItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DescribeVodPlayFileLogByDomainItem) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DescribeVodPlayFileLogByDomainItem) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type DescribeVodPlayFileLogByDomainResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime  string                                `protobuf:"bytes,1,opt,name=StartTime,proto3" json:"StartTime,omitempty"`   // 查询的起始时间, rfc3339格式, 最早查询1年内的数据
	EndTime    string                                `protobuf:"bytes,2,opt,name=EndTime,proto3" json:"EndTime,omitempty"`       // 查询的结束时间, rfc3339；起止时间间隔不超过93天
	DomainList []string                              `protobuf:"bytes,3,rep,name=DomainList,proto3" json:"DomainList,omitempty"` // 查询域名列表
	FileList   []*DescribeVodPlayFileLogByDomainItem `protobuf:"bytes,4,rep,name=FileList,proto3" json:"FileList,omitempty"`
}

func (x *DescribeVodPlayFileLogByDomainResult) Reset() {
	*x = DescribeVodPlayFileLogByDomainResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayFileLogByDomainResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayFileLogByDomainResult) ProtoMessage() {}

func (x *DescribeVodPlayFileLogByDomainResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayFileLogByDomainResult.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayFileLogByDomainResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{25}
}

func (x *DescribeVodPlayFileLogByDomainResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodPlayFileLogByDomainResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodPlayFileLogByDomainResult) GetDomainList() []string {
	if x != nil {
		return x.DomainList
	}
	return nil
}

func (x *DescribeVodPlayFileLogByDomainResult) GetFileList() []*DescribeVodPlayFileLogByDomainItem {
	if x != nil {
		return x.FileList
	}
	return nil
}

// 点播画质增强用量
type DescribeVodEnhanceImageDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	SR          int64  `protobuf:"varint,2,opt,name=SR,proto3" json:"SR,omitempty"`
	VFI         int64  `protobuf:"varint,3,opt,name=VFI,proto3" json:"VFI,omitempty"`
	SDREnhance  int64  `protobuf:"varint,4,opt,name=SDREnhance,proto3" json:"SDREnhance,omitempty"`
	SDR2HDR     int64  `protobuf:"varint,5,opt,name=SDR2HDR,proto3" json:"SDR2HDR,omitempty"`
	AudioDenose int64  `protobuf:"varint,6,opt,name=AudioDenose,proto3" json:"AudioDenose,omitempty"`
}

func (x *DescribeVodEnhanceImageDataItem) Reset() {
	*x = DescribeVodEnhanceImageDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodEnhanceImageDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodEnhanceImageDataItem) ProtoMessage() {}

func (x *DescribeVodEnhanceImageDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodEnhanceImageDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodEnhanceImageDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{26}
}

func (x *DescribeVodEnhanceImageDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodEnhanceImageDataItem) GetSR() int64 {
	if x != nil {
		return x.SR
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataItem) GetVFI() int64 {
	if x != nil {
		return x.VFI
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataItem) GetSDREnhance() int64 {
	if x != nil {
		return x.SDREnhance
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataItem) GetSDR2HDR() int64 {
	if x != nil {
		return x.SDR2HDR
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataItem) GetAudioDenose() int64 {
	if x != nil {
		return x.AudioDenose
	}
	return 0
}

// 点播画质增强用量
type DescribeVodEnhanceImageDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList    []string `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`       // 空间列表
	StartTime    string   `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`       // 查询的起始时间, rfc3339
	EndTime      string   `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`           // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	TaskTypeList []string `protobuf:"bytes,4,rep,name=TaskTypeList,proto3" json:"TaskTypeList,omitempty"` //类型：默认全部。SR（智能超分），VFI（插帧），SDREnhance（SDR
	//增强），SDR2HDR（SDR 转 HDR），AudioDenoise（音频降噪）
	TaskStageList        []string                           `protobuf:"bytes,5,rep,name=TaskStageList,proto3" json:"TaskStageList,omitempty"` // 闲忙时: busy/free
	Aggregation          int64                              `protobuf:"varint,6,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`    //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	RegionList           []string                           `protobuf:"bytes,7,rep,name=RegionList,proto3" json:"RegionList,omitempty"`
	TotalEnhanceImagData int64                              `protobuf:"varint,8,opt,name=TotalEnhanceImagData,proto3" json:"TotalEnhanceImagData,omitempty"`
	EnhanceImageList     []*DescribeVodEnhanceImageDataItem `protobuf:"bytes,9,rep,name=EnhanceImageList,proto3" json:"EnhanceImageList,omitempty"`
}

func (x *DescribeVodEnhanceImageDataResult) Reset() {
	*x = DescribeVodEnhanceImageDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodEnhanceImageDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodEnhanceImageDataResult) ProtoMessage() {}

func (x *DescribeVodEnhanceImageDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodEnhanceImageDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodEnhanceImageDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{27}
}

func (x *DescribeVodEnhanceImageDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodEnhanceImageDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodEnhanceImageDataResult) GetTaskTypeList() []string {
	if x != nil {
		return x.TaskTypeList
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResult) GetTaskStageList() []string {
	if x != nil {
		return x.TaskStageList
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodEnhanceImageDataResult) GetTotalEnhanceImagData() int64 {
	if x != nil {
		return x.TotalEnhanceImagData
	}
	return 0
}

func (x *DescribeVodEnhanceImageDataResult) GetEnhanceImageList() []*DescribeVodEnhanceImageDataItem {
	if x != nil {
		return x.EnhanceImageList
	}
	return nil
}

// 视频剪辑用量
type DescribeVodSpaceEditStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *DescribeVodSpaceEditStatisDataItem) Reset() {
	*x = DescribeVodSpaceEditStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditStatisDataItem) ProtoMessage() {}

func (x *DescribeVodSpaceEditStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{28}
}

func (x *DescribeVodSpaceEditStatisDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDataItem) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

type DescribeVodSpaceEditStatisDetailTVUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time              string                                `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	EditUsageItemList []*DescribeVodSpaceEditStatisDataItem `protobuf:"bytes,2,rep,name=EditUsageItemList,proto3" json:"EditUsageItemList,omitempty"`
}

func (x *DescribeVodSpaceEditStatisDetailTVUnit) Reset() {
	*x = DescribeVodSpaceEditStatisDetailTVUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditStatisDetailTVUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditStatisDetailTVUnit) ProtoMessage() {}

func (x *DescribeVodSpaceEditStatisDetailTVUnit) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditStatisDetailTVUnit.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditStatisDetailTVUnit) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{29}
}

func (x *DescribeVodSpaceEditStatisDetailTVUnit) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDetailTVUnit) GetEditUsageItemList() []*DescribeVodSpaceEditStatisDataItem {
	if x != nil {
		return x.EditUsageItemList
	}
	return nil
}

type DescribeVodSpaceEditStatisDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space             string                                    `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	EditUsageDataList []*DescribeVodSpaceEditStatisDetailTVUnit `protobuf:"bytes,3,rep,name=EditUsageDataList,proto3" json:"EditUsageDataList,omitempty"`
}

func (x *DescribeVodSpaceEditStatisDataDetail) Reset() {
	*x = DescribeVodSpaceEditStatisDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditStatisDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditStatisDataDetail) ProtoMessage() {}

func (x *DescribeVodSpaceEditStatisDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditStatisDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditStatisDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{30}
}

func (x *DescribeVodSpaceEditStatisDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDataDetail) GetEditUsageDataList() []*DescribeVodSpaceEditStatisDetailTVUnit {
	if x != nil {
		return x.EditUsageDataList
	}
	return nil
}

type DescribeVodSpaceEditStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList               []string                                `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表，多个空间用逗号分割
	StartTime               string                                  `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                 string                                  `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	Specification           string                                  `protobuf:"bytes,4,opt,name=Specification,proto3" json:"Specification,omitempty"`     // 封装格式
	Aggregation             int64                                   `protobuf:"varint,5,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList         []string                                `protobuf:"bytes,6,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：Space
	RegionList              []string                                `protobuf:"bytes,7,rep,name=RegionList,proto3" json:"RegionList,omitempty"`           // 区域，多个区域用逗号分割
	TotalEditUsageData      int64                                   `protobuf:"varint,8,opt,name=TotalEditUsageData,proto3" json:"TotalEditUsageData,omitempty"`
	TotalEditUsageDataList  []*DescribeVodSpaceEditStatisDataItem   `protobuf:"bytes,9,rep,name=TotalEditUsageDataList,proto3" json:"TotalEditUsageDataList,omitempty"`
	EditUsageDataDetailList []*DescribeVodSpaceEditStatisDataDetail `protobuf:"bytes,10,rep,name=EditUsageDataDetailList,proto3" json:"EditUsageDataDetailList,omitempty"`
}

func (x *DescribeVodSpaceEditStatisDataResult) Reset() {
	*x = DescribeVodSpaceEditStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodSpaceEditStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodSpaceEditStatisDataResult) ProtoMessage() {}

func (x *DescribeVodSpaceEditStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodSpaceEditStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodSpaceEditStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{31}
}

func (x *DescribeVodSpaceEditStatisDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodSpaceEditStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDataResult) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *DescribeVodSpaceEditStatisDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodSpaceEditStatisDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodSpaceEditStatisDataResult) GetRegionList() []string {
	if x != nil {
		return x.RegionList
	}
	return nil
}

func (x *DescribeVodSpaceEditStatisDataResult) GetTotalEditUsageData() int64 {
	if x != nil {
		return x.TotalEditUsageData
	}
	return 0
}

func (x *DescribeVodSpaceEditStatisDataResult) GetTotalEditUsageDataList() []*DescribeVodSpaceEditStatisDataItem {
	if x != nil {
		return x.TotalEditUsageDataList
	}
	return nil
}

func (x *DescribeVodSpaceEditStatisDataResult) GetEditUsageDataDetailList() []*DescribeVodSpaceEditStatisDataDetail {
	if x != nil {
		return x.EditUsageDataDetailList
	}
	return nil
}

// 查询视频播放信息
type DescribeVodPlayedStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid        string  `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Size       int64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Duration   float64 `protobuf:"fixed64,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
	CreateTime string  `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	PlayCount  int64   `protobuf:"varint,6,opt,name=PlayCount,proto3" json:"PlayCount,omitempty"`
	Traffic    int64   `protobuf:"varint,7,opt,name=Traffic,proto3" json:"Traffic,omitempty"`
}

func (x *DescribeVodPlayedStatisDataItem) Reset() {
	*x = DescribeVodPlayedStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayedStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayedStatisDataItem) ProtoMessage() {}

func (x *DescribeVodPlayedStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayedStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayedStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{32}
}

func (x *DescribeVodPlayedStatisDataItem) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DescribeVodPlayedStatisDataItem) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DescribeVodPlayedStatisDataItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataItem) GetPlayCount() int64 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *DescribeVodPlayedStatisDataItem) GetTraffic() int64 {
	if x != nil {
		return x.Traffic
	}
	return 0
}

type DescribeVodPlayedStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space         string                             `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`         // 空间
	StartTime     string                             `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime       string                             `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	VidList       []string                           `protobuf:"bytes,4,rep,name=VidList,proto3" json:"VidList,omitempty"`     // 查询的Vid列表，多个Vid用逗号分割
	OrderType     string                             `protobuf:"bytes,5,opt,name=OrderType,proto3" json:"OrderType,omitempty"` // 排序类型
	PlayStatInfos []*DescribeVodPlayedStatisDataItem `protobuf:"bytes,6,rep,name=PlayStatInfos,proto3" json:"PlayStatInfos,omitempty"`
}

func (x *DescribeVodPlayedStatisDataResult) Reset() {
	*x = DescribeVodPlayedStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodPlayedStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodPlayedStatisDataResult) ProtoMessage() {}

func (x *DescribeVodPlayedStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodPlayedStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodPlayedStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{33}
}

func (x *DescribeVodPlayedStatisDataResult) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataResult) GetVidList() []string {
	if x != nil {
		return x.VidList
	}
	return nil
}

func (x *DescribeVodPlayedStatisDataResult) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *DescribeVodPlayedStatisDataResult) GetPlayStatInfos() []*DescribeVodPlayedStatisDataItem {
	if x != nil {
		return x.PlayStatInfos
	}
	return nil
}

// 查询播放 TopN 的视频
type DescribeVodMostPlayedStatisDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid        string  `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Size       int64   `protobuf:"varint,3,opt,name=Size,proto3" json:"Size,omitempty"`
	Duration   float64 `protobuf:"fixed64,4,opt,name=Duration,proto3" json:"Duration,omitempty"`
	CreateTime string  `protobuf:"bytes,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	PlayCount  int64   `protobuf:"varint,6,opt,name=PlayCount,proto3" json:"PlayCount,omitempty"`
	Traffic    int64   `protobuf:"varint,7,opt,name=Traffic,proto3" json:"Traffic,omitempty"`
}

func (x *DescribeVodMostPlayedStatisDataItem) Reset() {
	*x = DescribeVodMostPlayedStatisDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodMostPlayedStatisDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodMostPlayedStatisDataItem) ProtoMessage() {}

func (x *DescribeVodMostPlayedStatisDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodMostPlayedStatisDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodMostPlayedStatisDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{34}
}

func (x *DescribeVodMostPlayedStatisDataItem) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DescribeVodMostPlayedStatisDataItem) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DescribeVodMostPlayedStatisDataItem) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataItem) GetPlayCount() int64 {
	if x != nil {
		return x.PlayCount
	}
	return 0
}

func (x *DescribeVodMostPlayedStatisDataItem) GetTraffic() int64 {
	if x != nil {
		return x.Traffic
	}
	return 0
}

type DescribeVodMostPlayedStatisDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space         string                                 `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`         // 空间
	StartTime     string                                 `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime       string                                 `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	OrderType     string                                 `protobuf:"bytes,4,opt,name=OrderType,proto3" json:"OrderType,omitempty"` // 排序类型
	TopN          int64                                  `protobuf:"varint,5,opt,name=TopN,proto3" json:"TopN,omitempty"`          // 返回视频的个数。默认值为 100。最大为 100。
	PlayStatInfos []*DescribeVodMostPlayedStatisDataItem `protobuf:"bytes,6,rep,name=PlayStatInfos,proto3" json:"PlayStatInfos,omitempty"`
}

func (x *DescribeVodMostPlayedStatisDataResult) Reset() {
	*x = DescribeVodMostPlayedStatisDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodMostPlayedStatisDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodMostPlayedStatisDataResult) ProtoMessage() {}

func (x *DescribeVodMostPlayedStatisDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodMostPlayedStatisDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodMostPlayedStatisDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{35}
}

func (x *DescribeVodMostPlayedStatisDataResult) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataResult) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *DescribeVodMostPlayedStatisDataResult) GetTopN() int64 {
	if x != nil {
		return x.TopN
	}
	return 0
}

func (x *DescribeVodMostPlayedStatisDataResult) GetPlayStatInfos() []*DescribeVodMostPlayedStatisDataItem {
	if x != nil {
		return x.PlayStatInfos
	}
	return nil
}

// 点播实时处理用量
type DescribeVodRealtimeMediaDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time  string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
	Count int64  `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *DescribeVodRealtimeMediaDataItem) Reset() {
	*x = DescribeVodRealtimeMediaDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDataItem) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{36}
}

func (x *DescribeVodRealtimeMediaDataItem) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDataItem) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DescribeVodRealtimeMediaDataDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Space                 string                              `protobuf:"bytes,1,opt,name=Space,proto3" json:"Space,omitempty"`
	Total                 int64                               `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	RealtimeMediaDataList []*DescribeVodRealtimeMediaDataItem `protobuf:"bytes,3,rep,name=RealtimeMediaDataList,proto3" json:"RealtimeMediaDataList,omitempty"`
}

func (x *DescribeVodRealtimeMediaDataDetail) Reset() {
	*x = DescribeVodRealtimeMediaDataDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDataDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDataDetail) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDataDetail) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDataDetail.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDataDetail) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{37}
}

func (x *DescribeVodRealtimeMediaDataDetail) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDataDetail) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDataDetail) GetRealtimeMediaDataList() []*DescribeVodRealtimeMediaDataItem {
	if x != nil {
		return x.RealtimeMediaDataList
	}
	return nil
}

type DescribeVodRealtimeMediaDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList                   []string                              `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"`             // 空间列表
	StartTime                   string                                `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`             // 查询的起始时间, rfc3339
	EndTime                     string                                `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`                 // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	ProcessType                 string                                `protobuf:"bytes,4,opt,name=ProcessType,proto3" json:"ProcessType,omitempty"`         // 实时处理类型。默认为全选。Snapshot（实时截图）、Metadata（实时获取音视频信息）
	Aggregation                 int64                                 `protobuf:"varint,5,opt,name=Aggregation,proto3" json:"Aggregation,omitempty"`        //聚合的时间粒度，单位秒，默认3600，支持3600和86400
	DetailFieldList             []string                              `protobuf:"bytes,6,rep,name=DetailFieldList,proto3" json:"DetailFieldList,omitempty"` // 展示详细信息的维度，取值：Space
	TotalRealtimeMediaData      int64                                 `protobuf:"varint,7,opt,name=TotalRealtimeMediaData,proto3" json:"TotalRealtimeMediaData,omitempty"`
	RealtimeMediaDataList       []*DescribeVodRealtimeMediaDataItem   `protobuf:"bytes,8,rep,name=RealtimeMediaDataList,proto3" json:"RealtimeMediaDataList,omitempty"`
	RealtimeMediaDetailDataList []*DescribeVodRealtimeMediaDataDetail `protobuf:"bytes,9,rep,name=RealtimeMediaDetailDataList,proto3" json:"RealtimeMediaDetailDataList,omitempty"`
}

func (x *DescribeVodRealtimeMediaDataResult) Reset() {
	*x = DescribeVodRealtimeMediaDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDataResult) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{38}
}

func (x *DescribeVodRealtimeMediaDataResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDataResult) GetProcessType() string {
	if x != nil {
		return x.ProcessType
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDataResult) GetAggregation() int64 {
	if x != nil {
		return x.Aggregation
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDataResult) GetDetailFieldList() []string {
	if x != nil {
		return x.DetailFieldList
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDataResult) GetTotalRealtimeMediaData() int64 {
	if x != nil {
		return x.TotalRealtimeMediaData
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDataResult) GetRealtimeMediaDataList() []*DescribeVodRealtimeMediaDataItem {
	if x != nil {
		return x.RealtimeMediaDataList
	}
	return nil
}

func (x *DescribeVodRealtimeMediaDataResult) GetRealtimeMediaDetailDataList() []*DescribeVodRealtimeMediaDataDetail {
	if x != nil {
		return x.RealtimeMediaDetailDataList
	}
	return nil
}

// 点播实时处理明细数据
type DescribeVodRealtimeMediaDetailDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId      string `protobuf:"bytes,1,opt,name=TraceId,proto3" json:"TraceId,omitempty"`
	StartTime    string `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	EndTime      string `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	FileName     string `protobuf:"bytes,4,opt,name=FileName,proto3" json:"FileName,omitempty"`
	Command      string `protobuf:"bytes,5,opt,name=Command,proto3" json:"Command,omitempty"`
	ResponseCode string `protobuf:"bytes,6,opt,name=ResponseCode,proto3" json:"ResponseCode,omitempty"`
}

func (x *DescribeVodRealtimeMediaDetailDataItem) Reset() {
	*x = DescribeVodRealtimeMediaDetailDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDetailDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDetailDataItem) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDetailDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDetailDataItem.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDetailDataItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{39}
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataItem) GetResponseCode() string {
	if x != nil {
		return x.ResponseCode
	}
	return ""
}

type DescribeVodRealtimeMediaDetailDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region                  string                                    `protobuf:"bytes,1,opt,name=Region,proto3" json:"Region,omitempty"`       //地区，如：cn-north-1
	Space                   string                                    `protobuf:"bytes,2,opt,name=Space,proto3" json:"Space,omitempty"`         // 空间
	StartTime               string                                    `protobuf:"bytes,3,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime                 string                                    `protobuf:"bytes,4,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；起止时间间隔不超过1天
	PageSize                int64                                     `protobuf:"varint,5,opt,name=PageSize,proto3" json:"PageSize,omitempty"`  // 分页查询的页大小，默认100
	PageNum                 int64                                     `protobuf:"varint,6,opt,name=PageNum,proto3" json:"PageNum,omitempty"`    // 分页查询的页号，默认1
	Total                   int64                                     `protobuf:"varint,7,opt,name=Total,proto3" json:"Total,omitempty"`        // 数据总条数
	RealtimeMediaDetailData []*DescribeVodRealtimeMediaDetailDataItem `protobuf:"bytes,8,rep,name=RealtimeMediaDetailData,proto3" json:"RealtimeMediaDetailData,omitempty"`
}

func (x *DescribeVodRealtimeMediaDetailDataResult) Reset() {
	*x = DescribeVodRealtimeMediaDetailDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodRealtimeMediaDetailDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodRealtimeMediaDetailDataResult) ProtoMessage() {}

func (x *DescribeVodRealtimeMediaDetailDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodRealtimeMediaDetailDataResult.ProtoReflect.Descriptor instead.
func (*DescribeVodRealtimeMediaDetailDataResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{40}
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DescribeVodRealtimeMediaDetailDataResult) GetRealtimeMediaDetailData() []*DescribeVodRealtimeMediaDetailDataItem {
	if x != nil {
		return x.RealtimeMediaDetailData
	}
	return nil
}

// 文件vid粒度统计数据（分空间）下载地址接口
type DescribeVodVidTrafficFileLogItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date        string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Space       string `protobuf:"bytes,2,opt,name=Space,proto3" json:"Space,omitempty"`
	DownloadUrl string `protobuf:"bytes,3,opt,name=DownloadUrl,proto3" json:"DownloadUrl,omitempty"`
}

func (x *DescribeVodVidTrafficFileLogItem) Reset() {
	*x = DescribeVodVidTrafficFileLogItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodVidTrafficFileLogItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodVidTrafficFileLogItem) ProtoMessage() {}

func (x *DescribeVodVidTrafficFileLogItem) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodVidTrafficFileLogItem.ProtoReflect.Descriptor instead.
func (*DescribeVodVidTrafficFileLogItem) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{41}
}

func (x *DescribeVodVidTrafficFileLogItem) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DescribeVodVidTrafficFileLogItem) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *DescribeVodVidTrafficFileLogItem) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

type DescribeVodVidTrafficFileLogResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceList []string                            `protobuf:"bytes,1,rep,name=SpaceList,proto3" json:"SpaceList,omitempty"` // 空间列表
	StartTime string                              `protobuf:"bytes,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"` // 查询的起始时间, rfc3339
	EndTime   string                              `protobuf:"bytes,3,opt,name=EndTime,proto3" json:"EndTime,omitempty"`     // 查询的结束时间, rfc3339；查询时间跨度不超过93天
	FileList  []*DescribeVodVidTrafficFileLogItem `protobuf:"bytes,4,rep,name=FileList,proto3" json:"FileList,omitempty"`
}

func (x *DescribeVodVidTrafficFileLogResult) Reset() {
	*x = DescribeVodVidTrafficFileLogResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeVodVidTrafficFileLogResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeVodVidTrafficFileLogResult) ProtoMessage() {}

func (x *DescribeVodVidTrafficFileLogResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_measure_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeVodVidTrafficFileLogResult.ProtoReflect.Descriptor instead.
func (*DescribeVodVidTrafficFileLogResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_measure_proto_rawDescGZIP(), []int{42}
}

func (x *DescribeVodVidTrafficFileLogResult) GetSpaceList() []string {
	if x != nil {
		return x.SpaceList
	}
	return nil
}

func (x *DescribeVodVidTrafficFileLogResult) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DescribeVodVidTrafficFileLogResult) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DescribeVodVidTrafficFileLogResult) GetFileList() []*DescribeVodVidTrafficFileLogItem {
	if x != nil {
		return x.FileList
	}
	return nil
}

var File_volcengine_vod_business_vod_measure_proto protoreflect.FileDescriptor

var file_volcengine_vod_business_vod_measure_proto_rawDesc = []byte{
	0x0a, 0x29, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x49, 0x0a, 0x1d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x25, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x56, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xe2, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x75, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x56, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xfb, 0x04, 0x0a, 0x23, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x75, 0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x17, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x17, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x6a, 0x0a, 0x0f, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f,
	0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xc0, 0x04, 0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x69, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x41, 0x69, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x6a, 0x0a, 0x0f,
	0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x41, 0x69, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x78, 0x0a, 0x15, 0x41, 0x69, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x41, 0x49, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x15, 0x41, 0x69, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x52, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x28, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x7c, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xf9, 0x04, 0x0a, 0x28, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x7c, 0x0a, 0x15, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x53,
	0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x8a, 0x01, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x1b, 0x53, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x50, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe3, 0x04, 0x0a, 0x26, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54,
	0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x76, 0x0a, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x13, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x19, 0x44, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x19, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x47, 0x0a, 0x1b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x1d, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb9,
	0x04, 0x0a, 0x1d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x11,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67, 0x0a, 0x10, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x16, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x16, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb9, 0x02, 0x0a, 0x25, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x6d, 0x75, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x65, 0x6d, 0x75, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x88, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x49,
	0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x22, 0x8f, 0x01, 0x0a, 0x27, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x6e,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x23, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x73, 0x4c, 0x6f, 0x77, 0x50, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x49, 0x73, 0x4c, 0x6f,
	0x77, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x87, 0x05, 0x0a, 0x1e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x52, 0x75, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x75, 0x6e,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x56, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x45, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x68, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x71, 0x0a, 0x0f, 0x45, 0x6e, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x6e, 0x68, 0x61,
	0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x45, 0x6e, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x78, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x65, 0x0a, 0x0b,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x41, 0x49, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x49, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xcc, 0x02, 0x0a, 0x28, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x6e, 0x0a, 0x12, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x12,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x56,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x56, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x64,
	0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x64, 0x65, 0x63, 0x12,
	0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbc, 0x02, 0x0a, 0x24,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x62, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0e, 0x45, 0x64, 0x69, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x22, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xde,
	0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x5e, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c,
	0x61, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xb3, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x45,
	0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x52, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x53, 0x52, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x46, 0x49, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x56, 0x46, 0x49, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x44, 0x52,
	0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x53,
	0x44, 0x52, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x44, 0x52,
	0x32, 0x48, 0x44, 0x52, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x53, 0x44, 0x52, 0x32,
	0x48, 0x44, 0x52, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44, 0x65, 0x6e, 0x6f,
	0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x44,
	0x65, 0x6e, 0x6f, 0x73, 0x65, 0x22, 0xa6, 0x03, 0x0a, 0x21, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x14, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x6b, 0x0a, 0x10, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x10, 0x45, 0x6e,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x54,
	0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xae, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x56, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x70, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x11, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x24, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x56, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x11, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xba, 0x04, 0x0a, 0x24, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45,
	0x64, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x64,
	0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x7a, 0x0a, 0x16, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x16, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x45, 0x64, 0x69, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x17,
	0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1f, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x56,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x22, 0x90, 0x02, 0x0a, 0x21, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x56, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x50,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0xd3, 0x01, 0x0a,
	0x23, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x4d, 0x6f, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c,
	0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x22, 0x92, 0x02, 0x0a, 0x25, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x6f, 0x70, 0x4e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x6f, 0x70, 0x4e, 0x12, 0x69, 0x0a, 0x0d,
	0x50, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x4d, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4c, 0x0a, 0x20, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xc8, 0x01, 0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x76, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x52, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x9f, 0x04, 0x0a, 0x22, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x76, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x15, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x84, 0x01, 0x0a, 0x1b,
	0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x42, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x1b, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x26, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56,
	0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a,
	0x07, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x28, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d,
	0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x80, 0x01, 0x0a, 0x17, 0x52, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x17, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69,
	0x61, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x20, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x56, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xd8, 0x01, 0x0a, 0x22,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x56, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x56, 0x6f, 0x64, 0x56, 0x69, 0x64, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0xcb, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x42, 0x0a, 0x56, 0x6f, 0x64, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73,
	0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xca, 0x02, 0x20, 0x56, 0x6f,
	0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02,
	0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f,
	0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_volcengine_vod_business_vod_measure_proto_rawDescOnce sync.Once
	file_volcengine_vod_business_vod_measure_proto_rawDescData = file_volcengine_vod_business_vod_measure_proto_rawDesc
)

func file_volcengine_vod_business_vod_measure_proto_rawDescGZIP() []byte {
	file_volcengine_vod_business_vod_measure_proto_rawDescOnce.Do(func() {
		file_volcengine_vod_business_vod_measure_proto_rawDescData = protoimpl.X.CompressGZIP(file_volcengine_vod_business_vod_measure_proto_rawDescData)
	})
	return file_volcengine_vod_business_vod_measure_proto_rawDescData
}

var file_volcengine_vod_business_vod_measure_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_volcengine_vod_business_vod_measure_proto_goTypes = []interface{}{
	(*DescribeVodSpaceTranscodeItem)(nil),            // 0: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	(*DescribeVodSpaceTranscodeDetailTVUnit)(nil),    // 1: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit
	(*DescribeVodSpaceTranscodeDetail)(nil),          // 2: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail
	(*DescribeVodSpaceTranscodeDataResult)(nil),      // 3: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult
	(*DescribeVodSpaceAIStatisDataItem)(nil),         // 4: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	(*DescribeVodSpaceAIStatisDataDetail)(nil),       // 5: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail
	(*DescribeVodSpaceAIStatisDataResult)(nil),       // 6: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult
	(*DescribeVodSpaceSubtitleStatisDataItem)(nil),   // 7: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	(*DescribeVodSpaceSubtitleStatisDataDetail)(nil), // 8: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail
	(*DescribeVodSpaceSubtitleStatisDataResult)(nil), // 9: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult
	(*DescribeVodSpaceDetectStatisDataItem)(nil),     // 10: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	(*DescribeVodSpaceDetectStatisDataDetail)(nil),   // 11: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail
	(*DescribeVodSpaceDetectStatisDataResult)(nil),   // 12: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult
	(*DescribeVodSnapshotDataItem)(nil),              // 13: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	(*DescribeVodSnapshotDataDetail)(nil),            // 14: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail
	(*DescribeVodSnapshotDataResult)(nil),            // 15: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult
	(*DescribeVodSpaceWorkflowTranscodeInfo)(nil),    // 16: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowTranscodeInfo
	(*DescribeVodSpaceWorkflowSnapshotInfo)(nil),     // 17: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowSnapshotInfo
	(*DescribeVodSpaceWorkflowEnhanceExecInfo)(nil),  // 18: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowEnhanceExecInfo
	(*DescribeVodSpaceWorkflowVideoAIInfo)(nil),      // 19: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowVideoAIInfo
	(*DescribeVodSpaceWorkflowDetail)(nil),           // 20: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail
	(*DescribeVodSpaceWorkflowDetailDataResult)(nil), // 21: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult
	(*DescribeVodSpaceEditDetail)(nil),               // 22: Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetail
	(*DescribeVodSpaceEditDetailDataResult)(nil),     // 23: Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult
	(*DescribeVodPlayFileLogByDomainItem)(nil),       // 24: Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainItem
	(*DescribeVodPlayFileLogByDomainResult)(nil),     // 25: Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult
	(*DescribeVodEnhanceImageDataItem)(nil),          // 26: Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataItem
	(*DescribeVodEnhanceImageDataResult)(nil),        // 27: Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataResult
	(*DescribeVodSpaceEditStatisDataItem)(nil),       // 28: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataItem
	(*DescribeVodSpaceEditStatisDetailTVUnit)(nil),   // 29: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDetailTVUnit
	(*DescribeVodSpaceEditStatisDataDetail)(nil),     // 30: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataDetail
	(*DescribeVodSpaceEditStatisDataResult)(nil),     // 31: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataResult
	(*DescribeVodPlayedStatisDataItem)(nil),          // 32: Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataItem
	(*DescribeVodPlayedStatisDataResult)(nil),        // 33: Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataResult
	(*DescribeVodMostPlayedStatisDataItem)(nil),      // 34: Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataItem
	(*DescribeVodMostPlayedStatisDataResult)(nil),    // 35: Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult
	(*DescribeVodRealtimeMediaDataItem)(nil),         // 36: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataItem
	(*DescribeVodRealtimeMediaDataDetail)(nil),       // 37: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataDetail
	(*DescribeVodRealtimeMediaDataResult)(nil),       // 38: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataResult
	(*DescribeVodRealtimeMediaDetailDataItem)(nil),   // 39: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataItem
	(*DescribeVodRealtimeMediaDetailDataResult)(nil), // 40: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataResult
	(*DescribeVodVidTrafficFileLogItem)(nil),         // 41: Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogItem
	(*DescribeVodVidTrafficFileLogResult)(nil),       // 42: Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogResult
}
var file_volcengine_vod_business_vod_measure_proto_depIdxs = []int32{
	0,  // 0: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit.TranscodeItemList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	1,  // 1: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail.TranscodeUsageList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetailTVUnit
	0,  // 2: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult.TotalTranscodeDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeItem
	2,  // 3: Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDataResult.TranscodeDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceTranscodeDetail
	4,  // 4: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail.AiUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	4,  // 5: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult.AiUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataItem
	5,  // 6: Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataResult.AiUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceAIStatisDataDetail
	7,  // 7: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail.SubtitleUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	7,  // 8: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult.SubtitleUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataItem
	8,  // 9: Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataResult.SubtitleUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceSubtitleStatisDataDetail
	10, // 10: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail.DetectUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	10, // 11: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult.DetectUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataItem
	11, // 12: Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataResult.DetectUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceDetectStatisDataDetail
	13, // 13: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail.SnapshotDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	13, // 14: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult.SnapshotDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataItem
	14, // 15: Volcengine.Vod.Models.Business.DescribeVodSnapshotDataResult.SnapshotDetailDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSnapshotDataDetail
	16, // 16: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail.TranscodeInfo:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowTranscodeInfo
	17, // 17: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail.SnapshotInfo:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowSnapshotInfo
	18, // 18: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail.EnhanceExecInfo:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowEnhanceExecInfo
	19, // 19: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail.VideoAIInfo:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowVideoAIInfo
	20, // 20: Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetailDataResult.WorkflowDetailData:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceWorkflowDetail
	22, // 21: Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetailDataResult.EditDetailData:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditDetail
	24, // 22: Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainResult.FileList:type_name -> Volcengine.Vod.Models.Business.DescribeVodPlayFileLogByDomainItem
	26, // 23: Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataResult.EnhanceImageList:type_name -> Volcengine.Vod.Models.Business.DescribeVodEnhanceImageDataItem
	28, // 24: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDetailTVUnit.EditUsageItemList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataItem
	29, // 25: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataDetail.EditUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDetailTVUnit
	28, // 26: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataResult.TotalEditUsageDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataItem
	30, // 27: Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataResult.EditUsageDataDetailList:type_name -> Volcengine.Vod.Models.Business.DescribeVodSpaceEditStatisDataDetail
	32, // 28: Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataResult.PlayStatInfos:type_name -> Volcengine.Vod.Models.Business.DescribeVodPlayedStatisDataItem
	34, // 29: Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataResult.PlayStatInfos:type_name -> Volcengine.Vod.Models.Business.DescribeVodMostPlayedStatisDataItem
	36, // 30: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataDetail.RealtimeMediaDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataItem
	36, // 31: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataResult.RealtimeMediaDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataItem
	37, // 32: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataResult.RealtimeMediaDetailDataList:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDataDetail
	39, // 33: Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataResult.RealtimeMediaDetailData:type_name -> Volcengine.Vod.Models.Business.DescribeVodRealtimeMediaDetailDataItem
	41, // 34: Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogResult.FileList:type_name -> Volcengine.Vod.Models.Business.DescribeVodVidTrafficFileLogItem
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_volcengine_vod_business_vod_measure_proto_init() }
func file_volcengine_vod_business_vod_measure_proto_init() {
	if File_volcengine_vod_business_vod_measure_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_volcengine_vod_business_vod_measure_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDetailTVUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceTranscodeDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceAIStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceSubtitleStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceDetectStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSnapshotDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowTranscodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowSnapshotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowEnhanceExecInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowVideoAIInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceWorkflowDetailDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditDetailDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayFileLogByDomainItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayFileLogByDomainResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodEnhanceImageDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodEnhanceImageDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditStatisDetailTVUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditStatisDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodSpaceEditStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayedStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodPlayedStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodMostPlayedStatisDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodMostPlayedStatisDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDataDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDetailDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodRealtimeMediaDetailDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodVidTrafficFileLogItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_measure_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeVodVidTrafficFileLogResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_volcengine_vod_business_vod_measure_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volcengine_vod_business_vod_measure_proto_goTypes,
		DependencyIndexes: file_volcengine_vod_business_vod_measure_proto_depIdxs,
		MessageInfos:      file_volcengine_vod_business_vod_measure_proto_msgTypes,
	}.Build()
	File_volcengine_vod_business_vod_measure_proto = out.File
	file_volcengine_vod_business_vod_measure_proto_rawDesc = nil
	file_volcengine_vod_business_vod_measure_proto_goTypes = nil
	file_volcengine_vod_business_vod_measure_proto_depIdxs = nil
}
