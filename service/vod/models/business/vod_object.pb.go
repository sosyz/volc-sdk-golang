// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: volcengine/vod/business/vod_object.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VodSubmitBlockObjectTasksResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation        string            `protobuf:"bytes,1,opt,name=Operation,proto3" json:"Operation,omitempty"` //封禁或解封 forbid/recover
	OperateFileNames *OperateFileNames `protobuf:"bytes,2,opt,name=OperateFileNames,proto3" json:"OperateFileNames,omitempty"`
}

func (x *VodSubmitBlockObjectTasksResult) Reset() {
	*x = VodSubmitBlockObjectTasksResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodSubmitBlockObjectTasksResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodSubmitBlockObjectTasksResult) ProtoMessage() {}

func (x *VodSubmitBlockObjectTasksResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodSubmitBlockObjectTasksResult.ProtoReflect.Descriptor instead.
func (*VodSubmitBlockObjectTasksResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{0}
}

func (x *VodSubmitBlockObjectTasksResult) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *VodSubmitBlockObjectTasksResult) GetOperateFileNames() *OperateFileNames {
	if x != nil {
		return x.OperateFileNames
	}
	return nil
}

type OperateFileNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessFileNames []*FileNameTaskInfo `protobuf:"bytes,1,rep,name=SuccessFileNames,proto3" json:"SuccessFileNames,omitempty"` //成功任务列表
	FailedFileNames  []*FileNameTaskInfo `protobuf:"bytes,2,rep,name=FailedFileNames,proto3" json:"FailedFileNames,omitempty"`   //失败任务列表
}

func (x *OperateFileNames) Reset() {
	*x = OperateFileNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateFileNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateFileNames) ProtoMessage() {}

func (x *OperateFileNames) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateFileNames.ProtoReflect.Descriptor instead.
func (*OperateFileNames) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{1}
}

func (x *OperateFileNames) GetSuccessFileNames() []*FileNameTaskInfo {
	if x != nil {
		return x.SuccessFileNames
	}
	return nil
}

func (x *OperateFileNames) GetFailedFileNames() []*FileNameTaskInfo {
	if x != nil {
		return x.FailedFileNames
	}
	return nil
}

type FileNameTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3" json:"FileName,omitempty"` //对应的FileName
	Message  string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`   //失败信息 成功时为""
	TaskId   string `protobuf:"bytes,3,opt,name=TaskId,proto3" json:"TaskId,omitempty"`     //成功的任务Id 失败时为""
}

func (x *FileNameTaskInfo) Reset() {
	*x = FileNameTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileNameTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileNameTaskInfo) ProtoMessage() {}

func (x *FileNameTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileNameTaskInfo.ProtoReflect.Descriptor instead.
func (*FileNameTaskInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{2}
}

func (x *FileNameTaskInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileNameTaskInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FileNameTaskInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type VodListBlockObjectTasksResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectBlockTaskInfos []*ObjectBlockTaskInfo `protobuf:"bytes,1,rep,name=ObjectBlockTaskInfos,proto3" json:"ObjectBlockTaskInfos,omitempty"` // object封禁/解封任务信息
}

func (x *VodListBlockObjectTasksResult) Reset() {
	*x = VodListBlockObjectTasksResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodListBlockObjectTasksResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodListBlockObjectTasksResult) ProtoMessage() {}

func (x *VodListBlockObjectTasksResult) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodListBlockObjectTasksResult.ProtoReflect.Descriptor instead.
func (*VodListBlockObjectTasksResult) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{3}
}

func (x *VodListBlockObjectTasksResult) GetObjectBlockTaskInfos() []*ObjectBlockTaskInfo {
	if x != nil {
		return x.ObjectBlockTaskInfos
	}
	return nil
}

type ObjectBlockTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 封禁状态 代表原站是否完成封禁
	// - forbid 封禁完成
	// - recover 已解封
	// - configuring 配置中
	Status   string `protobuf:"bytes,1,opt,name=Status,proto3" json:"Status,omitempty"`
	TaskId   string `protobuf:"bytes,2,opt,name=TaskId,proto3" json:"TaskId,omitempty"` //任务Id
	FileName string `protobuf:"bytes,3,opt,name=FileName,proto3" json:"FileName,omitempty"`
	// 刷新Cdn状态
	// - complete 可能部分成功
	// - running 刷新中
	// - waiting 原站封禁中 还未刷新
	// - notRequired 不需要刷新
	RefreshStatus string `protobuf:"bytes,4,opt,name=RefreshStatus,proto3" json:"RefreshStatus,omitempty"`
	// 封禁状态 代表任务的类型
	// - forbid 封禁完成
	// - recover 已解封
	Operation     string         `protobuf:"bytes,5,opt,name=Operation,proto3" json:"Operation,omitempty"`
	RefreshTaskId string         `protobuf:"bytes,6,opt,name=RefreshTaskId,proto3" json:"RefreshTaskId,omitempty"` //刷新任务Id
	RefreshInfos  []*RefreshInfo `protobuf:"bytes,7,rep,name=RefreshInfos,proto3" json:"RefreshInfos,omitempty"`
}

func (x *ObjectBlockTaskInfo) Reset() {
	*x = ObjectBlockTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectBlockTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectBlockTaskInfo) ProtoMessage() {}

func (x *ObjectBlockTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectBlockTaskInfo.ProtoReflect.Descriptor instead.
func (*ObjectBlockTaskInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{4}
}

func (x *ObjectBlockTaskInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetRefreshStatus() string {
	if x != nil {
		return x.RefreshStatus
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetRefreshTaskId() string {
	if x != nil {
		return x.RefreshTaskId
	}
	return ""
}

func (x *ObjectBlockTaskInfo) GetRefreshInfos() []*RefreshInfo {
	if x != nil {
		return x.RefreshInfos
	}
	return nil
}

type RefreshInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=Url,proto3" json:"Url,omitempty"` //刷新的url
	// 表示任务的状态。该参数有以下取值：
	// complete：表示任务已完成。
	// running：表示任务正在执行中。
	// failed：表示任务执行失败。
	Status string `protobuf:"bytes,2,opt,name=Status,proto3" json:"Status,omitempty"` //
	// 表示任务的进度。比如70%
	Process string `protobuf:"bytes,3,opt,name=Process,proto3" json:"Process,omitempty"`
}

func (x *RefreshInfo) Reset() {
	*x = RefreshInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshInfo) ProtoMessage() {}

func (x *RefreshInfo) ProtoReflect() protoreflect.Message {
	mi := &file_volcengine_vod_business_vod_object_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshInfo.ProtoReflect.Descriptor instead.
func (*RefreshInfo) Descriptor() ([]byte, []int) {
	return file_volcengine_vod_business_vod_object_proto_rawDescGZIP(), []int{5}
}

func (x *RefreshInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RefreshInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RefreshInfo) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

var File_volcengine_vod_business_vod_object_proto protoreflect.FileDescriptor

var file_volcengine_vod_business_vod_object_proto_rawDesc = []byte{
	0x0a, 0x28, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x64,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f, 0x64, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x1f, 0x56,
	0x6f, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x10,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x10, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x5c, 0x0a, 0x10, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x5a, 0x0a,
	0x0f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x1d,
	0x56, 0x6f, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x67, 0x0a,
	0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f,
	0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x14, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x9c, 0x02, 0x0a, 0x13, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x51, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x42, 0xcd, 0x01, 0x0a, 0x29, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x09, 0x56, 0x6f, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x2d,
	0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01, 0x01, 0xc2, 0x02, 0x00, 0xca,
	0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56,
	0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_volcengine_vod_business_vod_object_proto_rawDescOnce sync.Once
	file_volcengine_vod_business_vod_object_proto_rawDescData = file_volcengine_vod_business_vod_object_proto_rawDesc
)

func file_volcengine_vod_business_vod_object_proto_rawDescGZIP() []byte {
	file_volcengine_vod_business_vod_object_proto_rawDescOnce.Do(func() {
		file_volcengine_vod_business_vod_object_proto_rawDescData = protoimpl.X.CompressGZIP(file_volcengine_vod_business_vod_object_proto_rawDescData)
	})
	return file_volcengine_vod_business_vod_object_proto_rawDescData
}

var file_volcengine_vod_business_vod_object_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_volcengine_vod_business_vod_object_proto_goTypes = []interface{}{
	(*VodSubmitBlockObjectTasksResult)(nil), // 0: Volcengine.Vod.Models.Business.VodSubmitBlockObjectTasksResult
	(*OperateFileNames)(nil),                // 1: Volcengine.Vod.Models.Business.OperateFileNames
	(*FileNameTaskInfo)(nil),                // 2: Volcengine.Vod.Models.Business.FileNameTaskInfo
	(*VodListBlockObjectTasksResult)(nil),   // 3: Volcengine.Vod.Models.Business.VodListBlockObjectTasksResult
	(*ObjectBlockTaskInfo)(nil),             // 4: Volcengine.Vod.Models.Business.ObjectBlockTaskInfo
	(*RefreshInfo)(nil),                     // 5: Volcengine.Vod.Models.Business.RefreshInfo
}
var file_volcengine_vod_business_vod_object_proto_depIdxs = []int32{
	1, // 0: Volcengine.Vod.Models.Business.VodSubmitBlockObjectTasksResult.OperateFileNames:type_name -> Volcengine.Vod.Models.Business.OperateFileNames
	2, // 1: Volcengine.Vod.Models.Business.OperateFileNames.SuccessFileNames:type_name -> Volcengine.Vod.Models.Business.FileNameTaskInfo
	2, // 2: Volcengine.Vod.Models.Business.OperateFileNames.FailedFileNames:type_name -> Volcengine.Vod.Models.Business.FileNameTaskInfo
	4, // 3: Volcengine.Vod.Models.Business.VodListBlockObjectTasksResult.ObjectBlockTaskInfos:type_name -> Volcengine.Vod.Models.Business.ObjectBlockTaskInfo
	5, // 4: Volcengine.Vod.Models.Business.ObjectBlockTaskInfo.RefreshInfos:type_name -> Volcengine.Vod.Models.Business.RefreshInfo
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_volcengine_vod_business_vod_object_proto_init() }
func file_volcengine_vod_business_vod_object_proto_init() {
	if File_volcengine_vod_business_vod_object_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_volcengine_vod_business_vod_object_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodSubmitBlockObjectTasksResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_object_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateFileNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_object_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileNameTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_object_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodListBlockObjectTasksResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_object_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectBlockTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_volcengine_vod_business_vod_object_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_volcengine_vod_business_vod_object_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_volcengine_vod_business_vod_object_proto_goTypes,
		DependencyIndexes: file_volcengine_vod_business_vod_object_proto_depIdxs,
		MessageInfos:      file_volcengine_vod_business_vod_object_proto_msgTypes,
	}.Build()
	File_volcengine_vod_business_vod_object_proto = out.File
	file_volcengine_vod_business_vod_object_proto_rawDesc = nil
	file_volcengine_vod_business_vod_object_proto_goTypes = nil
	file_volcengine_vod_business_vod_object_proto_depIdxs = nil
}
