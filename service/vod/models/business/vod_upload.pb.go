// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: vod/business/vod_upload.proto

package business

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StorageClassType int32

const (
	StorageClassType_Default  StorageClassType = 0 // 默认值，目前默认为标准存储
	StorageClassType_Standard StorageClassType = 1 // 标准存储
	StorageClassType_Archive  StorageClassType = 2 // 归档存储
)

// Enum value maps for StorageClassType.
var (
	StorageClassType_name = map[int32]string{
		0: "Default",
		1: "Standard",
		2: "Archive",
	}
	StorageClassType_value = map[string]int32{
		"Default":  0,
		"Standard": 1,
		"Archive":  2,
	}
)

func (x StorageClassType) Enum() *StorageClassType {
	p := new(StorageClassType)
	*p = x
	return p
}

func (x StorageClassType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StorageClassType) Descriptor() protoreflect.EnumDescriptor {
	return file_vod_business_vod_upload_proto_enumTypes[0].Descriptor()
}

func (StorageClassType) Type() protoreflect.EnumType {
	return &file_vod_business_vod_upload_proto_enumTypes[0]
}

func (x StorageClassType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StorageClassType.Descriptor instead.
func (StorageClassType) EnumDescriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{0}
}

type VodUrlUploadURLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频的URL
	SourceUrl string `protobuf:"bytes,1,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
	// 透传的业务信息
	CallbackArgs string `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	// 视频的MD5
	Md5 string `protobuf:"bytes,3,opt,name=Md5,proto3" json:"Md5,omitempty"`
	// 模板Id
	TemplateId string `protobuf:"bytes,4,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
	// 标题
	Title string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	// 描述信息
	Description string `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	// 标签
	Tags string `protobuf:"bytes,7,opt,name=Tags,proto3" json:"Tags,omitempty"`
	// 分类
	Category string `protobuf:"bytes,8,opt,name=Category,proto3" json:"Category,omitempty"`
	// 设置文件名
	FileName string `protobuf:"bytes,9,opt,name=FileName,proto3" json:"FileName,omitempty"`
	// 设置分类Id
	ClassificationId int64 `protobuf:"varint,10,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"`
	// 设置存储类型
	StorageClass int32 `protobuf:"varint,11,opt,name=StorageClass,proto3" json:"StorageClass,omitempty"`
	// 设置文件后缀
	FileExtension string `protobuf:"bytes,12,opt,name=FileExtension,proto3" json:"FileExtension,omitempty"`
}

func (x *VodUrlUploadURLSet) Reset() {
	*x = VodUrlUploadURLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlUploadURLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlUploadURLSet) ProtoMessage() {}

func (x *VodUrlUploadURLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlUploadURLSet.ProtoReflect.Descriptor instead.
func (*VodUrlUploadURLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{0}
}

func (x *VodUrlUploadURLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *VodUrlUploadURLSet) GetClassificationId() int64 {
	if x != nil {
		return x.ClassificationId
	}
	return 0
}

func (x *VodUrlUploadURLSet) GetStorageClass() int32 {
	if x != nil {
		return x.StorageClass
	}
	return 0
}

func (x *VodUrlUploadURLSet) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

type VodUrlResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频的URL的键值对，包含 JobId 和对应的 SourceUrl
	Data []*ValuePair `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodUrlResponseData) Reset() {
	*x = VodUrlResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUrlResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUrlResponseData) ProtoMessage() {}

func (x *VodUrlResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUrlResponseData.ProtoReflect.Descriptor instead.
func (*VodUrlResponseData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{1}
}

func (x *VodUrlResponseData) GetData() []*ValuePair {
	if x != nil {
		return x.Data
	}
	return nil
}

type ValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Url对应的JobId
	JobId string `protobuf:"bytes,1,opt,name=JobId,proto3" json:"JobId,omitempty"`
	// 用户上传的Url
	SourceUrl string `protobuf:"bytes,2,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
}

func (x *ValuePair) Reset() {
	*x = ValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValuePair) ProtoMessage() {}

func (x *ValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValuePair.ProtoReflect.Descriptor instead.
func (*ValuePair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{2}
}

func (x *ValuePair) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ValuePair) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

type VodQueryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL批量上传状态查询结果
	Data *VodQueryUploadResult `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodQueryData) Reset() {
	*x = VodQueryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryData) ProtoMessage() {}

func (x *VodQueryData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryData.ProtoReflect.Descriptor instead.
func (*VodQueryData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{3}
}

func (x *VodQueryData) GetData() *VodQueryUploadResult {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodQueryUploadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL批量上传状态查询返回的 JobId 对应的信息
	MediaInfoList []*VodURLSet `protobuf:"bytes,1,rep,name=MediaInfoList,proto3" json:"MediaInfoList,omitempty"`
	// URL批量上传状态查询不存在的 JobId
	NotExistJobIds []string `protobuf:"bytes,2,rep,name=NotExistJobIds,proto3" json:"NotExistJobIds,omitempty"`
}

func (x *VodQueryUploadResult) Reset() {
	*x = VodQueryUploadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodQueryUploadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodQueryUploadResult) ProtoMessage() {}

func (x *VodQueryUploadResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodQueryUploadResult.ProtoReflect.Descriptor instead.
func (*VodQueryUploadResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{4}
}

func (x *VodQueryUploadResult) GetMediaInfoList() []*VodURLSet {
	if x != nil {
		return x.MediaInfoList
	}
	return nil
}

func (x *VodQueryUploadResult) GetNotExistJobIds() []string {
	if x != nil {
		return x.NotExistJobIds
	}
	return nil
}

type VodCommitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频信息上报结果
	Data *VodCommitUploadInfoResponseData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodCommitData) Reset() {
	*x = VodCommitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitData) ProtoMessage() {}

func (x *VodCommitData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitData.ProtoReflect.Descriptor instead.
func (*VodCommitData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{5}
}

func (x *VodCommitData) GetData() *VodCommitUploadInfoResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodCommitUploadInfoResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频的 id
	Vid string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	// 视频的元信息
	SourceInfo *VodSourceInfo `protobuf:"bytes,2,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	// 视频的封面图 URI
	PosterUri string `protobuf:"bytes,3,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	// 视频透传业务的参数
	CallbackArgs string `protobuf:"bytes,4,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	// 素材 id
	Mid string `protobuf:"bytes,5,opt,name=Mid,proto3" json:"Mid,omitempty"`
}

func (x *VodCommitUploadInfoResponseData) Reset() {
	*x = VodCommitUploadInfoResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResponseData) ProtoMessage() {}

func (x *VodCommitUploadInfoResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResponseData.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResponseData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{6}
}

func (x *VodCommitUploadInfoResponseData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *VodCommitUploadInfoResponseData) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodCommitUploadInfoResponseData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

type VodURLSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 请求 Id,用于日志查询
	RequestId string `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	// JobId，用于查询 URL 上传状态
	JobId string `protobuf:"bytes,2,opt,name=JobId,proto3" json:"JobId,omitempty"`
	// 用户上传的Url
	SourceUrl string `protobuf:"bytes,3,opt,name=SourceUrl,proto3" json:"SourceUrl,omitempty"`
	// Url 的上传状态，init,process,success,fail
	State string `protobuf:"bytes,4,opt,name=State,proto3" json:"State,omitempty"`
	// 视频 id
	Vid string `protobuf:"bytes,5,opt,name=Vid,proto3" json:"Vid,omitempty"`
	// 上传的空间
	SpaceName string `protobuf:"bytes,6,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	// 用户账号的 Id
	AccountId string `protobuf:"bytes,7,opt,name=AccountId,proto3" json:"AccountId,omitempty"`
	// 视频的元信息
	SourceInfo *VodSourceInfo `protobuf:"bytes,8,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
}

func (x *VodURLSet) Reset() {
	*x = VodURLSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodURLSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodURLSet) ProtoMessage() {}

func (x *VodURLSet) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodURLSet.ProtoReflect.Descriptor instead.
func (*VodURLSet) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{7}
}

func (x *VodURLSet) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *VodURLSet) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *VodURLSet) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *VodURLSet) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VodURLSet) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodURLSet) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodURLSet) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *VodURLSet) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

type VodApplyUploadInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1001 阶段返回信息
	Data *VodApplyUploadInfoData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodApplyUploadInfoResult) Reset() {
	*x = VodApplyUploadInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoResult) ProtoMessage() {}

func (x *VodApplyUploadInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoResult.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{8}
}

func (x *VodApplyUploadInfoResult) GetData() *VodApplyUploadInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodApplyUploadInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1001 阶段返回信息
	UploadAddress *VodUploadAddress `protobuf:"bytes,1,opt,name=UploadAddress,proto3" json:"UploadAddress,omitempty"`
}

func (x *VodApplyUploadInfoData) Reset() {
	*x = VodApplyUploadInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodApplyUploadInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodApplyUploadInfoData) ProtoMessage() {}

func (x *VodApplyUploadInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodApplyUploadInfoData.ProtoReflect.Descriptor instead.
func (*VodApplyUploadInfoData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{9}
}

func (x *VodApplyUploadInfoData) GetUploadAddress() *VodUploadAddress {
	if x != nil {
		return x.UploadAddress
	}
	return nil
}

type VodUploadAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1001 阶段返回指定存储相关信息
	StoreInfos []*VodStoreInfo `protobuf:"bytes,1,rep,name=StoreInfos,proto3" json:"StoreInfos,omitempty"`
	// 1001 阶段返回指定的上传域名
	UploadHosts []string `protobuf:"bytes,2,rep,name=UploadHosts,proto3" json:"UploadHosts,omitempty"`
	// 1001 阶段返回指定上传带的头信息
	UploadHeader []*VodHeaderPair `protobuf:"bytes,3,rep,name=UploadHeader,proto3" json:"UploadHeader,omitempty"`
	// 1001 阶段返回的 Session 信息
	SessionKey string `protobuf:"bytes,4,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
}

func (x *VodUploadAddress) Reset() {
	*x = VodUploadAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadAddress) ProtoMessage() {}

func (x *VodUploadAddress) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadAddress.ProtoReflect.Descriptor instead.
func (*VodUploadAddress) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{10}
}

func (x *VodUploadAddress) GetStoreInfos() []*VodStoreInfo {
	if x != nil {
		return x.StoreInfos
	}
	return nil
}

func (x *VodUploadAddress) GetUploadHosts() []string {
	if x != nil {
		return x.UploadHosts
	}
	return nil
}

func (x *VodUploadAddress) GetUploadHeader() []*VodHeaderPair {
	if x != nil {
		return x.UploadHeader
	}
	return nil
}

func (x *VodUploadAddress) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

type VodStoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1001 阶段返回存储的 uri
	StoreUri string `protobuf:"bytes,1,opt,name=StoreUri,proto3" json:"StoreUri,omitempty"`
	// 1001 阶段返回上传使用的签名信息
	Auth string `protobuf:"bytes,2,opt,name=Auth,proto3" json:"Auth,omitempty"`
}

func (x *VodStoreInfo) Reset() {
	*x = VodStoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodStoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodStoreInfo) ProtoMessage() {}

func (x *VodStoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodStoreInfo.ProtoReflect.Descriptor instead.
func (*VodStoreInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{11}
}

func (x *VodStoreInfo) GetStoreUri() string {
	if x != nil {
		return x.StoreUri
	}
	return ""
}

func (x *VodStoreInfo) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type VodHeaderPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1001 阶段返回信息，1002-1004 上传时需要带的 header 中的 key
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// 1001 阶段返回信息，1002-1004 上传时需要带的 header 中的 value
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *VodHeaderPair) Reset() {
	*x = VodHeaderPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodHeaderPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodHeaderPair) ProtoMessage() {}

func (x *VodHeaderPair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodHeaderPair.ProtoReflect.Descriptor instead.
func (*VodHeaderPair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{12}
}

func (x *VodHeaderPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *VodHeaderPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type VodCommitUploadInfoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 1005 阶段返回信息
	Data *VodCommitUploadInfoData `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *VodCommitUploadInfoResult) Reset() {
	*x = VodCommitUploadInfoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoResult) ProtoMessage() {}

func (x *VodCommitUploadInfoResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoResult.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{13}
}

func (x *VodCommitUploadInfoResult) GetData() *VodCommitUploadInfoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VodCommitUploadInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频 id
	Vid string `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	// 视频对应的封面图 URI id
	PosterUri string `protobuf:"bytes,2,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	// 视频元信息
	SourceInfo *VodSourceInfo `protobuf:"bytes,3,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	// 素材 id
	Mid string `protobuf:"bytes,4,opt,name=Mid,proto3" json:"Mid,omitempty"`
}

func (x *VodCommitUploadInfoData) Reset() {
	*x = VodCommitUploadInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodCommitUploadInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodCommitUploadInfoData) ProtoMessage() {}

func (x *VodCommitUploadInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodCommitUploadInfoData.ProtoReflect.Descriptor instead.
func (*VodCommitUploadInfoData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{14}
}

func (x *VodCommitUploadInfoData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodCommitUploadInfoData) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *VodCommitUploadInfoData) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *VodCommitUploadInfoData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

type VodUploadFunctionInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotTime     float64 `protobuf:"fixed64,1,opt,name=SnapshotTime,proto3" json:"SnapshotTime,omitempty"`
	Title            string  `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Tags             string  `protobuf:"bytes,3,opt,name=Tags,proto3" json:"Tags,omitempty"`
	Description      string  `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Category         string  `protobuf:"bytes,5,opt,name=Category,proto3" json:"Category,omitempty"`
	RecordType       int32   `protobuf:"varint,6,opt,name=RecordType,proto3" json:"RecordType,omitempty"`
	Format           string  `protobuf:"bytes,7,opt,name=Format,proto3" json:"Format,omitempty"`
	ClassificationId int32   `protobuf:"varint,8,opt,name=ClassificationId,proto3" json:"ClassificationId,omitempty"`
	TemplateId       string  `protobuf:"bytes,9,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
	Vid              string  `protobuf:"bytes,10,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Fid              string  `protobuf:"bytes,11,opt,name=Fid,proto3" json:"Fid,omitempty"`
	Language         string  `protobuf:"bytes,12,opt,name=Language,proto3" json:"Language,omitempty"`
	StoreUri         string  `protobuf:"bytes,13,opt,name=StoreUri,proto3" json:"StoreUri,omitempty"`
	Source           string  `protobuf:"bytes,14,opt,name=Source,proto3" json:"Source,omitempty"`
	Tag              string  `protobuf:"bytes,15,opt,name=Tag,proto3" json:"Tag,omitempty"`
	AutoPublish      bool    `protobuf:"varint,16,opt,name=AutoPublish,proto3" json:"AutoPublish,omitempty"`
	ActionType       string  `protobuf:"bytes,17,opt,name=ActionType,proto3" json:"ActionType,omitempty"`
}

func (x *VodUploadFunctionInput) Reset() {
	*x = VodUploadFunctionInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadFunctionInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadFunctionInput) ProtoMessage() {}

func (x *VodUploadFunctionInput) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadFunctionInput.ProtoReflect.Descriptor instead.
func (*VodUploadFunctionInput) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{15}
}

func (x *VodUploadFunctionInput) GetSnapshotTime() float64 {
	if x != nil {
		return x.SnapshotTime
	}
	return 0
}

func (x *VodUploadFunctionInput) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VodUploadFunctionInput) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *VodUploadFunctionInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VodUploadFunctionInput) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *VodUploadFunctionInput) GetRecordType() int32 {
	if x != nil {
		return x.RecordType
	}
	return 0
}

func (x *VodUploadFunctionInput) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *VodUploadFunctionInput) GetClassificationId() int32 {
	if x != nil {
		return x.ClassificationId
	}
	return 0
}

func (x *VodUploadFunctionInput) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *VodUploadFunctionInput) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUploadFunctionInput) GetFid() string {
	if x != nil {
		return x.Fid
	}
	return ""
}

func (x *VodUploadFunctionInput) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *VodUploadFunctionInput) GetStoreUri() string {
	if x != nil {
		return x.StoreUri
	}
	return ""
}

func (x *VodUploadFunctionInput) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *VodUploadFunctionInput) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *VodUploadFunctionInput) GetAutoPublish() bool {
	if x != nil {
		return x.AutoPublish
	}
	return false
}

func (x *VodUploadFunctionInput) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

type VodUploadFunction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                  `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Input *VodUploadFunctionInput `protobuf:"bytes,2,opt,name=Input,proto3" json:"Input,omitempty"`
}

func (x *VodUploadFunction) Reset() {
	*x = VodUploadFunction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadFunction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadFunction) ProtoMessage() {}

func (x *VodUploadFunction) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadFunction.ProtoReflect.Descriptor instead.
func (*VodUploadFunction) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{16}
}

func (x *VodUploadFunction) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VodUploadFunction) GetInput() *VodUploadFunctionInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type CommitUploadInfoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string               `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	CallbackArgs string               `protobuf:"bytes,2,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	SessionKey   string               `protobuf:"bytes,3,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	Functions    []*VodUploadFunction `protobuf:"bytes,4,rep,name=Functions,proto3" json:"Functions,omitempty"`
	GetMetaMode  string               `protobuf:"bytes,5,opt,name=GetMetaMode,proto3" json:"GetMetaMode,omitempty"`
}

func (x *CommitUploadInfoParam) Reset() {
	*x = CommitUploadInfoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitUploadInfoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitUploadInfoParam) ProtoMessage() {}

func (x *CommitUploadInfoParam) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitUploadInfoParam.ProtoReflect.Descriptor instead.
func (*CommitUploadInfoParam) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{17}
}

func (x *CommitUploadInfoParam) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *CommitUploadInfoParam) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *CommitUploadInfoParam) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *CommitUploadInfoParam) GetFunctions() []*VodUploadFunction {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *CommitUploadInfoParam) GetGetMetaMode() string {
	if x != nil {
		return x.GetMetaMode
	}
	return ""
}

type CommitRequestBodyJson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName    string `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SessionKey   string `protobuf:"bytes,2,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	CallbackArgs string `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Functions    string `protobuf:"bytes,4,opt,name=Functions,proto3" json:"Functions,omitempty"`
	GetMetaMode  string `protobuf:"bytes,5,opt,name=GetMetaMode,proto3" json:"GetMetaMode,omitempty"`
}

func (x *CommitRequestBodyJson) Reset() {
	*x = CommitRequestBodyJson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitRequestBodyJson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequestBodyJson) ProtoMessage() {}

func (x *CommitRequestBodyJson) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequestBodyJson.ProtoReflect.Descriptor instead.
func (*CommitRequestBodyJson) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{18}
}

func (x *CommitRequestBodyJson) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *CommitRequestBodyJson) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *CommitRequestBodyJson) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *CommitRequestBodyJson) GetFunctions() string {
	if x != nil {
		return x.Functions
	}
	return ""
}

func (x *CommitRequestBodyJson) GetGetMetaMode() string {
	if x != nil {
		return x.GetMetaMode
	}
	return ""
}

type ApplyUploadInfoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpaceName       string  `protobuf:"bytes,1,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	FileType        string  `protobuf:"bytes,2,opt,name=FileType,proto3" json:"FileType,omitempty"`
	SessionKey      string  `protobuf:"bytes,3,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
	FileSize        float64 `protobuf:"fixed64,4,opt,name=FileSize,proto3" json:"FileSize,omitempty"`
	MediaType       string  `protobuf:"bytes,5,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	TosKeys         string  `protobuf:"bytes,6,opt,name=TosKeys,proto3" json:"TosKeys,omitempty"`
	FileExtension   string  `protobuf:"bytes,7,opt,name=FileExtension,proto3" json:"FileExtension,omitempty"`
	FilePrefix      string  `protobuf:"bytes,8,opt,name=FilePrefix,proto3" json:"FilePrefix,omitempty"`
	FlushUploadMode int32   `protobuf:"varint,9,opt,name=FlushUploadMode,proto3" json:"FlushUploadMode,omitempty"`
	Md5             string  `protobuf:"bytes,10,opt,name=Md5,proto3" json:"Md5,omitempty"`
	StorageClass    int32   `protobuf:"varint,11,opt,name=StorageClass,proto3" json:"StorageClass,omitempty"`
}

func (x *ApplyUploadInfoParam) Reset() {
	*x = ApplyUploadInfoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyUploadInfoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyUploadInfoParam) ProtoMessage() {}

func (x *ApplyUploadInfoParam) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyUploadInfoParam.ProtoReflect.Descriptor instead.
func (*ApplyUploadInfoParam) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{19}
}

func (x *ApplyUploadInfoParam) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetFileSize() float64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ApplyUploadInfoParam) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetTosKeys() string {
	if x != nil {
		return x.TosKeys
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetFileExtension() string {
	if x != nil {
		return x.FileExtension
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetFilePrefix() string {
	if x != nil {
		return x.FilePrefix
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetFlushUploadMode() int32 {
	if x != nil {
		return x.FlushUploadMode
	}
	return 0
}

func (x *ApplyUploadInfoParam) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *ApplyUploadInfoParam) GetStorageClass() int32 {
	if x != nil {
		return x.StorageClass
	}
	return 0
}

type CommitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vid          string         `protobuf:"bytes,1,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Mid          string         `protobuf:"bytes,2,opt,name=Mid,proto3" json:"Mid,omitempty"`
	SourceInfo   *VodSourceInfo `protobuf:"bytes,3,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	PosterUri    string         `protobuf:"bytes,4,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	CallbackArgs string         `protobuf:"bytes,5,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{20}
}

func (x *CommitResponse) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *CommitResponse) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *CommitResponse) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *CommitResponse) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *CommitResponse) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type VodUploadOptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string `protobuf:"bytes,1,opt,name=TemplateId,proto3" json:"TemplateId,omitempty"`
}

func (x *VodUploadOptionInfo) Reset() {
	*x = VodUploadOptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadOptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadOptionInfo) ProtoMessage() {}

func (x *VodUploadOptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadOptionInfo.ProtoReflect.Descriptor instead.
func (*VodUploadOptionInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{21}
}

func (x *VodUploadOptionInfo) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

type VodUploadCallbackData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string               `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message      string               `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	CallbackArgs string               `protobuf:"bytes,3,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
	Vid          string               `protobuf:"bytes,4,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Mid          string               `protobuf:"bytes,5,opt,name=Mid,proto3" json:"Mid,omitempty"`
	SpaceName    string               `protobuf:"bytes,6,opt,name=SpaceName,proto3" json:"SpaceName,omitempty"`
	SourceInfo   *VodSourceInfo       `protobuf:"bytes,7,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	PosterUri    string               `protobuf:"bytes,8,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	OptionInfo   *VodUploadOptionInfo `protobuf:"bytes,9,opt,name=OptionInfo,proto3" json:"OptionInfo,omitempty"`
}

func (x *VodUploadCallbackData) Reset() {
	*x = VodUploadCallbackData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VodUploadCallbackData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VodUploadCallbackData) ProtoMessage() {}

func (x *VodUploadCallbackData) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VodUploadCallbackData.ProtoReflect.Descriptor instead.
func (*VodUploadCallbackData) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{22}
}

func (x *VodUploadCallbackData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *VodUploadCallbackData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VodUploadCallbackData) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

func (x *VodUploadCallbackData) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *VodUploadCallbackData) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *VodUploadCallbackData) GetSpaceName() string {
	if x != nil {
		return x.SpaceName
	}
	return ""
}

func (x *VodUploadCallbackData) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *VodUploadCallbackData) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *VodUploadCallbackData) GetOptionInfo() *VodUploadOptionInfo {
	if x != nil {
		return x.OptionInfo
	}
	return nil
}

type CallbackResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId string                 `protobuf:"bytes,1,opt,name=RequestId,proto3" json:"RequestId,omitempty"`
	Version   string                 `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	EventTime string                 `protobuf:"bytes,3,opt,name=EventTime,proto3" json:"EventTime,omitempty"`
	EventType string                 `protobuf:"bytes,4,opt,name=EventType,proto3" json:"EventType,omitempty"`
	Data      *VodUploadCallbackData `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *CallbackResponse) Reset() {
	*x = CallbackResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallbackResponse) ProtoMessage() {}

func (x *CallbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallbackResponse.ProtoReflect.Descriptor instead.
func (*CallbackResponse) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{23}
}

func (x *CallbackResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CallbackResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CallbackResponse) GetEventTime() string {
	if x != nil {
		return x.EventTime
	}
	return ""
}

func (x *CallbackResponse) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *CallbackResponse) GetData() *VodUploadCallbackData {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreUri string `protobuf:"bytes,1,opt,name=StoreUri,proto3" json:"StoreUri,omitempty"`
	Auth     string `protobuf:"bytes,2,opt,name=Auth,proto3" json:"Auth,omitempty"`
}

func (x *StoreInfo) Reset() {
	*x = StoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreInfo) ProtoMessage() {}

func (x *StoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreInfo.ProtoReflect.Descriptor instead.
func (*StoreInfo) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{24}
}

func (x *StoreInfo) GetStoreUri() string {
	if x != nil {
		return x.StoreUri
	}
	return ""
}

func (x *StoreInfo) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type HeaderPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *HeaderPair) Reset() {
	*x = HeaderPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderPair) ProtoMessage() {}

func (x *HeaderPair) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderPair.ProtoReflect.Descriptor instead.
func (*HeaderPair) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{25}
}

func (x *HeaderPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeaderPair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UploadAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreInfos   []*StoreInfo  `protobuf:"bytes,1,rep,name=StoreInfos,proto3" json:"StoreInfos,omitempty"`
	UploadHosts  []string      `protobuf:"bytes,2,rep,name=UploadHosts,proto3" json:"UploadHosts,omitempty"`
	UploadHeader []*HeaderPair `protobuf:"bytes,3,rep,name=UploadHeader,proto3" json:"UploadHeader,omitempty"`
	SessionKey   string        `protobuf:"bytes,4,opt,name=SessionKey,proto3" json:"SessionKey,omitempty"`
}

func (x *UploadAddress) Reset() {
	*x = UploadAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadAddress) ProtoMessage() {}

func (x *UploadAddress) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadAddress.ProtoReflect.Descriptor instead.
func (*UploadAddress) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{26}
}

func (x *UploadAddress) GetStoreInfos() []*StoreInfo {
	if x != nil {
		return x.StoreInfos
	}
	return nil
}

func (x *UploadAddress) GetUploadHosts() []string {
	if x != nil {
		return x.UploadHosts
	}
	return nil
}

func (x *UploadAddress) GetUploadHeader() []*HeaderPair {
	if x != nil {
		return x.UploadHeader
	}
	return nil
}

func (x *UploadAddress) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

type FlushUploadResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlushUpload  bool           `protobuf:"varint,1,opt,name=FlushUpload,proto3" json:"FlushUpload,omitempty"`
	Vid          string         `protobuf:"bytes,2,opt,name=Vid,proto3" json:"Vid,omitempty"`
	Mid          string         `protobuf:"bytes,3,opt,name=Mid,proto3" json:"Mid,omitempty"`
	SourceInfo   *VodSourceInfo `protobuf:"bytes,4,opt,name=SourceInfo,proto3" json:"SourceInfo,omitempty"`
	PosterUri    string         `protobuf:"bytes,5,opt,name=PosterUri,proto3" json:"PosterUri,omitempty"`
	CallbackArgs string         `protobuf:"bytes,6,opt,name=CallbackArgs,proto3" json:"CallbackArgs,omitempty"`
}

func (x *FlushUploadResult) Reset() {
	*x = FlushUploadResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushUploadResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushUploadResult) ProtoMessage() {}

func (x *FlushUploadResult) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushUploadResult.ProtoReflect.Descriptor instead.
func (*FlushUploadResult) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{27}
}

func (x *FlushUploadResult) GetFlushUpload() bool {
	if x != nil {
		return x.FlushUpload
	}
	return false
}

func (x *FlushUploadResult) GetVid() string {
	if x != nil {
		return x.Vid
	}
	return ""
}

func (x *FlushUploadResult) GetMid() string {
	if x != nil {
		return x.Mid
	}
	return ""
}

func (x *FlushUploadResult) GetSourceInfo() *VodSourceInfo {
	if x != nil {
		return x.SourceInfo
	}
	return nil
}

func (x *FlushUploadResult) GetPosterUri() string {
	if x != nil {
		return x.PosterUri
	}
	return ""
}

func (x *FlushUploadResult) GetCallbackArgs() string {
	if x != nil {
		return x.CallbackArgs
	}
	return ""
}

type ApplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadAddress     *UploadAddress     `protobuf:"bytes,1,opt,name=UploadAddress,proto3" json:"UploadAddress,omitempty"`
	FlushUploadResult *FlushUploadResult `protobuf:"bytes,2,opt,name=FlushUploadResult,proto3" json:"FlushUploadResult,omitempty"`
	SDKParam          string             `protobuf:"bytes,3,opt,name=SDKParam,proto3" json:"SDKParam,omitempty"`
}

func (x *ApplyResponse) Reset() {
	*x = ApplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vod_business_vod_upload_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyResponse) ProtoMessage() {}

func (x *ApplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vod_business_vod_upload_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyResponse.ProtoReflect.Descriptor instead.
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return file_vod_business_vod_upload_proto_rawDescGZIP(), []int{28}
}

func (x *ApplyResponse) GetUploadAddress() *UploadAddress {
	if x != nil {
		return x.UploadAddress
	}
	return nil
}

func (x *ApplyResponse) GetFlushUploadResult() *FlushUploadResult {
	if x != nil {
		return x.FlushUploadResult
	}
	return nil
}

func (x *ApplyResponse) GetSDKParam() string {
	if x != nil {
		return x.SDKParam
	}
	return ""
}

var File_vod_business_vod_upload_proto protoreflect.FileDescriptor

var file_vod_business_vod_upload_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76,
	0x6f, 0x64, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a,
	0x1d, 0x76, 0x6f, 0x64, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x76, 0x6f,
	0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82,
	0x03, 0x0a, 0x12, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x52, 0x4c, 0x53, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x12, 0x56, 0x6f, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x09, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x58, 0x0a, 0x0c, 0x56, 0x6f, 0x64,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x14, 0x56, 0x6f, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4f, 0x0a, 0x0d,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x52, 0x4c, 0x53, 0x65, 0x74, 0x52, 0x0d,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x4e, 0x6f, 0x74, 0x45, 0x78, 0x69, 0x73, 0x74, 0x4a,
	0x6f, 0x62, 0x49, 0x64, 0x73, 0x22, 0x64, 0x0a, 0x0d, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x53, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x1f,
	0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69,
	0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x69, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x09, 0x56, 0x6f, 0x64, 0x55, 0x52, 0x4c, 0x53,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x18, 0x56, 0x6f, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x70, 0x0a, 0x16, 0x56, 0x6f, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x56, 0x0a, 0x0d, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x56, 0x6f, 0x6c,
	0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f,
	0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0c, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x22, 0x3e, 0x0a, 0x0c, 0x56, 0x6f, 0x64,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x55, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x75, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x0d, 0x56, 0x6f, 0x64,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x68, 0x0a, 0x19, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x4b, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56,
	0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a,
	0x17, 0x56, 0x6f, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x22, 0xf0, 0x03, 0x0a, 0x16, 0x56, 0x6f,
	0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x46, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x54, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x75,
	0x74, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x0a,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x11,
	0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x05, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12,
	0x4f, 0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f,
	0x64, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xea,
	0x02, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x6f, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x54, 0x6f,
	0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x46, 0x69,
	0x6c, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x46,
	0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x46,
	0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xc5, 0x01, 0x0a, 0x0e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x69, 0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12,
	0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41,
	0x72, 0x67, 0x73, 0x22, 0x35, 0x0a, 0x13, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0xed, 0x02, 0x0a, 0x15, 0x56,
	0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72,
	0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56,
	0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f,
	0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x65,
	0x72, 0x55, 0x72, 0x69, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x53, 0x0a, 0x0a, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x56, 0x6f, 0x6c, 0x63,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd1, 0x01, 0x0a, 0x10, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56,
	0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x56, 0x6f, 0x64, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3b,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x75, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x0a, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xec, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73,
	0x12, 0x4e, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x22, 0xea, 0x01, 0x0a, 0x11, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x56, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x56, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x69, 0x64, 0x12, 0x4d, 0x0a, 0x0a,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f,
	0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x56, 0x6f, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x69, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x72, 0x67, 0x73, 0x22, 0xe1, 0x01,
	0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x53, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x5f, 0x0a, 0x11, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x64,
	0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x11, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x2a, 0x3a, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x10, 0x02, 0x42, 0xcd, 0x01,
	0x0a, 0x29, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x6f, 0x64, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x09, 0x56, 0x6f, 0x64,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x6f, 0x6c, 0x63, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x76, 0x6f, 0x6c, 0x63, 0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x6f, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xa0, 0x01, 0x01, 0xd8, 0x01,
	0x01, 0xc2, 0x02, 0x00, 0xca, 0x02, 0x20, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x5c, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0xe2, 0x02, 0x23, 0x56, 0x6f, 0x6c, 0x63, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x6f, 0x64, 0x5c, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vod_business_vod_upload_proto_rawDescOnce sync.Once
	file_vod_business_vod_upload_proto_rawDescData = file_vod_business_vod_upload_proto_rawDesc
)

func file_vod_business_vod_upload_proto_rawDescGZIP() []byte {
	file_vod_business_vod_upload_proto_rawDescOnce.Do(func() {
		file_vod_business_vod_upload_proto_rawDescData = protoimpl.X.CompressGZIP(file_vod_business_vod_upload_proto_rawDescData)
	})
	return file_vod_business_vod_upload_proto_rawDescData
}

var file_vod_business_vod_upload_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vod_business_vod_upload_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_vod_business_vod_upload_proto_goTypes = []interface{}{
	(StorageClassType)(0),                   // 0: Volcengine.Vod.Models.Business.StorageClassType
	(*VodUrlUploadURLSet)(nil),              // 1: Volcengine.Vod.Models.Business.VodUrlUploadURLSet
	(*VodUrlResponseData)(nil),              // 2: Volcengine.Vod.Models.Business.VodUrlResponseData
	(*ValuePair)(nil),                       // 3: Volcengine.Vod.Models.Business.ValuePair
	(*VodQueryData)(nil),                    // 4: Volcengine.Vod.Models.Business.VodQueryData
	(*VodQueryUploadResult)(nil),            // 5: Volcengine.Vod.Models.Business.VodQueryUploadResult
	(*VodCommitData)(nil),                   // 6: Volcengine.Vod.Models.Business.VodCommitData
	(*VodCommitUploadInfoResponseData)(nil), // 7: Volcengine.Vod.Models.Business.VodCommitUploadInfoResponseData
	(*VodURLSet)(nil),                       // 8: Volcengine.Vod.Models.Business.VodURLSet
	(*VodApplyUploadInfoResult)(nil),        // 9: Volcengine.Vod.Models.Business.VodApplyUploadInfoResult
	(*VodApplyUploadInfoData)(nil),          // 10: Volcengine.Vod.Models.Business.VodApplyUploadInfoData
	(*VodUploadAddress)(nil),                // 11: Volcengine.Vod.Models.Business.VodUploadAddress
	(*VodStoreInfo)(nil),                    // 12: Volcengine.Vod.Models.Business.VodStoreInfo
	(*VodHeaderPair)(nil),                   // 13: Volcengine.Vod.Models.Business.VodHeaderPair
	(*VodCommitUploadInfoResult)(nil),       // 14: Volcengine.Vod.Models.Business.VodCommitUploadInfoResult
	(*VodCommitUploadInfoData)(nil),         // 15: Volcengine.Vod.Models.Business.VodCommitUploadInfoData
	(*VodUploadFunctionInput)(nil),          // 16: Volcengine.Vod.Models.Business.VodUploadFunctionInput
	(*VodUploadFunction)(nil),               // 17: Volcengine.Vod.Models.Business.VodUploadFunction
	(*CommitUploadInfoParam)(nil),           // 18: Volcengine.Vod.Models.Business.CommitUploadInfoParam
	(*CommitRequestBodyJson)(nil),           // 19: Volcengine.Vod.Models.Business.CommitRequestBodyJson
	(*ApplyUploadInfoParam)(nil),            // 20: Volcengine.Vod.Models.Business.ApplyUploadInfoParam
	(*CommitResponse)(nil),                  // 21: Volcengine.Vod.Models.Business.CommitResponse
	(*VodUploadOptionInfo)(nil),             // 22: Volcengine.Vod.Models.Business.VodUploadOptionInfo
	(*VodUploadCallbackData)(nil),           // 23: Volcengine.Vod.Models.Business.VodUploadCallbackData
	(*CallbackResponse)(nil),                // 24: Volcengine.Vod.Models.Business.CallbackResponse
	(*StoreInfo)(nil),                       // 25: Volcengine.Vod.Models.Business.StoreInfo
	(*HeaderPair)(nil),                      // 26: Volcengine.Vod.Models.Business.HeaderPair
	(*UploadAddress)(nil),                   // 27: Volcengine.Vod.Models.Business.UploadAddress
	(*FlushUploadResult)(nil),               // 28: Volcengine.Vod.Models.Business.FlushUploadResult
	(*ApplyResponse)(nil),                   // 29: Volcengine.Vod.Models.Business.ApplyResponse
	(*VodSourceInfo)(nil),                   // 30: Volcengine.Vod.Models.Business.VodSourceInfo
}
var file_vod_business_vod_upload_proto_depIdxs = []int32{
	3,  // 0: Volcengine.Vod.Models.Business.VodUrlResponseData.Data:type_name -> Volcengine.Vod.Models.Business.ValuePair
	5,  // 1: Volcengine.Vod.Models.Business.VodQueryData.Data:type_name -> Volcengine.Vod.Models.Business.VodQueryUploadResult
	8,  // 2: Volcengine.Vod.Models.Business.VodQueryUploadResult.MediaInfoList:type_name -> Volcengine.Vod.Models.Business.VodURLSet
	7,  // 3: Volcengine.Vod.Models.Business.VodCommitData.Data:type_name -> Volcengine.Vod.Models.Business.VodCommitUploadInfoResponseData
	30, // 4: Volcengine.Vod.Models.Business.VodCommitUploadInfoResponseData.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	30, // 5: Volcengine.Vod.Models.Business.VodURLSet.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	10, // 6: Volcengine.Vod.Models.Business.VodApplyUploadInfoResult.Data:type_name -> Volcengine.Vod.Models.Business.VodApplyUploadInfoData
	11, // 7: Volcengine.Vod.Models.Business.VodApplyUploadInfoData.UploadAddress:type_name -> Volcengine.Vod.Models.Business.VodUploadAddress
	12, // 8: Volcengine.Vod.Models.Business.VodUploadAddress.StoreInfos:type_name -> Volcengine.Vod.Models.Business.VodStoreInfo
	13, // 9: Volcengine.Vod.Models.Business.VodUploadAddress.UploadHeader:type_name -> Volcengine.Vod.Models.Business.VodHeaderPair
	15, // 10: Volcengine.Vod.Models.Business.VodCommitUploadInfoResult.Data:type_name -> Volcengine.Vod.Models.Business.VodCommitUploadInfoData
	30, // 11: Volcengine.Vod.Models.Business.VodCommitUploadInfoData.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	16, // 12: Volcengine.Vod.Models.Business.VodUploadFunction.Input:type_name -> Volcengine.Vod.Models.Business.VodUploadFunctionInput
	17, // 13: Volcengine.Vod.Models.Business.CommitUploadInfoParam.Functions:type_name -> Volcengine.Vod.Models.Business.VodUploadFunction
	30, // 14: Volcengine.Vod.Models.Business.CommitResponse.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	30, // 15: Volcengine.Vod.Models.Business.VodUploadCallbackData.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	22, // 16: Volcengine.Vod.Models.Business.VodUploadCallbackData.OptionInfo:type_name -> Volcengine.Vod.Models.Business.VodUploadOptionInfo
	23, // 17: Volcengine.Vod.Models.Business.CallbackResponse.Data:type_name -> Volcengine.Vod.Models.Business.VodUploadCallbackData
	25, // 18: Volcengine.Vod.Models.Business.UploadAddress.StoreInfos:type_name -> Volcengine.Vod.Models.Business.StoreInfo
	26, // 19: Volcengine.Vod.Models.Business.UploadAddress.UploadHeader:type_name -> Volcengine.Vod.Models.Business.HeaderPair
	30, // 20: Volcengine.Vod.Models.Business.FlushUploadResult.SourceInfo:type_name -> Volcengine.Vod.Models.Business.VodSourceInfo
	27, // 21: Volcengine.Vod.Models.Business.ApplyResponse.UploadAddress:type_name -> Volcengine.Vod.Models.Business.UploadAddress
	28, // 22: Volcengine.Vod.Models.Business.ApplyResponse.FlushUploadResult:type_name -> Volcengine.Vod.Models.Business.FlushUploadResult
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_vod_business_vod_upload_proto_init() }
func file_vod_business_vod_upload_proto_init() {
	if File_vod_business_vod_upload_proto != nil {
		return
	}
	file_vod_business_vod_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_vod_business_vod_upload_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlUploadURLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUrlResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodQueryUploadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodURLSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodApplyUploadInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodStoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodHeaderPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodCommitUploadInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadFunctionInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadFunction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitUploadInfoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitRequestBodyJson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyUploadInfoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadOptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VodUploadCallbackData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallbackResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushUploadResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vod_business_vod_upload_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vod_business_vod_upload_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vod_business_vod_upload_proto_goTypes,
		DependencyIndexes: file_vod_business_vod_upload_proto_depIdxs,
		EnumInfos:         file_vod_business_vod_upload_proto_enumTypes,
		MessageInfos:      file_vod_business_vod_upload_proto_msgTypes,
	}.Build()
	File_vod_business_vod_upload_proto = out.File
	file_vod_business_vod_upload_proto_rawDesc = nil
	file_vod_business_vod_upload_proto_goTypes = nil
	file_vod_business_vod_upload_proto_depIdxs = nil
}
